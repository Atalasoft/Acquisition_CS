<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Atalasoft.DotTwain</name>
    </assembly>
    <members>
        <member name="T:Atalasoft.Twain.Acquisition">
            <summary> This is the main class for image acquisitions.  Use this class by itself for standard acquires, or
            use it to get a <see cref="T:Atalasoft.Twain.Device" /> object for more control over the acquire operation.  For low level access to
            Twain, use the <see cref="T:Atalasoft.Twain.TwainController" /> object.</summary>
            <example>
<code lang="CS" title="Acquire an image (C#)"><![CDATA[
// Create an instance of Acquisition and set the ImageAcquired event.
Acquisition acquisition = new Acquisition(this);
acquisition.ImageAcquired += new ImageAcquiredEventHandler(OnImageAcquired);

private void AcquireImage()
{
    // Acquire an image.
    acquisition.Acquire();
}

private void OnImageAcquired(object sender, AcquireEventArgs e)
{
    // Make sure the acquire was successful.
    // If so, load it into a PictureBox.
    if (e.Image != null)
        this.picture1.Image = e.Image;
}
]]></code>

<code lang="VB" title="Acquire an image (Visual Basic)"><![CDATA[
' Create an instance of Acquisition and set the ImageAcquired event.
Dim acquisition As Acquisition =  New Acquisition(Me) 
acquisition.ImageAcquired += New ImageAcquiredEventHandler(OnImageAcquired)
 
Private  Sub AcquireImage()
    ' Acquire an image.
    acquisition.Acquire()
End Sub
 
Private  Sub OnImageAcquired(ByVal sender As Object, ByVal e As AcquireEventArgs)
    ' Make sure the acquire was successful.
    ' If so, load it into a PictureBox.
    If Not e.Image Is Nothing Then
        Me.picture1.Image = e.Image
    End If
End Sub
]]></code>
</example>
            <remarks> <para><STRONG>Acquisition</STRONG> is also a component which can be added to the Visual Studio .NET
            toolbox.  This enables properties and events to be established at design time.</para> </remarks>
        </member>
        <member name="E:Atalasoft.Twain.Acquisition.ImageAcquired">
            <remarks> <para>All pending image acquisitions can be cancelled by setting the <see cref="P:Atalasoft.Twain.AcquireEventArgs.CancelPending" /> property of the <see cref="T:Atalasoft.Twain.AcquireEventArgs" /> to true. </para>
            <para>To transfer the returned <STRONG>Bitmap</STRONG> to an <STRONG>AtalaImage</STRONG> when integrating with
            DotImage, use the <STRONG>AtalaImage.FromBitmap</STRONG> method.</para>
            <para>When scanning multiple pages at once, this method can be used to compose a multipage image by invoking the
            <STRONG>Images.Add</STRONG> method of the <STRONG>Workspace</STRONG> object in DotImage.</para> </remarks>
            <summary> This event will fire for each image acquired. </summary>
            <seealso cref="T:Atalasoft.Twain.AcquireEventArgs" />
            <example> Acquisition Class </example>
            <example>
<code lang="CS" title="ImageAcquiredCS (C#)"><![CDATA[
private void acquisition_ImageAcquired(object sender, Atalasoft.Twain.AcquireEventArgs e)
{
    if (e.Image != null)
        this.pictureBox1.Image = e.Image;
    else if (e.FileName != null && File.Exists(e.FileName))
        this.pictureBox1.Image = Image.FromFile(e.FileName);
}
]]></code>

<code lang="VB" title="ImageAcquiredVB (Visual Basic)"><![CDATA[
Private  Sub acquisition_ImageAcquired(ByVal sender As Object, ByVal e As Atalasoft.Twain.AcquireEventArgs)
    If Not e.Image Is Nothing Then
        Me.pictureBox1.Image = e.Image
    Else If e.FileName <> Nothing And File.Exists(e.FileName) Then 
        Me.pictureBox1.Image = Image.FromFile(e.FileName)
    End If
End Sub
]]></code>
</example>
        </member>
        <member name="E:Atalasoft.Twain.Acquisition.DeviceEvent">
            <summary> This event will fire when the device sends one of the <see cref="T:Atalasoft.Twain.DeviceEventFlags" />. </summary>
            <remarks> You have to setup which events you want to receive, if any, by setting the <see cref="P:Atalasoft.Twain.Device.DeviceEvents" /> property of a <see cref="T:Atalasoft.Twain.Device" /> object. </remarks>
            <seealso cref="T:Atalasoft.Twain.Device" />
            <seealso cref="T:Atalasoft.Twain.DeviceEventFlags" />
            <seealso cref="T:Atalasoft.Twain.DeviceEventArgs" />
            <example>
<code lang="CS" title="DeviceEventCS (C#)"><![CDATA[
private void acquisition_DeviceEvent(object sender, Atalasoft.Twain.DeviceEventArgs e)
{
    // One of the many device events has fired.
    // You will only receive the events you have set using
    // the Device.DeviceEvents property.
    if (e.Event == DeviceEventFlags.PaperJam)
        MessageBox.Show(this, "Paper jam!!!");
    else
        MessageBox.Show(this, "Device Event:  " + e.Event.ToString());
}
]]></code>

<code lang="VB" title="DeviceEventVB (Visual Basic)"><![CDATA[
Private  Sub acquisition_DeviceEvent(ByVal sender As Object, ByVal e As Atalasoft.Twain.DeviceEventArgs)
    ' One of the many device events has fired.
    ' You will only receive the events you have set using
    ' the Device.DeviceEvents property.
    If e.Event = DeviceEventFlags.PaperJam Then
        MessageBox.Show(Me, "Paper jam!!!")
    Else 
        MessageBox.Show(Me, "Device Event:  " + e.Event.ToString())
    End If
End Sub
]]></code>
</example>
        </member>
        <member name="E:Atalasoft.Twain.Acquisition.AcquireCanceled">
            <summary> This event will fire if the user has canceled the acquisition. </summary>
            <example>
<code lang="CS" title="AcquireCanceledCS (C#)"><![CDATA[
private void acquisition_AcquireCanceled(object sender, System.EventArgs e)
{
    this.device.Close();
    MessageBox.Show(this, "Acquisition was canceled.");
}
]]></code>

<code lang="VB" title="AcquireCanceledVB (Visual Basic)"><![CDATA[
Private  Sub acquisition_AcquireCanceled(ByVal sender As Object, ByVal e As System.EventArgs)
    Me.device.Close()
    MessageBox.Show(Me, "Acquisition was canceled.")
End Sub
]]></code>
</example>
        </member>
        <member name="E:Atalasoft.Twain.Acquisition.AcquireFinished">
            <summary> This event will fire when all of the images have been acquired.  This is useful when a document feeder is
            used. </summary>
            <example>
<code lang="CS" title="AcquireFinishedCS (C#)"><![CDATA[
private void acquisition_AcquireFinished(object sender, System.EventArgs e)
{
    // This is the only event where you should call the Close method.
    // AcquireFinished fires after all images have been acquired.
    // Note that you can call Close anytime if you need to cancel
    // any pending transfers and do a quick shutdown of your application.
    this.device.Close();
}
]]></code>

<code lang="VB" title="AcquireFinishedVB (Visual Basic)"><![CDATA[
Private  Sub acquisition_AcquireFinished(ByVal sender As Object, ByVal e As System.EventArgs)
    ' This is the only event where you should call the Close method.
    ' AcquireFinished fires after all images have been acquired.
    ' Note that you can call Close anytime if you need to cancel
    ' any pending transfers and do a quick shutdown of your application.
    Me.device.Close()
End Sub
]]></code>
</example>
        </member>
        <member name="E:Atalasoft.Twain.Acquisition.FileTransfer">
            <summary> This event will fire just before acquiring an image directly to file.  You must fill in the <see cref="P:Atalasoft.Twain.FileTransferEventArgs.FileName" /> property of the <see cref="T:Atalasoft.Twain.FileTransferEventArgs" /> object. </summary>
            <remarks> You can cancel the acquisition by setting the <see cref="P:Atalasoft.Twain.FileTransferEventArgs.CancelPending" /> property
            of the <see cref="T:Atalasoft.Twain.FileTransferEventArgs" /> to true. </remarks>
            <example>
<code lang="CS" title="Scan to file (C#)"><![CDATA[
// Create an instance of Acquisition and set the FileTransfer event.
Acquisition acquisition = new Acquisition(this);
acquisition.FileTransfer += new FileTransferEventHandler(OnFileTransfer);

// We use the AcquireFinished event to know when to close the device.
acquisition.AcquireFinished += new System.EventHandler(OnAcquireFinished);

// The call is asynchronous, so hold onto the device object.
Device dev = null;

// A count variable used to create unique filenames.
int fileCount = 0;

private void AcquireImageToFile()
{
    // We are going to acquire from the default device.
    this.dev = this.acquisition.Devices.Default;
    
    // You have to open the device before you can get property values.
    this.dev.Open();
    
    // See if the device supports the TIFF format.
    SourceFileFormats[] formats = this.dev.GetSupportedImageFormats();
    bool canSaveToFile = false;
    
    foreach(SourceFileFormats format in formats) {
        if (format == SourceFileFormats.Tiff)
        {
            // Tell the device which format to use.
            this.dev.FileFormat = format;
            canSaveToFile = true;
            break;
        }
    }
    
    if (canSaveToFile == false)
    {
        // Be sure to close the device connection.
        this.dev.Close();
        MessageBox.Show(this, "This device doesn't allow saving to TIFF.");
        return;
    }
    
    // Acquire the image to file.
    this.dev.Acquire(false, true);
}

private void OnFileTransfer(object sender, FileTransferEventArgs e)
{
    // Set the filename for this image.
    fileCount++;
    e.FileName = imageFolder + "image" + fileCount.ToString() + ".tif";
}

private void OnAcquireFinished(object sender, System.EventArgs e)
{
    // Do not forget to close the device.
    if (this.dev != null)
        this.dev.Close();
}
]]></code>

<code lang="VB" title="Scan to file (Visual Basic)"><![CDATA[
' Create an instance of Acquisition and set the FileTransfer event.
Dim acquisition As Acquisition = New Acquisition(Me) 
acquisition.FileTransfer += New FileTransferEventHandler(OnFileTransfer)
 
' We use the AcquireFinished event to know when to close the device.
acquisition.AcquireFinished += New System.EventHandler(OnAcquireFinished)
 
' The call is asynchronous, so hold onto the device object.
Dim dev As Device = Nothing 
 
' A count variable used to create unique filenames.
Dim fileCount As Integer =  0 
 
Private  Sub AcquireImageToFile()
    ' We are going to acquire from the default device.
    Me.dev = Me.acquisition.Devices.Default
 
    ' You have to open the device before you can get property values.
    Me.dev.Open()
 
    ' See if the device supports the TIFF format.
    Dim formats() As SourceFileFormats = Me.dev.GetSupportedImageFormats() 
    Dim canSaveToFile As Boolean = False 
 
    Dim Format As SourceFileFormats
    For Each Format In formats
        If Format = SourceFileFormats.Tiff Then
            ' Tell the device which format to use.
            Me.dev.FileFormat = Format
            canSaveToFile = True
            Exit For
        End If
    Next
 
    If canSaveToFile = False Then
        ' Be sure to close the device connection.
        Me.dev.Close()
        MessageBox.Show(this, "This device doesn't allow saving to TIFF.")
        Return
    End If
 
    ' Acquire the image to file.
    Me.dev.Acquire(False, True)
End Sub
 
Private  Sub OnFileTransfer(ByVal sender As Object, ByVal e As FileTransferEventArgs)
    ' Set the filename for this image.
    fileCount = fileCount + 1
    e.FileName = imageFolder & "image" & fileCount.ToString() & ".tif"
End Sub
 
Private  Sub OnAcquireFinished(ByVal sender As Object, ByVal e As System.EventArgs)
    ' Do not forget to close the device.
    If Not Me.dev Is Nothing Then
        Me.dev.Close()
    End If
End Sub
]]></code>
</example>
        </member>
        <member name="E:Atalasoft.Twain.Acquisition.AsynchronousException">
            <summary> This event is raised when an exception is thrown during an asynchronous acquisition. </summary>
            <seealso cref="T:Atalasoft.Twain.AsynchronousExceptionEventHandler" />
            <example>
<code lang="CS" title="AsynchronousExceptionCS (C#)"><![CDATA[
private void acquisition_AsynchronousException(object sender, Atalasoft.Twain.AsynchronousExceptionEventArgs e)
{
    ' Let the user know something happened.
    MessageBox.Show(this, e.Exception.Message, "Asynchronous Exception");
}
]]></code>

<code lang="VB" title="AsynchronousExceptionVB (Visual Basic)"><![CDATA[
Private  Sub acquisition_AsynchronousException(ByVal sender As Object, ByVal e As Atalasoft.Twain.AsynchronousExceptionEventArgs)
    ' Let the user know something happened.
    MessageBox.Show(this, e.Exception.Message, "Asynchronous Exception")
End Sub
]]></code>
</example>
        </member>
        <member name="E:Atalasoft.Twain.Acquisition.BeforeTwainDataTransfer">
            <summary> This event will fire before the data is transferred from the device, allow the transfer to be canceled.
            </summary>
            <remarks> The image information may not be exactly what the resulting image will be, since a device doesn't know for
            sure until it has performed the scan. </remarks>
            <example>
<code lang="CS" title="BeforeTwainDataTransferCS (C#)"><![CDATA[
private void acquisition_BeforeTwainDataTransfer(object sender, TwainDataImageInfoArgs e)
{
    // Only scan 1-bit images.
    if (e.ImageInfo.PixelType != ImagePixelType.BlackAndWhite)
        e.Cancel = true;
}
]]></code>

<code lang="VB" title="BeforeTwainDataTransferVB (Visual Basic)"><![CDATA[
Private  Sub acquisition_BeforeTwainDataTransfer(ByVal sender As Object, ByVal e As TwainDataImageInfoArgs)
    ' Only scan 1-bit images.
    If e.ImageInfo.PixelType <> ImagePixelType.BlackAndWhite Then
        e.Cancel = True
    End If
End Sub
]]></code>
</example>
        </member>
        <member name="E:Atalasoft.Twain.Acquisition.TwainDataTransfer">
            <summary> This event fires after the data has been transferred but before it has been processed by DotTwain.
            </summary>
            <remarks> This event allows for processing of data DotTwain does not support, such as unique image formats.  If this
            data should not be processed by DotTwain, set the <see cref="P:Atalasoft.Twain.MemoryDataTransferEventArgs.DataHandled" /> property of the
            <see cref="T:Atalasoft.Twain.MemoryDataTransferEventArgs" /> to true. </remarks>
            <example>
<code lang="CS" title="TwainDataTransferCS (C#)"><![CDATA[
private void acquisition_TwainDataTransfer(object sender, TwainDataTransferArgs e)
{
    // Process the data instead of letting DotTwain do it.
    e.DataHandled = true;

    // ... processing ...

    // Free the memory.
    System.Runtime.InteropServices.Marshal.FreeHGlobal(e.Data);
}
]]></code>

<code lang="VB" title="TwainDataTransferVB (Visual Basic)"><![CDATA[
Private  Sub acquisition_TwainDataTransfer(ByVal sender As Object, ByVal e As TwainDataTransferArgs)
    ' Process the data instead of letting DotTwain do it.
    e.DataHandled = True
 
    ' ... processing ...
 
    ' Free the memory.
    System.Runtime.InteropServices.Marshal.FreeHGlobal(e.Data)
End Sub
]]></code>
</example>
        </member>
        <member name="E:Atalasoft.Twain.Acquisition.MemoryDataTransfer">
            <summary> Raised during a memory transfer to allow custom handling of the image data. </summary>
        </member>
        <member name="E:Atalasoft.Twain.Acquisition.MemoryFileTransfer">
            <summary> Raised during a file transfer to allow custom handling of the image data. </summary>
        </member>
        <member name="M:Atalasoft.Twain.Acquisition.#ctor">
            <overloads> These constructors create an instance of the Acquisition object. </overloads>
            <summary> Creates a new instance of Acquisition. </summary>
            <remarks> You must set the <see cref="P:Atalasoft.Twain.Acquisition.Parent"/> property of the Acquisition object before you can use
            any of the methods or properties. </remarks>
            <seealso cref="P:Atalasoft.Twain.Acquisition.Parent"/>
        </member>
        <member name="M:Atalasoft.Twain.Acquisition.#ctor(System.Windows.Forms.IWin32Window)">
            <summary> Creates an instance of <STRONG>Acquisition</STRONG> specifying the parent window. </summary>
            <remarks> Twain uses the parent's message loop to pass instructions from the device to DotTwain.  If a parent window
            is not provided, DotTwain will create a hidden window for Twain to use.  Be aware that some devices will fail if the
            parent window is hidden, so whenever possible it's best to provide a visible parent window. </remarks>
            <exception> This will be thrown if the parent parameter is null. </exception>
            <param name="parent"> The window that will act as the parent.  The parent must derive from
            <STRONG>System.Windows.Forms.Control</STRONG> for background threading during a scan. </param>
        </member>
        <member name="M:Atalasoft.Twain.Acquisition.Finalize">
            <summary> Calls Dispose(). </summary>
        </member>
        <member name="M:Atalasoft.Twain.Acquisition.Dispose(System.Boolean)">
            <remarks> When you are finished using the <see cref="T:Atalasoft.Twain.Acquisition"/> object, you can call this method to make sure
            all of the connections and resources have been closed and freed. </remarks>
            <summary> Closes any TWAIN connections and releases resources back to the system. </summary>
            <param name="isDisposing"> Indicates whether this method was called from Dispose or the Finalizer. </param>
        </member>
        <member name="P:Atalasoft.Twain.Acquisition.Parent">
            <summary> Gets or sets the parent window for the acquisition. </summary>
            <value> The parent window used for the acquisition.  The parent must derive from
            <STRONG>System.Windows.Forms.Control</STRONG> for background threading during a scan. </value>
            <remarks> <para>If a parent window is not provided, DotTwain will create a hidden window to act as the
            parent.</para>
            <para>Because some drivers do not function properly with hidden windows, this property should be set to a visible
            window whenever possible.</para> </remarks>
        </member>
        <member name="M:Atalasoft.Twain.Acquisition.CreateDeviceSession(System.String)">
            <summary> <para>Returns a new <see cref="T:Atalasoft.Twain.Device"/> class that uses its own <see cref="T:Atalasoft.Twain.TwainController"/> instead of
            the controller used by the <STRONG>Acquisition</STRONG> object for a single session scan.  This may be required for
            some remote systems such as Citrix.</para> </summary>
            <returns> A new <see cref="T:Atalasoft.Twain.Device"/> object.  You <STRONG>must Dispose</STRONG> this object when you are done with it.
            </returns>
            <param name="productName"> The product name of the scanner to connect to</param>
        </member>
        <member name="P:Atalasoft.Twain.Acquisition.IsDisposed">
            <summary> Gets a value indicating whether this class has been disposed. </summary>
            <value> A value indicating whether this class has been disposed. </value>
        </member>
        <member name="P:Atalasoft.Twain.Acquisition.Devices">
            <summary> <para>Gets a collection of installed <see cref="T:Atalasoft.Twain.Device"/> for this system.</para> </summary>
            <seealso cref="T:Atalasoft.Twain.Device"/>
            <value> A <see cref="T:Atalasoft.Twain.DeviceCollection"/> object containing Twain compatible devices found on the system. </value>
            <remarks> It's possible a device may be listed even when it's not connected. </remarks>
        </member>
        <member name="P:Atalasoft.Twain.Acquisition.SystemHasTwain">
            <summary> Gets a value indicating if the system has twain_32.dll installed. </summary>
            <value> True if the system has the twain_32.dll. </value>
            <remarks> The Twain library has been installed with Windows since Windows 98, so it's rare that a system will not
            have it installed.  Any scanning features in your application should be disabled if this property returns false.
            </remarks>
        </member>
        <member name="M:Atalasoft.Twain.Acquisition.ShowSelectSource">
            <summary> Displays the "Select Source" dialog, allowing end users to select the device they want to use. </summary>
            <returns> The device selected by the user. </returns>
            <remarks> If the user presses the "Cancel" button, this will return the current system default device.  If no
            devices are listed in the dialog, this will return null (Nothing in VB). </remarks>
            <example>
<code lang="CS" title="ShowSelectCS (C#)"><![CDATA[
this.device = this.acquisition.ShowSelectSource();
if (this.device == null)
{
    MessageBox.Show(this, "No Twain devices were found on your system.");
    return;
}
]]></code>

<code lang="VB" title="ShowSelectVB (Visual Basic)"><![CDATA[
Me.device = Me.acquisition.ShowSelectSource()
If Me.device Is Nothing Then
    MessageBox.Show(Me, "No Twain devices were found on your system.")
    Return
End If
]]></code>
</example>
            <exception> Thrown if twain does not exist on the system. </exception>
            <exception> Thrown is there is a Twain error during this process. </exception>
        </member>
        <member name="M:Atalasoft.Twain.Acquisition.AcquireModal(System.Boolean)">
            <summary> Acquires a single image synchronously instead of using the <see cref="E:Atalasoft.Twain.Acquisition.ImageAcquired" /> event.
            </summary>
            <returns> The acquired image. </returns>
            <remarks> <para>This is useful if you want a quick and easy acquire of a single image.</para>
            <para>The ImageAcquired and <see cref="E:Atalasoft.Twain.Acquisition.AcquireFinished" /> events do not fire when using this
            method.</para> </remarks>
            <example>
<code lang="CS" title="Modal Acquisition (C#)"><![CDATA[
// Create an instance of Acquisition.
Acquisition acquisition = new Acquisition();

// Acquire the image, but do not show the scanner interface.
Bitmap bmp = acquisition.AcquireModal(true, false);

// Free the Acquisition object.
acquisition.Dispose();
]]></code>

<code lang="VB" title="Modal Acquisition (Visual Basic)"><![CDATA[
' Create an instance of Acquisition.
Dim acquisition As Acquisition =  New Acquisition() 
 
' Acquire the image, but don't show the scanner interface.
Dim bmp As Bitmap =  acquisition.AcquireModal(True,False) 
 
' Free the Acquisition object.
acquisition.Dispose()
]]></code>
</example>
            <param name="hideInterface"> Determines if the driver interface is displayed. </param>
        </member>
        <member name="M:Atalasoft.Twain.Acquisition.Acquire">
            <summary> Acquires an image from the system default device. </summary>
            <example> Acquisition Class </example>
            <overloads> The acquire methods begin the transfer of data from the device to DotTwain. </overloads>
            <remarks> The <see cref="E:Atalasoft.Twain.Acquisition.ImageAcquired"/> event must be handled as it is raised for each image that is
            acquired. </remarks>
        </member>
        <member name="P:Atalasoft.Twain.Acquisition.ApplicationIdentity">
            <summary> Gets the TwainIdentity object containing application information that is sent to Twain. </summary>
            <value> A TwainIdentity object for application information. </value>
            <remarks> This information should only be set or modified before or after a Twain session. </remarks>
        </member>
        <member name="T:Atalasoft.Twain.TwainDeviceCallbackEventHandler">
            <summary> <para>This delegate is used with the <see
            cref="M:Atalasoft.Twain.TwainController.RegisterTwainCallback(Atalasoft.Twain.TwainDeviceCallbackEventHandler)"/> method to allow the use of a
            callback instead of a message loop for device communication.</para>
            <para>This feature is only available when using TWAIN 2.0 or higher.</para> </summary>
            <returns> The return code to send back to the driver. </returns>
            <remarks> The callback must return quickly.  If a process is going to take time, it must be performed in a separate
            thread. </remarks>
            <param name="controller"> The <see cref="T:Atalasoft.Twain.TwainController"/> that received the callback. </param>
            <param name="e"> A <see cref="T:Atalasoft.Twain.TwainDeviceCallbackEventArgs"/> containing information for this callback. </param>
        </member>
        <member name="T:Atalasoft.Twain.TwainDeviceCallbackEventArgs">
            <summary> This class is used with the <see cref="T:Atalasoft.Twain.TwainDeviceCallbackEventHandler"/> and provides information passed
            from the device to the application. </summary>
        </member>
        <member name="M:Atalasoft.Twain.TwainDeviceCallbackEventArgs.#ctor(Atalasoft.Twain.TwainIdentity,Atalasoft.Twain.TwainIdentity,System.UInt32,System.UInt16,System.UInt16,System.IntPtr)">
            <summary> Creates a new instance of <STRONG>TwainDeviceCallbackEventArgs</STRONG>. </summary>
            <param name="application"> The application identity. </param>
            <param name="device"> The device identity. </param>
            <param name="dataGroup"> The data group value. </param>
            <param name="argumentType"> The argument type. </param>
            <param name="message"> The message. </param>
            <param name="data"> A pointer to the data. </param>
        </member>
        <member name="P:Atalasoft.Twain.TwainDeviceCallbackEventArgs.ApplicationIdentity">
            <summary> Gets the application identity. </summary>
            <value> The application identity. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainDeviceCallbackEventArgs.DeviceIdentity">
            <summary> Gets the device identity. </summary>
            <value> The device identity. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainDeviceCallbackEventArgs.DataGroup">
            <summary> Gets the data group. </summary>
            <value> The data group. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainDeviceCallbackEventArgs.ArgumentType">
            <summary> Gets the argument type. </summary>
            <value> The argument type. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainDeviceCallbackEventArgs.Message">
            <summary> Gets the twain message. </summary>
            <value> The twain message. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainDeviceCallbackEventArgs.Data">
            <summary> Get a pointer to the data.  This is usually IntPtr.Zero. </summary>
            <value> A pointer to the data, if any. </value>
        </member>
        <member name="T:Atalasoft.Twain.AsynchronousExceptionEventHandler">
            <summary> This event handler is used to notify the application of any exceptions during an asynchronous acquisition.
            </summary>
            <param name="sender"> The <STRONG>Acquisition</STRONG> object. </param>
            <param name="e"> An <STRONG>AsynchronousExceptionEventArgs</STRONG> class containing the exception. </param>
        </member>
        <member name="T:Atalasoft.Twain.AsynchronousExceptionEventArgs">
            <summary> This class is passed to an <see cref="T:Atalasoft.Twain.AsynchronousExceptionEventHandler"/> when there is an exception
            during an asynchronous acquisition. </summary>
            <seealso cref="T:Atalasoft.Twain.AsynchronousExceptionEventHandler"/>
            <seealso cref="E:Atalasoft.Twain.Acquisition.AsynchronousException"/>
            <example> AsynchronousException Event </example>
        </member>
        <member name="P:Atalasoft.Twain.AsynchronousExceptionEventArgs.Exception">
            <summary> The exception which occurred during an asynchronous acquisition. </summary>
            <value> The exception that was thrown. </value>
        </member>
        <member name="T:Atalasoft.Twain.ImageAcquiredEventHandler">
            <summary> This event handler is used to notify the application when an image has been acquired. </summary>
            <param name="sender"> The Acquisition object which sent the event. </param>
            <param name="e"> An <see cref="T:Atalasoft.Twain.AcquireEventArgs"/> object containing information about the event. </param>
        </member>
        <member name="T:Atalasoft.Twain.AcquireEventArgs">
            <summary>
            Contains information about the image just acquired.
            </summary>
        </member>
        <member name="M:Atalasoft.Twain.AcquireEventArgs.#ctor(System.Drawing.Bitmap,System.Int32,System.String,System.IO.Stream,System.Collections.Hashtable,System.Boolean)">
            <summary> Contains information about the image just acquired. </summary>
            <seealso cref="T:Atalasoft.Twain.ImageAcquiredEventHandler" />
            <remarks> It is the responsibility of the application to dispose of the image provided in the <see cref="E:Atalasoft.Twain.Acquisition.ImageAcquired" /> event. </remarks>
            <example>
<code lang="CS" title="ImageAcquiredCS (C#)"><![CDATA[
private void acquisition_ImageAcquired(object sender, Atalasoft.Twain.AcquireEventArgs e)
{
    if (e.Image != null)
        this.pictureBox1.Image = e.Image;
    else if (e.FileName != null && File.Exists(e.FileName))
        this.pictureBox1.Image = Image.FromFile(e.FileName);
}
]]></code>

<code lang="VB" title="ImageAcquiredVB (Visual Basic)"><![CDATA[
Private  Sub acquisition_ImageAcquired(ByVal sender As Object, ByVal e As Atalasoft.Twain.AcquireEventArgs)
    If Not e.Image Is Nothing Then
        Me.pictureBox1.Image = e.Image
    Else If e.FileName <> Nothing And File.Exists(e.FileName) Then 
        Me.pictureBox1.Image = Image.FromFile(e.FileName)
    End If
End Sub
]]></code>
</example>
        </member>
        <member name="P:Atalasoft.Twain.AcquireEventArgs.OutputStream">
            <summary> Gets the <STRONG>Stream</STRONG> where image data was saved from a <STRONG>TWSX_MEMORY</STRONG> or
            <STRONG>TWSX_MEMFILE</STRONG> transfer. </summary>
            <value> The <STRONG>Stream</STRONG> provided by the application to save the image data into. </value>
            <remarks> To provide a stream for saving the image data, handle the <see cref="E:Atalasoft.Twain.TwainController.MemoryDataTransfer"/>
            or <see cref="E:Atalasoft.Twain.TwainController.MemoryFileTransfer"/> event (depending on which transfer method is used). </remarks>
        </member>
        <member name="P:Atalasoft.Twain.AcquireEventArgs.ExtendedImageInfo">
            <summary> Gets a Hashtable containing extended image information retrieved from the device for this acquisition.
            </summary>
            <value> A Hashtable containing the extended information.  The table keys are the <see
            cref="T:Atalasoft.Twain.TwainExtendedImageInfoID"/> values set with <see cref="M:Atalasoft.Twain.Device.SetExtendedImageInfoOptions(Atalasoft.Twain.TwainExtendedImageInfoID[])"/> method.  If no
            items were retrieved this property will return null (Nothing in VB). </value>
            <remarks> This is an advanced feature and requires some knowledge of the Twain specification.  The object values in
            the Hashtable may be a single value or an array of values if multiple items for a TwainExtendedImageInfoID is
            available for the page. </remarks>
        </member>
        <member name="P:Atalasoft.Twain.AcquireEventArgs.EndOfJob">
            <summary> Gets a value indicating whether this is the last image in a batch job. </summary>
            <value> True if this is the last image in a batch job. </value>
            <remarks> Batch jobs are negotiated using the <see cref="P:Atalasoft.Twain.Device.JobControl"/> property of the <see cref="T:Atalasoft.Twain.Device"/>
            class. </remarks>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedJobControls"/>
            <seealso cref="P:Atalasoft.Twain.Device.JobControl"/>
        </member>
        <member name="P:Atalasoft.Twain.AcquireEventArgs.Image">
            <summary> Gets the Bitmap image acquired. </summary>
            <value> The acquired image. </value>
            <remarks> It is the responsibility of the application to free this image when it's no longer needed. </remarks>
            <example> AcquireEventArgs Class </example>
        </member>
        <member name="P:Atalasoft.Twain.AcquireEventArgs.PendingImages">
            <summary> Gets the number of images waiting to be acquired. </summary>
            <value> Number of images waiting to be acquired.  If this value is -1, there are more images to be acquired but the
            device does not know how many. </value>
        </member>
        <member name="P:Atalasoft.Twain.AcquireEventArgs.CancelPending">
            <summary> Gets or sets a value which determines if the pending images will be acquired. </summary>
            <value> A value indicating whether the rest of the images waiting to be acquired should be canceled. </value>
        </member>
        <member name="P:Atalasoft.Twain.AcquireEventArgs.FileName">
            <summary> Gets the filename of the image when acquired to file. </summary>
            <value> The filename of the acquired image. </value>
            <example> AcquireEventArgs Class </example>
        </member>
        <member name="T:Atalasoft.Twain.DeviceEventHandler">
            <summary> This event handler is used to pass the <see cref="T:Atalasoft.Twain.DeviceEventFlags"/>s to the application. </summary>
            <seealso cref="T:Atalasoft.Twain.DeviceEventFlags"/>
            <param name="sender"> The Acquisition object which sent the event. </param>
            <param name="e"> A <see cref="T:Atalasoft.Twain.DeviceEventArgs"/> object containing information about the event. </param>
        </member>
        <member name="T:Atalasoft.Twain.DeviceEventArgs">
            <summary> Contains information about a device event. </summary>
            <remarks> Which properties are filled depends on the <see cref="T:Atalasoft.Twain.DeviceEventFlags"/> which fired. </remarks>
            <seealso cref="T:Atalasoft.Twain.DeviceEventFlags"/>
        </member>
        <member name="P:Atalasoft.Twain.DeviceEventArgs.CancelPending">
            <summary> Gets or sets a value which determines if the pending images will be acquired. </summary>
            <value> A value indicating whether any pending pages are canceled. </value>
        </member>
        <member name="P:Atalasoft.Twain.DeviceEventArgs.Event">
            <summary> Gets the event that was triggered. </summary>
            <remarks> For events such as PaperJam or PaperDoubleFeed, you may want to cancel any pending acquisitions.
            </remarks>
            <value> The event that was triggered. </value>
        </member>
        <member name="P:Atalasoft.Twain.DeviceEventArgs.DeviceName">
            <summary> Gets the product name of the device which fired the event. </summary>
            <value> The name of the device. </value>
        </member>
        <member name="P:Atalasoft.Twain.DeviceEventArgs.BatteryMinutes">
            <summary> Gets the number of battery minutes remaining. </summary>
            <value> The battery minutes remaining. </value>
        </member>
        <member name="P:Atalasoft.Twain.DeviceEventArgs.BatteryPercentage">
            <summary> Gets the percentage of the battery remaining. </summary>
            <value> The percentage of battery remaining. </value>
        </member>
        <member name="P:Atalasoft.Twain.DeviceEventArgs.PowerSupply">
            <summary> Gets the type of power supply being used. </summary>
            <value> The power supply mode. </value>
        </member>
        <member name="P:Atalasoft.Twain.DeviceEventArgs.Resolution">
            <summary> Gets the resolution of the device. </summary>
            <value> The resolution of the device. </value>
        </member>
        <member name="P:Atalasoft.Twain.DeviceEventArgs.Flash">
            <summary> Gets the flash mode of the device. </summary>
            <value> The flash mode. </value>
        </member>
        <member name="P:Atalasoft.Twain.DeviceEventArgs.AutomaticCaptureCount">
            <summary> Gets the number of images that will be automatically captured by the device. </summary>
            <value> The number of images that will be acquired. </value>
        </member>
        <member name="P:Atalasoft.Twain.DeviceEventArgs.TimeBeforeFirstCapture">
            <summary> Gets the number of milliseconds before the first capture will take place. </summary>
            <value> The number of milliseconds before the first capture. </value>
        </member>
        <member name="P:Atalasoft.Twain.DeviceEventArgs.TimeBetweenCaptures">
            <summary> Gets the number of milliseconds between captures. </summary>
            <value> The number of milliseconds between captures. </value>
            <value>The number of milliseconds between captures.</value>
        </member>
        <member name="T:Atalasoft.Twain.MemoryFileTransferEventHandler">
            <summary> This event handler is used in the <see cref="T:Atalasoft.Twain.TwainController"/> and <see cref="T:Atalasoft.Twain.Acquisition"/> objects to
            request a file format and <STRONG>Stream</STRONG> for saving the scanned image. </summary>
            <param name="sender"> The <see cref="T:Atalasoft.Twain.TwainController"/> sending this data. </param>
            <param name="e"> A <see cref="T:Atalasoft.Twain.MemoryFileTransferEventArgs"/> containing information for the scan. </param>
        </member>
        <member name="T:Atalasoft.Twain.MemoryFileTransferEventArgs">
            <summary> This class contains information for a memory file transfer. </summary>
        </member>
        <member name="M:Atalasoft.Twain.MemoryFileTransferEventArgs.#ctor">
            <summary> Creates a new instance of <STRONG>MemoryFileTransferEventArgs</STRONG>. </summary>
        </member>
        <member name="M:Atalasoft.Twain.MemoryFileTransferEventArgs.#ctor(Atalasoft.Twain.SourceImageFormat[],Atalasoft.Twain.ImagePixelType,System.Int32)">
            <summary> Creates a new instance of <STRONG>MemoryFileTransferEventArgs</STRONG> specifying its property values.
            </summary>
            <param name="supportedFormats"> The supported file formats retrieved from the device. </param>
            <param name="pixelType"> The pixel type of the image being scanned. </param>
            <param name="bitDepth"> The bit depth of the image being scanned. </param>
        </member>
        <member name="M:Atalasoft.Twain.MemoryFileTransferEventArgs.GetSupportedImageFormats">
            <summary> Gets an array of <see cref="T:Atalasoft.Twain.SourceImageFormat"/> for the supported file formats which can be used to set
            the <see cref="P:Atalasoft.Twain.MemoryFileTransferEventArgs.FileFormat"/> property. </summary>
            <returns> An array of supported file formats. </returns>
            <remarks> Be aware that some drivers do not follow the TWAIN specification correctly and will return image formats
            that are not truly supported for the current pixel type and bit depth. </remarks>
        </member>
        <member name="P:Atalasoft.Twain.MemoryFileTransferEventArgs.PixelType">
            <summary> Gets the pixel type of the image about to be scanned. </summary>
            <value> The pixel type of the image being scanned. </value>
        </member>
        <member name="P:Atalasoft.Twain.MemoryFileTransferEventArgs.BitDepth">
            <summary> Gets the bit depth of the image about to be scanned. </summary>
            <value> The bit depth of the image being scanned. </value>
        </member>
        <member name="P:Atalasoft.Twain.MemoryFileTransferEventArgs.FileFormat">
            <summary> Gets or sets the file format the image should be saved as. </summary>
            <value> The file format the image should be saved as. </value>
            <remarks> This value should only be set to one if the supported file formats returned from <see
            cref="M:Atalasoft.Twain.MemoryFileTransferEventArgs.GetSupportedImageFormats"/>. </remarks>
        </member>
        <member name="P:Atalasoft.Twain.MemoryFileTransferEventArgs.OutputStream">
            <summary> Gets or sets a <STRONG>Stream</STRONG> into which the image is saved. </summary>
            <value> The <STRONG>Stream</STRONG> to save the image into.  This <STRONG>Stream</STRONG> must have write access.
            </value>
            <remarks> A <STRONG>Stream</STRONG> must be provided for the transfer.  If no stream is set, the <see
            cref="T:Atalasoft.Twain.TwainController"/> will raise an exception when the <see cref="E:Atalasoft.Twain.TwainController.MemoryFileTransfer"/> event
            returns. </remarks>
        </member>
        <member name="P:Atalasoft.Twain.MemoryFileTransferEventArgs.CancelPending">
            <summary> Gets or sets a value indicating whether the scan process should stop. </summary>
            <value> A value indicating whether the scan was canceled. </value>
        </member>
        <member name="T:Atalasoft.Twain.FileTransferEventHandler">
            <summary> This event handler is used when acquiring images directly to a file. </summary>
            <remarks> You need to use QueryCapability(DeviceCapability.TransferMechanism) on the device to make sure it can
            handle File or File2 transfers. You should also use GetSupportedFileFormats to find out which SourceFileFormats the
            device supports. </remarks>
            <param name="sender"> The <STRONG>Acquisition</STRONG> object which sent the event. </param>
            <param name="e"> A <see cref="T:Atalasoft.Twain.FileTransferEventArgs"/> object containing information about the event. </param>
        </member>
        <member name="T:Atalasoft.Twain.FileTransferEventArgs">
            <summary> <para>Contains information about the file transfer used in the <see cref="E:Atalasoft.Twain.Acquisition.FileTransfer"/>
            event.</para> </summary>
            <seealso cref="E:Atalasoft.Twain.Acquisition.FileTransfer"/>
        </member>
        <member name="M:Atalasoft.Twain.FileTransferEventArgs.#ctor">
            <summary> Creates a new instance of FileTransferEventArgs. </summary>
        </member>
        <member name="M:Atalasoft.Twain.FileTransferEventArgs.#ctor(System.String)">
            <summary> Creates a new instance of FileTransferEventArgs specifying fileName. </summary>
            <param name="fileName"> The filename for this image. </param>
        </member>
        <member name="M:Atalasoft.Twain.FileTransferEventArgs.#ctor(System.String,Atalasoft.Twain.SourceImageFormat)">
            <summary> Creates a new instance of FileTransferEventArgs specifying fileName and fileFormat. </summary>
            <param name="fileName"> The filename for this image. </param>
            <param name="fileFormat"> The image format used for this image. </param>
        </member>
        <member name="P:Atalasoft.Twain.FileTransferEventArgs.FileName">
            <summary> Gets or sets the filename for the image. </summary>
            <value> The filename for the image. </value>
        </member>
        <member name="P:Atalasoft.Twain.FileTransferEventArgs.FileFormat">
            <summary> <para>Gets or sets the file format to save this image in.</para>
            <para>You should make sure the device supports this format by calling <see
            cref="M:Atalasoft.Twain.Device.GetSupportedImageFormats"/>.</para> </summary>
            <value> The file format to save this image in. </value>
        </member>
        <member name="P:Atalasoft.Twain.FileTransferEventArgs.CancelPending">
            <summary> Gets or sets a value indicating if the acquisition operation should be canceled. </summary>
            <value> A value indicating if the acquisition operation should be canceled. </value>
        </member>
        <member name="T:Atalasoft.Twain.TwainDataTransferEventHandler">
            <summary> This event handler is used to allow the data retrieved from the device to be handled by the developer
            instead of by DotTwain. </summary>
            <param name="sender"> The <see cref="T:Atalasoft.Twain.TwainController"/> or <see cref="T:Atalasoft.Twain.Device"/> object that raised this event.
            </param>
            <param name="e"> A <see cref="T:Atalasoft.Twain.TwainDataTransferEventArgs"/> containing information about the data that was transferred.
            </param>
        </member>
        <member name="T:Atalasoft.Twain.TwainDataTransferEventArgs">
            <summary> This class is used with the <see cref="E:Atalasoft.Twain.TwainController.TwainDataTransfer"/> event to allow the acquired
            data to be handled by the developer instead of by DotTwain. </summary>
            <remarks> This can be useful for handling data formats that are not supported by DotTwain. </remarks>
            <seealso cref="E:Atalasoft.Twain.TwainController.TwainDataTransfer"/>
        </member>
        <member name="P:Atalasoft.Twain.TwainDataTransferEventArgs.ExtendedImageInfo">
            <summary> Gets a Hashtable containing extended image information retrieved from the device for this acquisition.
            </summary>
            <value> A Hashtable containing extended information about the image data. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainDataTransferEventArgs.Cancel">
            <summary> Set to true if you want to cancel this acquisition and continue to the next.  DotTwain will free the
            memory used during this acquisition. </summary>
            <value> A value indicating whether to cancel the acquisition. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainDataTransferEventArgs.DataHandled">
            <summary> Set to true if the application will handle processing the data instead of DotTwain. </summary>
            <value> A value indicating whether this data is handled by the developer. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainDataTransferEventArgs.Data">
            <summary> A pointer to the data acquired.  If this data is being handled by the application it's the application's
            responsibility to free this memory. </summary>
            <value> A pointer to the data. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainDataTransferEventArgs.DataLength">
            <summary> The number of bytes stored in the Data pointer. </summary>
            <value> The number of bytes in the data. </value>
        </member>
        <member name="T:Atalasoft.Twain.MemoryDataTransferEventHandler">
            <summary> This event handler is used in the <see cref="T:Atalasoft.Twain.TwainController"/> to capture a memory transfer as data is
            being sent from the driver. </summary>
            <returns> Normally this data will be a DIB when no compression is used. </returns>
            <param name="sender"> The <see cref="T:Atalasoft.Twain.TwainController"/> sending this data. </param>
            <param name="e"> A <see cref="T:Atalasoft.Twain.MemoryDataTransferEventArgs"/> containing information about the data being acquired.
            </param>
        </member>
        <member name="T:Atalasoft.Twain.MemoryDataTransferEventArgs">
            <summary> This class is used with the <see cref="E:Atalasoft.Twain.TwainController.MemoryDataTransfer"/> event of the <see
            cref="T:Atalasoft.Twain.TwainController"/>. </summary>
            <remarks> <para>If the data is handled outside of DotTwain, be sure to set the <STRONG>DataHandled</STRONG> property
            to true.</para>
            <para>To cancel the acquisition, set the <STRONG>Cancel</STRONG> parameter to true.</para> </remarks>
        </member>
        <member name="P:Atalasoft.Twain.MemoryDataTransferEventArgs.Cancel">
            <summary> Gets or sets a value that indicates whether the scan should be canceled. </summary>
            <value> A value indicating whether the scan should be canceled. </value>
            <remarks> Set this property to true to stop the scanning. </remarks>
        </member>
        <member name="P:Atalasoft.Twain.MemoryDataTransferEventArgs.DataHandled">
            <summary> Gets or sets a value indicating whether or not the developer is handling the data. </summary>
            <value> A value indicating whether the developer is handling the data. </value>
            <remarks> This property should be set to true to keep DotTwain from processing the data. </remarks>
        </member>
        <member name="P:Atalasoft.Twain.MemoryDataTransferEventArgs.OutputStream">
            <summary> <para>Gets or sets a <STRONG>Stream</STRONG> to use for saving the image data.</para>
            <para>If this property is set to a <STRONG>Stream</STRONG> with write access, <STRONG>DotTwain</STRONG> will write
            the image data into the stream instead of holding it in memory.  No <STRONG>Bitmap</STRONG> object will be created
            when an <STRONG>OutputStream</STRONG> is provided.  See the remarks below for more information.</para> </summary>
            <value> A <STRONG>Stream</STRONG> to use for saving the data. </value>
            <remarks> <para>Normally the <see cref="E:Atalasoft.Twain.TwainController.MemoryDataTransfer" /> event is raised with each buffer of
            information retrieved from the device.  If the <STRONG>OutputStream</STRONG> property is set,
            <STRONG>DotTwain</STRONG> will stop raising the event during the transfer and write all data into the stream.  Once
            all data for the image has been received, the <see cref="E:Atalasoft.Twain.TwainController.MemoryDataTransfer" /> event will be raised
            again with the <see cref="T:Atalasoft.Twain.MemoryDataTransferEventArgs" />.<STRONG>Data</STRONG> property set to
            <STRONG>IntPtr.Zero</STRONG> to allow the <STRONG>Stream</STRONG> to be closed or processed.</para>
            <para>The <STRONG>Stream</STRONG> is also provided in the <see cref="T:Atalasoft.Twain.AcquireEventArgs" /> of the <see cref="E:Atalasoft.Twain.TwainController.ImageAcquired" /> event.</para> </remarks>
            <example>
<code lang="CS"><![CDATA[
void _acquisition_MemoryDataTransfer(object sender, MemoryDataTransferEventArgs e)
{
    if (e.Data == IntPtr.Zero)
    {
        // The image is finished. Process as needed.
        e.OutputStream.Close();
        File.Delete(_tempFileName);
    }

    // This will save the raw image data to a file instead of keeping it in memory.
    _tempFileName = Path.GetTempFileName();
    e.OutputStream = new FileStream(_tempFileName, FileMode.Create, FileAccess.Write);
}
]]></code>

<code lang="VB"><![CDATA[
Private Sub _acquisition_MemoryDataTransfer(ByVal sender As Object, ByVal e As MemoryDataTransferEventArgs) Handles _acquisition.MemoryDataTransfer
    If e.Data = IntPtr.Zero Then
        ' The image is finished. Process as needed.
        e.OutputStream.Close()
        File.Delete(_tempFileName)
    End If

    ' This will save the raw image data to a file instead of keeping it in memory.
    _tempFileName = Path.GetTempFileName()
    e.OutputStream = New FileStream(_tempFileName, FileMode.Create, FileAccess.Write)
End Sub
]]></code>
</example>
        </member>
        <member name="P:Atalasoft.Twain.MemoryDataTransferEventArgs.Data">
            <summary> Gets a pointer to the scan data. </summary>
            <value> A pointer to the data. </value>
            <remarks> The <see cref="P:Atalasoft.Twain.MemoryDataTransferEventArgs.BytesWritten"/> property gives you the length of the data.
            </remarks>
        </member>
        <member name="P:Atalasoft.Twain.MemoryDataTransferEventArgs.BytesWritten">
            <summary> Get the number of bytes written to the <see cref="P:Atalasoft.Twain.MemoryDataTransferEventArgs.Data"/> pointer. </summary>
            <value> The number of bytes written. </value>
        </member>
        <member name="P:Atalasoft.Twain.MemoryDataTransferEventArgs.BytesPerRow">
            <summary> Gets the number of bytes per scan line in the data. </summary>
            <value> The number of bytes used to hold data for a single scan line. </value>
        </member>
        <member name="P:Atalasoft.Twain.MemoryDataTransferEventArgs.Columns">
            <summary> Gets the number of columns that are contained in the <see cref="P:Atalasoft.Twain.MemoryDataTransferEventArgs.Data"/>.
            </summary>
            <value> The number of columns in the data. </value>
        </member>
        <member name="P:Atalasoft.Twain.MemoryDataTransferEventArgs.Rows">
            <summary> Gets the rows contained in this data. </summary>
            <value> The number of rows contained in this data. </value>
        </member>
        <member name="P:Atalasoft.Twain.MemoryDataTransferEventArgs.Offset">
            <summary> Gets the row and column offset of this data. </summary>
            <value> The row and column offset of this data. </value>
            <remarks> This property tells you the position of this data within the complete transfer. </remarks>
        </member>
        <member name="P:Atalasoft.Twain.MemoryDataTransferEventArgs.Compression">
            <summary> Gets the compression used for the <see cref="P:Atalasoft.Twain.MemoryDataTransferEventArgs.Data"/>. </summary>
            <value> The type of compression used. </value>
        </member>
        <member name="P:Atalasoft.Twain.MemoryDataTransferEventArgs.Resolution">
            <summary> Gets the resolution. </summary>
        </member>
        <member name="P:Atalasoft.Twain.MemoryDataTransferEventArgs.SamplesPerPixel">
            <summary> Gets the number of samples per pixel.</summary>
        </member>
        <member name="M:Atalasoft.Twain.MemoryDataTransferEventArgs.GetBitsPerSample">
            <summary> Gets the bits in the sample.</summary>
        </member>
        <member name="P:Atalasoft.Twain.MemoryDataTransferEventArgs.BitsPerPixel">
            <summary> Gets the number of bits per pixel.</summary>
        </member>
        <member name="P:Atalasoft.Twain.MemoryDataTransferEventArgs.Planar">
            <summary> Is using planar data store.</summary>
        </member>
        <member name="P:Atalasoft.Twain.MemoryDataTransferEventArgs.PixelType">
            <summary> Gets the pixel type.</summary>
        </member>
        <member name="T:Atalasoft.Twain.BeforeTwainDataTransferEventHandler">
            <summary> This event handler is used to provide information about the data that is about to be scanned. </summary>
            <param name="sender"> The object sending this event.  This may be a TwainController or Device object. </param>
            <param name="e"> The event args containing information on the image about to be scanned. </param>
        </member>
        <member name="T:Atalasoft.Twain.TwainDataImageInfoEventArgs">
            <seealso cref="E:Atalasoft.Twain.TwainController.BeforeTwainDataTransfer"/>
            <summary> This class is passed to the <see cref="E:Atalasoft.Twain.TwainController.BeforeTwainDataTransfer"/> event to supply general
            information about the image about to be acquired. </summary>
        </member>
        <member name="P:Atalasoft.Twain.TwainDataImageInfoEventArgs.Cancel">
            <summary> Set to true to cancel the acquisition of this page and continue to the next page if available. </summary>
            <value> A value indicating whether or not to cancel the acquisition. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainDataImageInfoEventArgs.ImageInfo">
            <summary> Contains information about the image about to be transferred. </summary>
            <value> A <see cref="T:Atalasoft.Twain.TwainImageInfo"/> object containing information about the image. </value>
        </member>
        <member name="T:Atalasoft.Twain.Device">
            <summary> <para>Contains information about a single device and handles the acquisition of images from that
            device.</para> </summary>
            <remarks> <para>This class controls how the image will be acquired and to learn more about the device and its
            capabilities.  The <see cref="M:Atalasoft.Twain.Device.Open"/> method must be invoked before gaining access to the device properties
            and information.  The <see cref="M:Atalasoft.Twain.Device.Close"/> method must be invoked when finished with the device.</para>To find
            out which properties you can obtain from the device, invoke the <see cref="M:Atalasoft.Twain.Device.QueryCapability(Atalasoft.Twain.DeviceCapability,System.Boolean)"/> method or get a
            list of property names from the <see cref="M:Atalasoft.Twain.Device.GetSupportedCapabilities"/> method. </remarks>
            <example> Acquire() Method </example>
        </member>
        <member name="M:Atalasoft.Twain.Device.Finalize">
            <summary> Calls Close() </summary>
        </member>
        <member name="M:Atalasoft.Twain.Device.CanOpen">
            <summary> <para>This method may be removed in a future version.  New applications should use the
            <see cref="M:Atalasoft.Twain.Device.TryOpen"/> method instead.</para>
            <para>Returns a value indicating whether or not the <see cref="M:Atalasoft.Twain.Device.Open"/> method can currently be used on the
            device.</para> </summary>
            <returns> True if the <see cref="M:Atalasoft.Twain.Device.Open"/> method can currently be used on the device. </returns>
            <remarks> <para>Use this method to test if a device is available instead of using the <see cref="M:Atalasoft.Twain.Device.Open"/>
            method and catching the exception if it fails.</para>
            <para>This method will return false if the device is already open.</para>
            <para>Some drivers will display a message box when the device is not connected or powered off.  DotTwain has no
            control over this message box</para> </remarks>
        </member>
        <member name="M:Atalasoft.Twain.Device.TryOpen">
            <summary> <para>This method will attempt to open a connection to the device and will return <STRONG>true</STRONG> if
            it was successful.  It's preferred to use this method instead of the <see cref="M:Atalasoft.Twain.Device.Open" /> method.</para>
            <para>The <see cref="M:Atalasoft.Twain.Device.Close" /> method must be called when you are finished using the device.</para> </summary>
            <returns> True if the device connection was a success. </returns>
            <remarks> This method will suppress exceptions and instead return <STRONG>true</STRONG> or <STRONG>false</STRONG> to
            indicate if the device was already open or has been successfully opened. </remarks>
            <example>
<code lang="CS"><![CDATA[
if (this.device.TryOpen())
{
    this.device.Resolution = new TwainResolution(200, 200);
    this.device.HideInterface = true;
    this.device.Acquire();
}
]]></code>

<code lang="VB"><![CDATA[
If Me.device.TryOpen() Then
    Me.device.Resolution = New TwainResolution(200, 200)
    Me.device.HideInterface = True
    Me.device.Acquire()
End If
]]></code>
</example>
        </member>
        <member name="M:Atalasoft.Twain.Device.SetExtendedCapabilities(Atalasoft.Twain.DeviceCapability[])">
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is an error during processing. </exception>
            <summary> Sets the extended capabilities your application needs to negotiate during states 5 and 6 of a Twain
            session. </summary>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedExtendedCapabilities"/>
            <remarks> Use the <see cref="M:Atalasoft.Twain.Device.GetSupportedExtendedCapabilities"/> to learn which capabilities the device
            supports. </remarks>
            <param name="caps"> Device capabilities the application needs to use during states 5
            (<STRONG>SourceEnabled</STRONG>) and 6 (<STRONG>ReadyToTransfer</STRONG>). </param>
        </member>
        <member name="M:Atalasoft.Twain.Device.Acquire">
            <summary> Acquires an image from this device. </summary>
            <example> FileTransfer Event </example>
            <example>
<code lang="CS" title="AcquireCS (C#)"><![CDATA[
private void menuAcquire_Click(object sender, System.EventArgs e)
{
    if (this.device == null)
        this.device = this.acquisition.Devices.Default;
    
    try
    {
        this.device.Open();
    
    }
    catch (Exception ex)
    {
        MessageBox.Show(ex.Message);
        return;
    }

    if (!SetTransferMethod())
    {
        this.device.Close();
        return;
    }

    this.device.Frame = this.scanRect.ToRectangleF();
    if (this.scanResolution != null)
        this.device.Resolution = new TwainResolution(this.scanResolution.X, this.scanResolution.Y, this.scanResolution.Units);
    
    this.device.HideInterface = this.menuHideInterface.Checked;
    this.device.ModalAcquire = this.menuAcquireModal.Checked;

    this.device.Acquire();
}
]]></code>

<code lang="VB" title="AcquireVB (Visual Basic)"><![CDATA[
Private  Sub menuAcquire_Click(ByVal sender As Object, ByVal e As System.EventArgs)
    If Me.device Is Nothing Then
        Me.device = Me.acquisition.Devices.Default
    End If
 
    Try
        Me.device.Open()
 
    Catch ex As Exception
        MessageBox.Show(ex.Message)
        Return
    End Try
 
    If Not SetTransferMethod() Then
        Me.device.Close()
        Return
    End If
 
    Me.device.Frame = Me.scanRect.ToRectangleF()
    If Not Me.scanResolution Is Nothing Then
        Me.device.Resolution = New TwainResolution(Me.scanResolution.X, Me.scanResolution.Y, Me.scanResolution.Units)
    End If
 
    Me.device.HideInterface = Me.menuHideInterface.Checked
    Me.device.ModalAcquire = Me.menuAcquireModal.Checked
 
    Me.device.Acquire()
End Sub
]]></code>
</example>
            <overloads> Theses methods are used to acquire data from the device.  The acquired data is returned to the
            application using the ImageAcquired event. </overloads>
            <remarks> <para><STRONG>NOTE</STRONG>: If <see cref="P:Atalasoft.Twain.Device.ThreadingEnabled" /> is set to true, the Device will be
            closed and a new Device instance will be created for scanning in the worker thread:  This is required by the TWAIN
            specification.  You will not be able to access any device properties or methods during the scan and will have to
            re-open the device after the scan if access to properties or methods are needed.</para> </remarks>
        </member>
        <member name="M:Atalasoft.Twain.Device.ToString">
            <summary> A string which describes this object. </summary>
            <returns> The <see cref="P:Atalasoft.Twain.TwainIdentity.ProductName"/> of this device. </returns>
        </member>
        <member name="M:Atalasoft.Twain.Device.Open">
            <summary> <para>Opens a connection to this device. </para>
            <para>You must open a connection to the device before getting or setting any device properties.  If you don't need
            to get or set any properties, you can call the <see cref="M:Atalasoft.Twain.Device.Acquire"/> method without using the
            <STRONG>Open</STRONG> or <see cref="M:Atalasoft.Twain.Device.Close"/> methods.</para>
            <para><see cref="M:Atalasoft.Twain.Device.TryOpen"/> is the preferred way to open a connection to the device.</para> </summary>
            <remarks> <para>A preferred method may be to use <see cref="M:Atalasoft.Twain.Device.TryOpen"/> instead of catching an exception if
            <STRONG>Open</STRONG> fails.</para>
            <para>You must <see cref="M:Atalasoft.Twain.Device.Close"/> a connection to the device if you open it.</para>
            <para>Use the <see cref="M:Atalasoft.Twain.Device.CanOpen"/> method to determine if a device is currently in use.</para> </remarks>
            <seealso cref="M:Atalasoft.Twain.Device.Close"/>
            <exception> Thrown if there is an error while opening the device connection. </exception>
        </member>
        <member name="M:Atalasoft.Twain.Device.Close">
            <summary> <para>Closes the connection with the device previously opened.</para>
            <para>Calling this method when an image is being acquired will cancel the acquisition and any pending transfers.  If
            you want to close the connection after all images have been transferred, you should do so in the <see
            cref="E:Atalasoft.Twain.Acquisition.AcquireFinished"/> event.</para> </summary>
            <remarks> If you call the <see cref="M:Atalasoft.Twain.Device.Open"/> method, you must call the Close method when finished with the
            device. </remarks>
            <seealso cref="M:Atalasoft.Twain.Device.Open"/>
        </member>
        <member name="M:Atalasoft.Twain.Device.Enable">
            <summary> This method can be used to display the device interface and invoke an acquisition instead of using <see
            cref="M:Atalasoft.Twain.Device.Acquire"/>. </summary>
            <remarks> <para>The normal <see cref="M:Atalasoft.Twain.Device.Acquire"/> method will close the device interface after all items
            have been transferred.  Using the <STRONG>Enable</STRONG> method allows the device interface to remain open after
            the acquire, and will only close when the <see cref="M:Atalasoft.Twain.Device.Disable"/> method is called.</para>
            <para>By default, <STRONG>Enable</STRONG> is an asynchronous method and will return before the transfer has
            completed.  Setting the <see cref="P:Atalasoft.Twain.Device.ModalAcquire"/> property can force this method to wait until the
            acquisition has finished before returning.</para> </remarks>
            <seealso cref="M:Atalasoft.Twain.Device.Disable"/>
            <exception> Thrown if the current State is not TwainState.SourceOpen. </exception>
            <exception> Thrown if there is a Twain error while enabling the interface. </exception>
        </member>
        <member name="M:Atalasoft.Twain.Device.Disable">
            <summary> This method will disable and hide the device interface.  This only needs to be called if the <see
            cref="M:Atalasoft.Twain.Device.Enable"/> method is used to display the interface or invoke scanning. </summary>
            <exception> Thrown if there is a Twain error while closing the interface. </exception>
            <remarks> The user will have to click the 'Cancel' button to close the interface when <see cref="M:Atalasoft.Twain.Device.Enable"/> is
            used.  The <STRONG>Disable</STRONG> method should be called in the <see cref="E:Atalasoft.Twain.Acquisition.AcquireCanceled"/> event
            before using the <see cref="M:Atalasoft.Twain.Device.Close"/> method. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.Device.QueryCapability(Atalasoft.Twain.DeviceCapability,System.Boolean)">
            <summary> <para>Determines if a capability is available from the device.</para>
            <para>It's unlikely that any one device supports all of the properties and features.  You can use this method to
            find out if a property is get-able and/or set-able.  This can also be used to help determine if the device is a
            camera by checking for camera specific properties, such as <see cref="P:Atalasoft.Twain.Device.FlashUsed" /> or <see cref="P:Atalasoft.Twain.Device.BatteryPercentage" />.</para> </summary>
            <returns> True if the capability is available. </returns>
            <example>
<code lang="CS" title="QueryCapability (C#)"><![CDATA[
Device dev = this.acquisition.Devices.Default;
dev.Open();

// See if you can set the Resolution.
bool canSetRes = dev.QueryCapability(DeviceCapability.ResolutionX, true);

dev.Close();
]]></code>

<code lang="VB" title="QueryCapability (Visual Basic)"><![CDATA[
Dim dev As Device =  Me.acquisition.Devices.Default 
dev.Open()
 
' See if you can set the Resolution.
Dim canSetRes As Boolean =  dev.QueryCapability(DeviceCapability.ResolutionX,True) 
 
dev.Close()
]]></code>
</example>
            <exception> Thrown if a connection to the device is not open. </exception>
            <param name="capability"> The capability you want to check. </param>
            <param name="canSet"> If true, this method checks to see if this capability can also be set. </param>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetQueryOperations(Atalasoft.Twain.DeviceCapability)">
            <summary> Returns the operations supported for a specific capability. </summary>
            <returns> A <see cref="T:Atalasoft.Twain.QueryOperation"/> value for all supported operations. </returns>
            <param name="capability"> The capability to test. </param>
        </member>
        <member name="M:Atalasoft.Twain.Device.ShowUserInterface">
            <summary> <para>Displays the device interface. </para>
            <para>This operation is used by applications that wish to display the device user interface to allow the user to
            manipulate the devices current settings for resolution, paper size, etc. but not acquire an image. </para>
            </summary>
            <returns> False if the user canceled the dialog. </returns>
            <seealso cref="P:Atalasoft.Twain.Device.EnableInterfaceOnly"/>
            <remarks> You should check the <see cref="P:Atalasoft.Twain.Device.EnableInterfaceOnly"/> property to see if this feature is
            supported. </remarks>
            <exception> Thrown if the current state is other than SourceOpen. </exception>
        </member>
        <member name="M:Atalasoft.Twain.Device.SetImprinterEndorser(Atalasoft.Twain.ImprinterEndorserType,System.Boolean)">
            <summary> Use this method to enable or disable an imprinter or endorser. </summary>
            <overloads><summary> Prepares the device to use it's imprinter/endorser for future acquisitions. </summary>
            <remarks> <para>This will raise an <STRONG>UnsupportedCapabilityException</STRONG> if the Printer, PrinterEnabled or
            PrinterMode <see cref="T:Atalasoft.Twain.DeviceCapability"/> fail.</para><para>These methods are used to set the scanner imprinter or endorser values. </para> </remarks>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if the device does not support this feature. </exception></overloads>
            <param name="printer"> The printer to use.  Call <see cref="M:Atalasoft.Twain.Device.GetSupportedPrinters"/> to find out which
            printers are available. </param>
            <param name="enabled"> A value indicating whether the imprinter or endorser is enabled or disabled. </param>
        </member>
        <member name="M:Atalasoft.Twain.Device.SetImprinterEndorser(Atalasoft.Twain.ImprinterEndorserType,Atalasoft.Twain.ImprinterEndorserMode,System.String,System.Int32,System.String)">
            <summary> Use this method to enable an imprinter or endorser and set its parameters. </summary>
            <returns> To disable an imprinter or endorser, use the overload for 
            <see cref="M:Atalasoft.Twain.Device.SetImprinterEndorser(Atalasoft.Twain.ImprinterEndorserType,System.Boolean)"/>. </returns>
            <param name="printer"> The printer to use.  Call <see cref="M:Atalasoft.Twain.Device.GetSupportedPrinters"/> to find out which
            printers are available. </param>
            <param name="mode"> The text mode to use. </param>
            <param name="text"> The text to print. </param>
            <param name="index"> The starting index for the page. </param>
            <param name="suffix"> An optional suffix used when mode is Compound. </param>
        </member>
        <member name="M:Atalasoft.Twain.Device.SetFrames(System.Drawing.RectangleF[])">
            <summary> Sets multiple frames to acquire from when scanning. </summary>
            <seealso cref="M:Atalasoft.Twain.Device.GetFrames"/>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if the frames parameter is null (Nothing in VB). </exception>
            <exception> Thrown if there is an error during processing. </exception>
            <param name="frames"> An array of RectangleF structures representing the frames to acquire. </param>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetFrames">
            <summary> Returns an array containing the current frames set for a device. </summary>
            <returns> An array of RectangleF representing the device frames. </returns>
            <remarks> <para>Some devices allow multiple areas of a document to be scanned and returned as separate images.  This
            method returns all of the frames currently set to be acquired.</para>
            <para>To specify multiple frames to acquire, use the <see cref="M:Atalasoft.Twain.Device.SetFrames(System.Drawing.RectangleF[])"/> method.</para> </remarks>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
        </member>
        <member name="M:Atalasoft.Twain.Device.SaveParameters(System.IO.Stream)">
            <summary> Saves the current device parameters to a stream. </summary>
            <remarks> <para>Use this method along with <see cref="M:Atalasoft.Twain.Device.LoadParameters(System.IO.Stream)"/> to hold onto the property settings
            users have selected for a device.</para> </remarks>
            <seealso cref="M:Atalasoft.Twain.Device.LoadParameters(System.IO.Stream)"/>
            <returns> The number of bytes saved into the stream. </returns>
            <exception> Thrown if the stream is null (Nothing in VB). </exception>
            <exception> Thrown if the stream does not have write access. </exception>
            <exception> Thrown if there is an error during processing. </exception>
            <exception> Thrown if a connection to the device is not open. </exception>
            <param name="stream"> The stream where device data will be saved. </param>
        </member>
        <member name="M:Atalasoft.Twain.Device.LoadParameters(System.IO.Stream)">
            <summary> Loads previously saved device parameters into the device. </summary>
            <remarks> <para>Use this method along with <see cref="M:Atalasoft.Twain.Device.SaveParameters(System.IO.Stream)"/> to hold onto the property settings
            users have selected for a device.</para> </remarks>
            <seealso cref="M:Atalasoft.Twain.Device.SaveParameters(System.IO.Stream)"/>
            <exception> Thrown if the stream argument is null. </exception>
            <exception> Thrown if the stream is not seekable or if it does not have read access. </exception>
            <exception> Thrown is there is an error loading these parameters. </exception>
            <exception> Thrown if a connection to the device is not open. </exception>
            <param name="stream"> A stream containing the device parameters. </param>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetConditionCode">
            <summary> Returns the condition code from the last Twain operation.  This can provide more information about a
            failure when getting or setting a <see cref="T:Atalasoft.Twain.Device"/> property. </summary>
            <returns> A condition code providing more information about the last Twain operation. </returns>
            <remarks> This method is useful if the <see cref="P:Atalasoft.Twain.Device.LastReturnCode"/> property is not
            <STRONG>TWRC_SUCCESS</STRONG> after getting or setting a property. </remarks>
            <seealso cref="P:Atalasoft.Twain.Device.LastReturnCode"/>
            <exception> Thrown if the source manager is not open. </exception>
        </member>
        <member name="M:Atalasoft.Twain.Device.SetExtendedImageInfoOptions(Atalasoft.Twain.TwainExtendedImageInfoID[])">
            <summary> Sets the extended image information options to obtain after acquiring the data. </summary>
            <remarks> <para>This information is part of the <see cref="T:Atalasoft.Twain.AcquireEventArgs"/> in the <see
            cref="E:Atalasoft.Twain.Acquisition.ImageAcquired"/> event and <see cref="T:Atalasoft.Twain.MemoryDataTransferEventArgs"/> in the <see
            cref="E:Atalasoft.Twain.Acquisition.TwainDataTransfer"/> event.</para>
            <para>This method should only be called before the <see cref="M:Atalasoft.Twain.Device.Open"/> method.</para> </remarks>
            <param name="info"> The extended image information option to get from the device. </param>
        </member>
        <member name="M:Atalasoft.Twain.Device.LoadXmlParameters(System.IO.Stream)">
            <summary> Load device parameter data saved with the <see cref="M:Atalasoft.Twain.Device.SaveXmlParameters(System.IO.Stream)"/> method. </summary>
            <remarks> When using this method be sure to call it after each <see cref="M:Atalasoft.Twain.Device.Open"/>, otherwise the device may
            revert to its default settings. </remarks>
            <param name="stream"> A stream containing the data. </param>
        </member>
        <member name="M:Atalasoft.Twain.Device.SaveXmlParameters(System.IO.Stream)">
            <summary> Saves device property values into XML format. </summary>
            <remarks> <para>This methods saves all settable properties, including custom capabilities.  The XML data should not
            be modified manually unless valid values for the capabilities are known.</para>
            <para>Use the <see cref="M:Atalasoft.Twain.Device.LoadXmlParameters(System.IO.Stream)"/> method to restore these device settings.</para> </remarks>
            <param name="stream"> A stream where the XML data will be saved. </param>
        </member>
        <member name="M:Atalasoft.Twain.Device.ConvertToRectangleF(System.String)">
            <summary>
            Converts the string version of a RectangleF into a RectangleF object.
            </summary>
            <param name="val">The string version of the RectangleF.</param>
            <returns>The resulting RectangleF object.</returns>
        </member>
        <member name="M:Atalasoft.Twain.Device.SortCapabilityArray(System.Object[])">
            <summary>
            Sorts the capability array and removes any known read-only capabilities.
            </summary>
            <param name="caps">An array of capabilities.</param>
            <returns>An ArrayList containing the capabilities to save.</returns>
        </member>
        <member name="M:Atalasoft.Twain.Device.WriteCapabilityElement(System.Xml.XmlTextWriter,System.Int32,System.Object)">
            <summary>
            Writes out the capability value to XML.
            </summary>
            <param name="writer">The XmlTextWriter being used.</param>
            <param name="capability">The numeric value of the capability.</param>
            <param name="data">The data value of the capability.</param>
        </member>
        <member name="M:Atalasoft.Twain.Device.ReadCapabilityData(Atalasoft.Twain.TwainController,Atalasoft.Twain.CustomCapability)">
            <summary>
            
            </summary>
            <param name="controller">The TwainController used to read the capability.</param>
            <param name="capData">The capability to read.</param>
            <returns>True if the capability should be saved.</returns>
        </member>
        <member name="M:Atalasoft.Twain.Device.SetCameraPixelOrder(Atalasoft.Twain.ImagePixelType[])">
            <summary> Sets the pixel order for each enabled camera. </summary>
            <exception> Thrown if the device is not in state SourceOpen. </exception>
            <returns> True if the request was successful. </returns>
            <param name="pixelOrder"> <para>An array indicating the pixel type for each camera.</para>
            <para>If null (Nothing in VB) or an empty array are provided, the camera order will be reset to its startup
            value.</para> </param>
        </member>
        <member name="M:Atalasoft.Twain.Device.EnableCamera(Atalasoft.Twain.TwainCameraSide,System.Boolean)">
            <summary> Use this method to enable or disable cameras used when scanning. </summary>
            <remarks> In addition to enabling a camera, some scanners allow each camera to have different capability values. 
            However, there is no way to query whether a device supports this.  For a best guess, try setting one capability
            after enabling a camera, then enable another camera to see if that property value has also changed.  If the other
            camera capability has changed, the device does not support individual camera settings. </remarks>
            <exception> Thrown if the state is not SourceOpen. </exception>
            <param name="camera"> The camera to affect. </param>
            <param name="enabled"> A value indicating whether the camera should be enabled.  Pass in false to disable the
            camera. </param>
        </member>
        <member name="P:Atalasoft.Twain.Device.ThreadingEnabled">
            <summary> Gets or sets a value indicating whether to perform the scanning in a separate thread.  See the remarks
            below for threading limitations. </summary>
            <value> A value indicating whether the scanning will run in a separate thread. </value>
            <remarks> <para>In order for threading to be enabled, the following items are required:</para>
            <UL>
            <LI>The <see cref="P:Atalasoft.Twain.Device.ModalAcquire"/> property must be set to <STRONG>false</STRONG>.</LI>
            <LI>The parent control provided to the <see cref="T:Atalasoft.Twain.Acquisition"/> object must derive from
            <STRONG>System.Windows.Forms.Control</STRONG>. If the parent is set to <STRONG>null</STRONG>
            (<STRONG>Nothing</STRONG> in VB), DotTwain will create a compatible hidden window:  Be aware that some drivers will
            fail to function when the window is hidden.</LI>
            <LI>The driver must <STRONG>not</STRONG> be WIA.</LI></UL>
            <para><STRONG>NOTE</STRONG>: To run the scanning in a separate thread, the Device will be closed and a new Device
            instance will be created for scanning in the worker thread:  This is required by the TWAIN specification.  You will
            not be able to access any device properties or methods during the scan and will have to re-open the device after the
            scan if access to properties or methods are needed.</para> </remarks>
        </member>
        <member name="P:Atalasoft.Twain.Device.LastReturnCode">
            <summary> Gets the last <see cref="T:Atalasoft.Twain.TwainReturnCode"/> from getting or setting a property. </summary>
            <value> The last return code from getting or setting a property. </value>
            <remarks> <para>This property is used as a way to determine whether getting or setting a property value succeeded,
            rather than throwing an exception.  By using a property it simplifies coding and there is no slow down when trying
            to access unsupported properties.</para>
            <para>Use <see cref="M:Atalasoft.Twain.Device.GetConditionCode"/> to learn the reason for a failure.</para> </remarks>
            <seealso cref="M:Atalasoft.Twain.Device.GetConditionCode"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.HideInterface">
            <summary> Gets or sets a value indicating whether the device interface is shown when acquiring. </summary>
            <value> A value indicating whether the device interface is shown. </value>
            <remarks> <para>Setting this property is only a request that the device show or hide its interface.  Devices are
            free to ignore this request, though most will comply.</para>
            <para>This property can be set before opening a connection to the device.</para> </remarks>
            <seealso cref="P:Atalasoft.Twain.Device.ModalAcquire"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.ModalAcquire">
            <summary> Gets or sets a value indicating whether the <see cref="M:Atalasoft.Twain.Device.Acquire"/> method is synchronous or
            asynchronous. </summary>
            <value> A value indicating whether the <see cref="M:Atalasoft.Twain.Device.Acquire"/> method is synchronous. </value>
            <seealso cref="P:Atalasoft.Twain.Device.HideInterface"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.BarCode">
            <summary> Gets the <see cref="T:Atalasoft.Twain.TwainBarCode"/> object used to control barcode features of the device. </summary>
            <value> A <see cref="T:Atalasoft.Twain.TwainBarCode"/> object. </value>
            <remarks> The <see cref="P:Atalasoft.Twain.TwainBarCode.DetectionEnabled"/> property should be set to true before accessing any
            barcode features. </remarks>
        </member>
        <member name="P:Atalasoft.Twain.Device.PatchCode">
            <remarks> The <see cref="P:Atalasoft.Twain.TwainBarCode.DetectionEnabled"/> property should be set to true before accessing any
            patchcode features. </remarks>
            <summary> Gets the <see cref="T:Atalasoft.Twain.TwainBarCode"/> object used to control patchcode features of the device. </summary>
            <value> A <see cref="T:Atalasoft.Twain.TwainBarCode"/> object. </value>
            <seealso cref="P:Atalasoft.Twain.Device.BarCode"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.Controller">
            <summary> Gets the <see cref="T:Atalasoft.Twain.TwainController"/> used by the Device class. </summary>
            <value> The <see cref="T:Atalasoft.Twain.TwainController"/> used by the device class. </value>
            <remarks> The controller should only be used by developers familiar with the Twain specification.  The <see
            cref="T:Atalasoft.Twain.TwainController"/> was exposed to allow developers to work with low level coding without having to write their
            own device class. </remarks>
        </member>
        <member name="P:Atalasoft.Twain.Device.Identity">
            <summary> Gets the device identity information. </summary>
            <value> A <see cref="T:Atalasoft.Twain.TwainIdentity"/> object containing information about the device. </value>
        </member>
        <member name="P:Atalasoft.Twain.Device.IccProfile">
            <summary> Gets or sets the <STRONG>ICAP_ICCPROFILE</STRONG> capability which determines if the device will link or
            embed an ICC profile with the image. </summary>
            <value> A value indicating whether the device will link or embed an ICC profile in the image. </value>
            <exception> Thrown if the state is less than SourceOpen for getting the value, or is not equal to SourceOpen when
            setting the value. </exception>
        </member>
        <member name="P:Atalasoft.Twain.Device.AutoSize">
            <summary> Gets or sets the <STRONG>ICAP_AUTOSIZE</STRONG> capability which determines whether the driver is forced
            to output image dimensions to match the <see cref="P:Atalasoft.Twain.Device.FrameSize"/> or its closest supported frame size.
            </summary>
            <value> A value indicating whether the output image dimensions will be forced to a specific size. </value>
            <exception> Thrown if the state is less than SourceOpen for getting the value, or is not equal to SourceOpen when
            setting the value. </exception>
        </member>
        <member name="P:Atalasoft.Twain.Device.MicrEnabled">
            <exception> Thrown if the state is less than SourceOpen for getting the value, or is not equal to SourceOpen when
            setting the value. </exception>
            <summary> Gets or sets the <STRONG>CAP_MICRENABLED</STRONG> capability which indicates if the scanner is enabled for
            MICR check scanning. </summary>
            <value> A value indicating whether MICR check scanning is enabled. </value>
        </member>
        <member name="P:Atalasoft.Twain.Device.TransferMethod">
            <exception> Thrown if a connection to the device is not open. </exception>
            <summary> Gets or sets the transfer method used when acquiring data. </summary>
            <value> The transfer method used by the device. </value>
            <remarks> This property should be set before calling the <see cref="M:Atalasoft.Twain.Device.Acquire"/> method.  Some drivers
            require setting this property before allowing access to other properties; such as setting
            <STRONG>TransferMethod</STRONG> to File before setting the <see cref="P:Atalasoft.Twain.Device.FileFormat"/> property. </remarks>
        </member>
        <member name="P:Atalasoft.Twain.Device.State">
            <summary> Gets a value indicating the current Twain state. </summary>
            <value> The current Twain state. </value>
            <remarks> This can be used to help keep track of where the device is at in the acquisition.  Some states will change
            based on the actions of the developer, such as calling the <see cref="M:Atalasoft.Twain.Device.Open"/> method.  Other states are
            controlled by the device, such as <STRONG>ReadyToTransfer</STRONG> and <STRONG>Transferring</STRONG>. </remarks>
        </member>
        <member name="P:Atalasoft.Twain.Device.ImageLayout">
            <exception> Thrown if a connection to the device is not open. </exception>
            <summary> Gets or sets the layout used when acquiring image data. </summary>
            <value> The current image layout used. </value>
            <remarks> This is an extension to the <see cref="P:Atalasoft.Twain.Device.Frame"/> property to provide more information about the
            acquisition. </remarks>
            <seealso cref="P:Atalasoft.Twain.Device.Frame"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.FileSystem">
            <summary> <para>Gets the <see cref="P:Atalasoft.Twain.Device.FileSystem"/> for the device if supported. </para>
            <para>The FileSystem is used for navigating through the folders and files of some cameras and scanners.</para>
            </summary>
            <seealso cref="P:Atalasoft.Twain.Device.FileSystem"/>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The <see cref="P:Atalasoft.Twain.Device.FileSystem"/> for the device if supported. </value>
        </member>
        <member name="P:Atalasoft.Twain.Device.DocumentFeeder">
            <summary> Gets the <see cref="T:Atalasoft.Twain.DocumentFeeder"/> object for the device if supported. </summary>
            <value> The <see cref="T:Atalasoft.Twain.DocumentFeeder"/> object for the device if supported. </value>
            <remarks> The <see cref="P:Atalasoft.Twain.DocumentFeeder.Enabled"/> property should be set to true before accessing any other <see
            cref="T:Atalasoft.Twain.DocumentFeeder"/> properties. </remarks>
        </member>
        <member name="P:Atalasoft.Twain.Device.Compression">
            <summary> <para>Gets or sets the compression used during a file or memory transfer.</para> </summary>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedCompressionModes"/>
            <remarks> <para>You can use the <see cref="M:Atalasoft.Twain.Device.GetSupportedCompressionModes"/> method to find out which
            compressions are supported by the device.  Some devices require the <see cref="P:Atalasoft.Twain.Device.TransferMethod"/> be set to
            File, File2 or Memory before setting this property.</para> </remarks>
            <value> The compression used during a transfer. </value>
            <exception> Thrown if a connection to the device is not open. </exception>
        </member>
        <member name="P:Atalasoft.Twain.Device.CcittKFactor">
            <summary> Gets or sets the K factor indicating how often the new compression baseline should be re-established.
            </summary>
            <remarks> This is only used for CCITT Group 3 2-dimensional compression. A value of 2 or 4 is common in facsimile
            communication. A value of zero will indicate an infinite K factor (the baseline is only calculated at the beginning
            of the transfer). </remarks>
            <seealso cref="P:Atalasoft.Twain.Device.Compression"/>
            <value> The K factor indicating how often the new compression baseline should be re-established. </value>
            <exception> Thrown if a connection to the device is not open. </exception>
        </member>
        <member name="P:Atalasoft.Twain.Device.JpegPixelType">
            <exception> Thrown if a connection to the device is not open. </exception>
            <summary> Gets or sets the pixel type used when Jpeg data is acquired. </summary>
            <value> The pixel type used. </value>
            <remarks> <para>This property has no affect when the <see cref="P:Atalasoft.Twain.Device.TransferMethod"/> is Native.  Some devices
            may require setting the <see cref="P:Atalasoft.Twain.Device.TransferMethod"/> before accessing this property.</para>
            <para>Use the <see cref="M:Atalasoft.Twain.Device.GetSupportedJpegPixelTypes"/> to find valid values for the device.</para> </remarks>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedJpegPixelTypes"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.JpegQuality">
            <summary> Gets or sets the Jpeg quality used during a file or memory transfer. </summary>
            <remarks> Valid values are normally from 0 to 100.  Use the <see cref="M:Atalasoft.Twain.Device.GetSupportedJpegQualityValues"/> to
            find valid values for the device. </remarks>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The Jpeg quality used during a transfer. </value>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedJpegQualityValues"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.JobControl">
            <exception> Thrown if a connection to the device is not open. </exception>
            <summary> Gets or sets the type of batch acquisition job to perform. </summary>
            <value> The current batch job format. </value>
            <remarks> <para>Use the <see cref="M:Atalasoft.Twain.Device.GetSupportedJobControls"/> method to find out which, if any, batch types
            are supported by the device.</para>
            <para>When processing a batch job, watch the <see cref="P:Atalasoft.Twain.AcquireEventArgs.EndOfJob"/> property of the <see
            cref="T:Atalasoft.Twain.AcquireEventArgs"/> to know when a batch has finished.</para> </remarks>
        </member>
        <member name="P:Atalasoft.Twain.Device.Alarms">
            <summary> Gets or sets a value which indicates if specific audible alarms are on or off. </summary>
            <value> The current AlarmTypeFlags set for the device. </value>
            <exception> Thrown if a connection to the device is not open. </exception>
        </member>
        <member name="P:Atalasoft.Twain.Device.AlarmVolume">
            <summary> Gets or sets the volume of alarms. </summary>
            <remarks> Valid values are from 0 to 100. </remarks>
            <value> The current volume of the alarms. </value>
            <exception> Thrown if a connection to the device is not open. </exception>
        </member>
        <member name="P:Atalasoft.Twain.Device.AutoDiscardBlankPages">
            <remarks> <para>In addition to the <see cref="T:Atalasoft.Twain.AutoDiscardMode" /> options, a value from 0 to 2147483647 can be used
            to determine the byte size cutoff point to identify which images are to be discarded.</para>
            <para>Use <see cref="M:Atalasoft.Twain.Device.QueryCapability(Atalasoft.Twain.DeviceCapability,System.Boolean)" /> with the <STRONG>ICAP_AUTODISCARDBLANKPAGES</STRONG> capability to
            determine whether the driver supports this feature.</para> </remarks>
            <summary> Gets or sets a value indicating whether the driver will automatically discard blank pages. </summary>
            <value> A value indicating whether blank pages will be discarded. </value>
            <example>
<code lang="CS" title="AutoDiscardBlankPages (C#)"><![CDATA[
// Set the blank page detection to discard anything less than 200 bytes.
this.device.AutoDiscardBlankPages = (AutoDiscardMode)200;
]]></code>

<code lang="VB" title="AutoDiscardBlankPagesVB (Visual Basic)"><![CDATA[
' Set the blank page detection to discard anything less than 200 bytes.
Me.device.AutoDiscardBlankPages = CType(200, AutoDiscardMode)
]]></code>
</example>
        </member>
        <member name="P:Atalasoft.Twain.Device.AutoScan">
            <summary> Gets or sets a value to indicate if the device should automatically acquire one image after another.
            </summary>
            <remarks> This capability is intended to boost the performance of a Source. The fundamental assumption behind
            <STRONG>AutoScan</STRONG> is that the device is able to capture the number of images indicated by the value of <see
            cref="P:Atalasoft.Twain.Device.TransferCount"/> without waiting for the Application to request the image transfers. </remarks>
            <value> A value indicating whether the automatic scan feature is enabled. </value>
            <exception> Thrown if a connection to the device is not open. </exception>
        </member>
        <member name="M:Atalasoft.Twain.Device.ClearBuffers(Atalasoft.Twain.ClearBufferMode)">
            <summary> <para>This lets you choose how the device should handle its buffer clearing procedure.</para> </summary>
            <remarks> This only has affect on devices with internal memory buffers. </remarks>
            <exception> Thrown if a connection to the device is not open. </exception>
            <param name="mode"> The clear mode to use. </param>
        </member>
        <member name="P:Atalasoft.Twain.Device.DeviceEvents">
            <summary> Gets or sets the device events you want to receive. </summary>
            <remarks> These events will be received through the <see cref="E:Atalasoft.Twain.Acquisition.DeviceEvent"/> event. </remarks>
            <value> The device events you want to receive. </value>
            <exception> Thrown if a connection to the device is not open. </exception>
        </member>
        <member name="P:Atalasoft.Twain.Device.Online">
            <summary> Gets a value indicating if the device is powered up and ready to use. </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> A value indicating if the device is powered up and ready to use. </value>
        </member>
        <member name="P:Atalasoft.Twain.Device.EnableInterfaceOnly">
            <summary> <para>Gets a value indicating if the source will allow you to display the source interface without
            acquiring an image.</para>
            <para>If the device does support this feature, you can use the <see cref="M:Atalasoft.Twain.Device.ShowUserInterface"/> method to
            display the device interface and allow the user to select their options without acquiring an image.</para>
            </summary>
            <seealso cref="M:Atalasoft.Twain.Device.ShowUserInterface"/>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> A value indicating if the source will allow you to display the source interface without acquiring an image.
            </value>
        </member>
        <member name="P:Atalasoft.Twain.Device.DisplayProgressIndicator">
            <summary> Gets or sets a value to indicate if the source will display a progress bar during an acquisition.
            </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> A value to indicate if the source will display a progress bar during an acquisition. </value>
        </member>
        <member name="P:Atalasoft.Twain.Device.Language">
            <summary> Gets or sets the language to use for the source device. </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The language to use for the source device. </value>
        </member>
        <member name="P:Atalasoft.Twain.Device.MaxBatchBuffers">
            <summary> Gets or sets the number of pages that the scanner can buffer when <see cref="P:Atalasoft.Twain.Device.AutoScan"/> is
            enabled. </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The number of pages that the scanner can buffer when <see cref="P:Atalasoft.Twain.Device.AutoScan"/> is enabled. </value>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedMaxBatchBuffers"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.MaxFrames">
            <exception> Thrown if a connection to the device is not open. </exception>
            <summary> Gets or sets the maximum number of frames the device or application can accept. </summary>
            <value> The number of frames the device can accept. </value>
            <remarks> Use the <see cref="M:Atalasoft.Twain.Device.GetFrames"/> and <see cref="M:Atalasoft.Twain.Device.SetFrames(System.Drawing.RectangleF[])"/> methods when dealing with
            multiple frames. </remarks>
            <seealso cref="M:Atalasoft.Twain.Device.GetFrames"/>
            <seealso cref="M:Atalasoft.Twain.Device.SetFrames(System.Drawing.RectangleF[])"/>
            <seealso cref="P:Atalasoft.Twain.Device.Frame"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.ReacquireAllowed">
            <summary> Gets a value indicating whether the physical hardware is capable of acquiring multiple images of the same
            page without changes to the physical registration of that page. </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> A value indicating whether the physical hardware is capable of acquiring multiple images of the same page
            without changes to the physical registration of that page. </value>
        </member>
        <member name="P:Atalasoft.Twain.Device.SerialNumber">
            <summary> Gets a string containing the serial number of this device. </summary>
            <remarks> Multiple devices may all report the same serial number. </remarks>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> A string containing the serial number of this device. </value>
        </member>
        <member name="P:Atalasoft.Twain.Device.InterfaceControllable">
            <summary> Gets a value indicating if the interface can be hidden during an acquire.  If supported, you can hide the
            interface by setting the <STRONG>hideInterface</STRONG> parameter of the <see cref="M:Atalasoft.Twain.Device.Acquire"/> method.
            </summary>
            <seealso cref="M:Atalasoft.Twain.Device.Acquire"/>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> A value indicating if the interface can be hidden during an acquire. </value>
        </member>
        <member name="P:Atalasoft.Twain.Device.TransferCount">
            <summary> Gets or sets the number of images your application is willing to accept. </summary>
            <remarks> Set this value to -1 for unlimited acquires during a single session. </remarks>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The number of images your application is willing to accept. </value>
        </member>
        <member name="P:Atalasoft.Twain.Device.AutoBrightness">
            <summary> Gets or sets a value indicating if the AutoBrightness feature of the Source will be used. </summary>
            <value> A value indicating whether the auto brightness feature of the driver is enabled. </value>
            <exception> Thrown if a connection to the device is not open. </exception>
        </member>
        <member name="P:Atalasoft.Twain.Device.BitDepth">
            <summary> Gets or sets the bit depth for the acquisition. </summary>
            <remarks> You should set the <see cref="P:Atalasoft.Twain.Device.PixelType"/> property before setting the bit depth.  For a list of
            valid bit depth values supported by a device use the <see cref="M:Atalasoft.Twain.Device.GetSupportedBitDepths"/> method. </remarks>
            <value> The bit depth for the acquisition. </value>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedBitDepths"/>
            <seealso cref="P:Atalasoft.Twain.Device.PixelType"/>
            <exception> Thrown if a connection to the device is not open. </exception>
        </member>
        <member name="P:Atalasoft.Twain.Device.BitDepthReduction">
            <summary> Gets or sets the <see cref="T:Atalasoft.Twain.BitDepthReductionMode"/> the Source should use to reduce the bit depth of the
            data. </summary>
            <value> The <see cref="T:Atalasoft.Twain.BitDepthReductionMode"/> the Source should use to reduce the bit depth of the data. </value>
            <remarks> Use the <see cref="M:Atalasoft.Twain.Device.GetSupportedBitDepthReductionModes"/> method to find values supported by the
            device. </remarks>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedBitDepthReductionModes"/>
            <exception> Thrown if a connection to the device is not open. </exception>
        </member>
        <member name="P:Atalasoft.Twain.Device.Brightness">
            <summary> Gets or sets the amount of brightness the Source will add to the image. </summary>
            <remarks> Normal values are from -1000 to 1000 but can very from scanner to scanner.  Use the <see
            cref="M:Atalasoft.Twain.Device.GetSupportedBrightnessValues"/> method to find the values supported by the device. </remarks>
            <value> The amount of brightness the Source will add to the image. </value>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedBrightnessValues"/>
            <exception> Thrown if a connection to the device is not open. </exception>
        </member>
        <member name="P:Atalasoft.Twain.Device.Contrast">
            <summary> Gets or sets the amount of contrast the Source will add to the image. </summary>
            <remarks> Normal values are from -1000 to 1000 but can vary from scanner to scanner.  Use the <see
            cref="M:Atalasoft.Twain.Device.GetSupportedContrastValues"/> method to find values supported by the device. </remarks>
            <value> The amount of contrast the Source will add to the image. </value>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedContrastValues"/>
            <exception> Thrown if a connection to the device is not open. </exception>
        </member>
        <member name="P:Atalasoft.Twain.Device.ColorFilter">
            <summary> Gets or sets the color characteristic of the subtractive filter applied to the image data. </summary>
            <remarks> Multiple filters may be applied to a single acquisition. </remarks>
            <value> The color characteristic of the subtractive filter applied to the image data. </value>
            <exception> Thrown if a connection to the device is not open. </exception>
        </member>
        <member name="P:Atalasoft.Twain.Device.CustomDataSupported">
            <summary> Gets a value indicating whether the device supported functionality used by the <see
            cref="M:Atalasoft.Twain.Device.LoadParameters(System.IO.Stream)"/> and <see cref="M:Atalasoft.Twain.Device.SaveParameters(System.IO.Stream)"/> methods. </summary>
            <value> A value indication support for loading and saving device parameters. </value>
            <remarks> Twain and DotTwain have no knowledge of the data format used if this feature is available.  The data is
            specific to each device driver. </remarks>
            <seealso cref="M:Atalasoft.Twain.Device.LoadParameters(System.IO.Stream)"/>
            <seealso cref="M:Atalasoft.Twain.Device.SaveParameters(System.IO.Stream)"/>
            <exception> Thrown if a connection to the device is not open. </exception>
        </member>
        <member name="P:Atalasoft.Twain.Device.FlipRotation">
            <summary> Gets or sets a value which is used to properly orient images that flip orientation every other image.
            </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> A value which is used to properly orient images that flip orientation every other image. </value>
        </member>
        <member name="P:Atalasoft.Twain.Device.Gamma">
            <summary> Gets or sets the Source gamma correction value for the image data. </summary>
            <remarks> There is no set range of values for this property, however many devices default to a value of 2.2.
            </remarks>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The Source gamma correction value for the image data. </value>
        </member>
        <member name="P:Atalasoft.Twain.Device.Highlight">
            <summary> Gets or sets which value in an image should be interpreted as the lightest highlight. </summary>
            <remarks> All values lighter than this value will be clipped to this value. Valid values are usually from 0 to 255. 
            <see cref="M:Atalasoft.Twain.Device.GetSupportedHighlightValues"/> can be used to determine valid values for the device. </remarks>
            <seealso cref="P:Atalasoft.Twain.Device.Shadow"/>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> A value in an image should be interpreted as the lightest highlight. </value>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedHighlightValues"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.Halftone">
            <exception> Thrown if a connection to the device is not open. </exception>
            <summary> Gets or sets the halftone used by the device during the acquisition. </summary>
            <value> The name of the halftone used. </value>
            <remarks> Use the <see cref="M:Atalasoft.Twain.Device.GetSupportedHalftones"/> to find out what values are supported by the device.
            </remarks>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedHalftones"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.FileFormat">
            <summary> <para>Gets or sets the file format used when saving the acquired image directly to a file.</para>
            </summary>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedImageFormats"/>
            <example> FileTransfer Event </example>
            <exception> Thrown if a connection to the device is not open. </exception>
            <remarks> <para>Use the <see cref="M:Atalasoft.Twain.Device.GetSupportedImageFormats"/> method to find out which formats are supported
            by the device.  Some devices require the <see cref="P:Atalasoft.Twain.Device.TransferMethod"/> be set to TWSX_FILE or TWSX_FILE2
            before this property can be set.</para> </remarks>
            <value> The file format used when saving the acquired image directly to a file. </value>
        </member>
        <member name="P:Atalasoft.Twain.Device.Filter">
            <summary> Gets or sets the algorithm used to improve the quality of the image. </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The algorithm used to improve the quality of the image. </value>
            <remarks> Use <see cref="M:Atalasoft.Twain.Device.GetSupportedImageFilters"/> to find out which modes are supported by the device.
            </remarks>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedImageFilters"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.MinimumHeight">
            <summary> Gets the minimum height the source can acquire in <see cref="P:Atalasoft.Twain.Device.Units"/>. </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The minimum height the source can acquire in <see cref="P:Atalasoft.Twain.Device.Units"/>. </value>
        </member>
        <member name="P:Atalasoft.Twain.Device.MinimumWidth">
            <summary> Gets the minimum width the source can acquire in <see cref="P:Atalasoft.Twain.Device.Units"/>. </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The minimum width the source can acquire in <see cref="P:Atalasoft.Twain.Device.Units"/>. </value>
        </member>
        <member name="P:Atalasoft.Twain.Device.NativeResolution">
            <exception> Thrown if a connection to the device is not open. </exception>
            <summary> Gets the native optical resolution of the device. </summary>
            <value> The native optical resolution of the device in pixels per <see cref="P:Atalasoft.Twain.Device.Units"/>. </value>
            <remarks> Use <see cref="M:Atalasoft.Twain.Device.GetSupportedNativeResolutions"/> to find the optic resolutions for the device.
            </remarks>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedNativeResolutions"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.NoiseFilter">
            <summary> Gets or sets the noise filter the source will use. </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The noise filter the source will use. </value>
            <remarks> Use the <see cref="M:Atalasoft.Twain.Device.GetSupportedNoiseFilterModes"/> to find the filters supported by the device.
            </remarks>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedNoiseFilterModes"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.Orientation">
            <summary> Gets or sets the orientation of the acquired image. </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The orientation of the acquired image. </value>
            <remarks> Use <see cref="M:Atalasoft.Twain.Device.GetSupportedOrientationModes"/> to find the modes supported by the device.
            </remarks>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedOrientationModes"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.PhysicalHeight">
            <summary> Gets the maximum height in <see cref="P:Atalasoft.Twain.Device.Units"/> the source can acquire. </summary>
            <seealso cref="P:Atalasoft.Twain.Device.PhysicalWidth"/>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The maximum height in <see cref="P:Atalasoft.Twain.Device.Units"/> the source can acquire. </value>
        </member>
        <member name="P:Atalasoft.Twain.Device.PhysicalWidth">
            <summary> Gets the maximum width in <see cref="P:Atalasoft.Twain.Device.Units"/> the source can acquire. </summary>
            <seealso cref="P:Atalasoft.Twain.Device.PhysicalHeight"/>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The maximum width in <see cref="P:Atalasoft.Twain.Device.Units"/> the source can acquire. </value>
        </member>
        <member name="P:Atalasoft.Twain.Device.PixelType">
            <summary> <para>Gets or sets the pixel format to acquire.</para>
            <para>You should set this property before setting <see cref="P:Atalasoft.Twain.Device.BitDepth"/>.</para> </summary>
            <remarks> <para>Do not assume the source will return the pixel format you ask for.  This is only requesting that the
            image be returned in this format.</para>
            <para>Use <see cref="M:Atalasoft.Twain.Device.GetSupportedPixelTypes"/> to find out which pixel types are supported by the
            device.</para> </remarks>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The pixel format to acquire. </value>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedPixelTypes"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.PixelFlavor">
            <exception> Thrown if a connection to the device is not open. </exception>
            <summary> Gets or sets a value indicating whether the image data uses the value 0 for the darkest color or the
            lightest color. </summary>
            <value> A value indicating the value of 0 in the image data. </value>
            <remarks> Normally this is only used for 1-bit scans, though some devices allow its use for 8-bit grayscale as well.
            </remarks>
        </member>
        <member name="P:Atalasoft.Twain.Device.Rotation">
            <summary> Gets or sets the amount to rotate the image by the Source. </summary>
            <remarks> This amount is additive to any rotation done in <see cref="P:Atalasoft.Twain.Device.Orientation"/>.  Normal values are in
            degrees from -360 to 360, but <see cref="M:Atalasoft.Twain.Device.GetSupportedRotations"/> should be used to find the valid values for
            the device. </remarks>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The amount to rotate the image by the Source. </value>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedRotations"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.Shadow">
            <summary> Gets or sets the value in an image which should be interpreted as the darkest shadow. </summary>
            <remarks> All values darker than this value will be clipped to this value. Valid values are usually from 0 to 255,
            but <see cref="M:Atalasoft.Twain.Device.GetSupportedShadowValues"/> should be used to find valid values for the device. </remarks>
            <seealso cref="P:Atalasoft.Twain.Device.Highlight"/>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The value in an image which should be interpreted as the darkest shadow. </value>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedShadowValues"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.FrameSize">
            <summary> <para>Gets or sets the static frame size for the acquire.</para> </summary>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedFrameSizes"/>
            <seealso cref="P:Atalasoft.Twain.Device.Frame"/>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The static frame size for the acquire. </value>
            <remarks> <para>This is similar to the <see cref="P:Atalasoft.Twain.Device.Frame"/> property, but provides static sized frames to
            choose from.  If the device supports this feature, use the <see cref="M:Atalasoft.Twain.Device.GetSupportedFrameSizes"/> method to
            find out which sizes are supported by the device.</para> </remarks>
        </member>
        <member name="P:Atalasoft.Twain.Device.Threshold">
            <summary> Gets or sets the dividing line between black and white for 1-bit acquires. </summary>
            <remarks> Valid values are usually from 0 to 255.  Use <see cref="M:Atalasoft.Twain.Device.GetSupportedThresholdValues"/> to find
            valid values for the device. </remarks>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The dividing line between black and white for 1-bit acquires. </value>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedThresholdValues"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.Units">
            <summary> Gets or sets a value indicating the units of measure for this acquire. </summary>
            <remarks> <para>This property affects the values of other measurement properties for the source.</para>
            <para>Use <see cref="M:Atalasoft.Twain.Device.GetSupportedUnitTypes"/> to find valid units for this device.</para> </remarks>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> A value indicating the units of measure for this acquire. </value>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedUnitTypes"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.Resolution">
            <summary> Gets or sets the number of pixels per unit as specified by the Units property. </summary>
            <remarks> <para>When setting this property, the <see cref="P:Atalasoft.Twain.Device.Units"/> property will also be set
            automatically.</para>
            <para>Use <see cref="M:Atalasoft.Twain.Device.GetSupportedResolutions"/> to find the resolutions supported by the device.</para>
            </remarks>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The number of pixels per unit as specified by the Units property. </value>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedResolutions"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.Scaling">
            <summary> Gets or sets the amount of scaling the Source will perform on the image. </summary>
            <remarks> <para><see cref="P:Atalasoft.Twain.Device.Units"/> does not affect this property. A value of 1.0 is equivalent to 100% (no
            change). </para>
            <para>Use <see cref="M:Atalasoft.Twain.Device.GetSupportedScalingValues"/> to find valid values for this device.</para> </remarks>
            <exception> Thrown if a connection to the device is not open. </exception>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedScalingValues"/>
            <value> The amount of scaling the Source will perform on the image. </value>
        </member>
        <member name="P:Atalasoft.Twain.Device.Author">
            <summary> Gets or sets the name or other identifying information about the Author of the image. </summary>
            <value> The current name of the image author. </value>
            <exception> Thrown if a connection to the device is not open. </exception>
        </member>
        <member name="M:Atalasoft.Twain.Device.StartAutomaticCapture(System.String,System.Int32,System.Int32,System.Int32)">
            <summary> <para>Starts an automatic capture process. </para>
            <para>This method does not acquire the images. Automatic capture implies that the device is capable of capturing
            images without the presence of the Application. This means that it must be possible for the Application to close the
            device and reopen it later, after the images have been captured. </para> </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if timeBeforeFirstCapture or timeBetweenCaptures is less than zero, or if imageCount is less than
            1. </exception>
            <param name="captureDirectory"> The directory to save the captured image into. </param>
            <param name="timeBeforeFirstCapture"> The number of milliseconds before the first image is captured. </param>
            <param name="timeBetweenCaptures"> The number of milliseconds between captures. </param>
            <param name="imageCount"> The number of images to capture. </param>
        </member>
        <member name="P:Atalasoft.Twain.Device.BatteryMinutes">
            <summary> Gets the number of battery minutes remaining in the device. </summary>
            <value> <para>The number of minutes remaining or one of the following values:</para>
            <para>
            <TABLE cellSpacing="2" cols="2" cellPadding="2" border="1">
            <TBODY>
            <TR>
            <TD align="middle">-2</TD>
            <TD>Indicates infinite power.</TD></TR>
            <TR>
            <TD align="middle">-1</TD>
            <TD>Indicates that the device cannot report the remaining battery power.</TD></TR></TBODY></TABLE></para> </value>
            <exception> Thrown if a connection to the device is not open. </exception>
        </member>
        <member name="P:Atalasoft.Twain.Device.BatteryPercentage">
            <summary> Gets the percentage of remaining battery power. </summary>
            <value> <para>The percentage remaining or one of the following values:</para>
            <para>
            <TABLE cellSpacing="2" cols="2" cellPadding="2" border="1">
            <TBODY>
            <TR>
            <TD>-2</TD>
            <TD>Indicates infinite power.</TD></TR>
            <TR>
            <TD>-1</TD>
            <TD>Indicates that the device cannot report the remaining battery power.</TD></TR></TBODY></TABLE></para> </value>
            <exception> Thrown if a connection to the device is not open. </exception>
        </member>
        <member name="P:Atalasoft.Twain.Device.CameraPreviewInterface">
            <summary> Gets a value indicating if the device supports a preview interface. </summary>
            <value> A value indicating if the device supports a preview interface. </value>
            <exception> Thrown if a connection to the device is not open. </exception>
        </member>
        <member name="P:Atalasoft.Twain.Device.Caption">
            <summary> Gets or sets a general note about the acquired image. </summary>
            <value> A general note about the acquired image. </value>
            <exception> Thrown if a connection to the device is not open. </exception>
        </member>
        <member name="P:Atalasoft.Twain.Device.DateTime">
            <summary> Gets or sets the date and time of the device's clock. </summary>
            <remarks> Managed in the form YYYY/MM/DD HH:mm:SS:sss where YYYY is the year, MM is the numerical month, DD is the
            numerical day, HH is the hour, mm is the minute, SS is the second, and sss is the millisecond. </remarks>
            <value> The date and time of the device's clock. </value>
            <exception> Thrown if a connection to the device is not open. </exception>
        </member>
        <member name="P:Atalasoft.Twain.Device.EndorserNumber">
            <summary> Gets or sets the starting endorser / imprinter number. </summary>
            <remarks> The Twain specification states that all other endorser/imprinter properties should be handled through the
            device s user interface.  However, you can attempt to set these values through code using the <see
            cref="M:Atalasoft.Twain.Device.SetImprinterEndorser(Atalasoft.Twain.ImprinterEndorserType,System.Boolean)"/> method. </remarks>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The starting endorser / imprinter number. </value>
            <seealso cref="M:Atalasoft.Twain.Device.SetImprinterEndorser(Atalasoft.Twain.ImprinterEndorserType,System.Boolean)"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.PowerSupply">
            <summary> Gets the type of power supply used for this camera. </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The type of power supply used for this camera. </value>
            <remarks> Use <see cref="M:Atalasoft.Twain.Device.GetSupportedPowerSupplies"/> to find the modes supported by the device. </remarks>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedPowerSupplies"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.ThumbnailEnabled">
            <summary> Gets or sets a value indicating if a thumbnail should be returned instead of the full size image.
            </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> A value indicating if a thumbnail should be returned instead of the full size image. </value>
        </member>
        <member name="P:Atalasoft.Twain.Device.ExposureTime">
            <summary> <para>Gets or sets the exposure time used to capture the image in seconds.</para> </summary>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedExposureTimes"/>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The exposure time used to capture the image in seconds. </value>
            <remarks> <para>Use the <see cref="M:Atalasoft.Twain.Device.GetSupportedExposureTimes"/> method to find out supported times for this
            device.</para> </remarks>
        </member>
        <member name="P:Atalasoft.Twain.Device.FlashUsed">
            <summary> Gets or sets the type of flash, if any, is used. </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The type of flash, if any, is used. </value>
            <remarks> Use <see cref="M:Atalasoft.Twain.Device.GetSupportedFlashModes"/> to find out which modes the device supports. </remarks>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedFlashModes"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.ImageCount">
            <summary> <para>Gets the number of available images. </para>
            <para>This is only valid for devices which contain an internal buffer.  You can find out if there are any pending
            images during an acquisition by checking the <see cref="P:Atalasoft.Twain.AcquireEventArgs.PendingImages"/> property of the <see
            cref="T:Atalasoft.Twain.AcquireEventArgs"/> class.</para> </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The number of available images. </value>
        </member>
        <member name="M:Atalasoft.Twain.Device.SetImageDataset(System.Int32[])">
            <summary> <para>Sets the indices of the images you want to acquire. </para>
            <para>This is useful when you want to acquire multiple images from a camera with a single call to the <see
            cref="M:Atalasoft.Twain.Device.Acquire"/> method.</para> </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <param name="indices"> An array of image index values you want to acquire. </param>
        </member>
        <member name="P:Atalasoft.Twain.Device.LightPath">
            <summary> Gets or sets a value which describes whether the image was captured transmissively or reflectively.
            </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> A value which describes whether the image was captured transmissively or reflectively. </value>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedLightPathModes"/>
            <remarks> Use <see cref="M:Atalasoft.Twain.Device.GetSupportedLightPathModes"/> to find the modes supported by the device. </remarks>
        </member>
        <member name="P:Atalasoft.Twain.Device.LightSource">
            <summary> Gets or sets a value that describes the general color characteristic of the light source used to acquire
            the image. </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> A value that describes the general color characteristic of the light source used to acquire the image.
            </value>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedLightSourceModes"/>
            <remarks> Use <see cref="M:Atalasoft.Twain.Device.GetSupportedLightSourceModes"/> to find the modes supported by the device.
            </remarks>
        </member>
        <member name="P:Atalasoft.Twain.Device.ZoomFactor">
            <summary> <para>Gets or sets the zoom factor to use for the acquire. </para>
            <para>Valid values for this property are source defined.</para> </summary>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedZoomFactors"/>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The zoom factor to use for the acquire. </value>
            <remarks> Use <see cref="M:Atalasoft.Twain.Device.GetSupportedZoomFactors"/> to obtain an array of valid values. </remarks>
        </member>
        <member name="P:Atalasoft.Twain.Device.Duplex">
            <summary> Gets the duplex mode supported by this device. </summary>
            <seealso cref="P:Atalasoft.Twain.Device.DuplexEnabled"/>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The duplex mode for this device. </value>
        </member>
        <member name="P:Atalasoft.Twain.Device.DuplexEnabled">
            <summary> Gets or sets a value indicating if the duplex feature is enabled. </summary>
            <seealso cref="P:Atalasoft.Twain.Device.Duplex"/>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> A value indicating if the duplex feature is enabled. </value>
        </member>
        <member name="P:Atalasoft.Twain.Device.PaperDetectable">
            <summary> Gets a value indicating if the device has a paper sensor. </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> A value indicating if the device has a paper sensor. </value>
        </member>
        <member name="P:Atalasoft.Twain.Device.AutomaticBorderDetection">
            <summary> Gets or sets a value to indicate if the automatic border detection feature of the source should be used.
            </summary>
            <value> A value indicating whether the automatic border detection feature is enabled. </value>
            <exception> Thrown if a connection to the device is not open. </exception>
        </member>
        <member name="P:Atalasoft.Twain.Device.AutomaticDeskew">
            <summary> Gets or sets a value indicating if the automatic deskew feature of the source should be used. </summary>
            <value> A value indicating whether the automatic deskew feature is enabled. </value>
            <exception> Thrown if a connection to the device is not open. </exception>
        </member>
        <member name="P:Atalasoft.Twain.Device.AutomaticRotate">
            <summary> Gets or sets a value indicating if the automatic rotate feature of the source should be used. </summary>
            <value> A value indicating whether the automatic rotate feature is enabled. </value>
            <exception> Thrown if a connection to the device is not open. </exception>
        </member>
        <member name="P:Atalasoft.Twain.Device.Frame">
            <summary> <para>Gets or sets the rectangular area of the scanning bed to acquire.</para>
            <para>If you know ahead of time the location and size of the object to scan, and the device supports this feature,
            you can decrease the amount of scanning time by setting this property.</para> </summary>
            <seealso cref="P:Atalasoft.Twain.Device.FrameSize"/>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> The rectangular area of the scanning bed to acquire. </value>
            <remarks> If the device supports multiple frames, the <see cref="M:Atalasoft.Twain.Device.GetFrames"/> and <see
            cref="M:Atalasoft.Twain.Device.SetFrames(System.Drawing.RectangleF[])"/> can be used in place of this property. </remarks>
            <seealso cref="M:Atalasoft.Twain.Device.GetFrames"/>
            <seealso cref="M:Atalasoft.Twain.Device.SetFrames(System.Drawing.RectangleF[])"/>
            <seealso cref="P:Atalasoft.Twain.Device.ImageLayout"/>
        </member>
        <member name="P:Atalasoft.Twain.Device.LampState">
            <summary> Gets or sets a value indicating if the lamp is currently, or should be to ON. </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> A value indicating if the lamp is currently, or should be to ON. </value>
        </member>
        <member name="P:Atalasoft.Twain.Device.Overscan">
            <summary> Gets or sets a value indicating the type of overscan the source should perform. </summary>
            <remarks> <para>Overscan is used to scan outside of the boundaries described by <see cref="P:Atalasoft.Twain.Device.Frame"/>, and is
            used to help acquire image data that may be lost because of skewing.</para>
            <para>Use <see cref="M:Atalasoft.Twain.Device.GetSupportedOverscanModes"/> to find the modes supported by the device.</para>
            </remarks>
            <exception> Thrown if a connection to the device is not open. </exception>
            <value> A value indicating the type of overscan the source should perform. </value>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedOverscanModes"/>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedZoomFactors">
            <summary> Returns an array of valid zoom factors for this device. </summary>
            <returns> An array of valid zoom factors for this device. </returns>
            <seealso cref="P:Atalasoft.Twain.Device.ZoomFactor"/>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedPrinters">
            <summary> Finds the type of imprinter or endorser supported by this device.  These can be used to set which
            imprinter or endorser to use in the <see cref="M:Device.SetImprinterEndorser"/> method. </summary>
            <returns> A bit flag value of <see cref="T:Atalasoft.Twain.ImprinterEndorserType"/> specifying which printers are supported.
            </returns>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="M:Device.SetImprinterEndorser"/>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedTransferMethods">
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="P:Atalasoft.Twain.Device.TransferMethod"/>
            <summary> Returns the transfer methods supported by the device. </summary>
            <returns> An array of <see cref="T:Atalasoft.Twain.TwainTransferMethod"/> values supported by the device. </returns>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedJobControls">
            <summary> Returns the job controls supported by the device. </summary>
            <returns> An array of <see cref="T:Atalasoft.Twain.BatchJobControl"/> values supported by the device. </returns>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="P:Atalasoft.Twain.Device.JobControl"/>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedLanguageTypes">
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <summary> Returns the language types supported by the device. </summary>
            <returns> An array of <see cref="T:Atalasoft.Twain.LanguageType"/> indicating the languages supported by the device driver. </returns>
            <seealso cref="P:Atalasoft.Twain.Device.Language"/>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedMaxBatchBuffers">
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="P:Atalasoft.Twain.Device.MaxBatchBuffers"/>
            <summary> Returns the supported maximum batch buffers for the device. </summary>
            <returns> An array of values indicating the supported maximum batch buffers. </returns>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedPowerSupplies">
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="P:Atalasoft.Twain.Device.PowerSupply"/>
            <summary> Returns the supported power supplies for the device. </summary>
            <returns> An array of <see cref="T:Atalasoft.Twain.PowerSupplyMode"/>s supported by the device. </returns>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedPrinterModes">
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="M:SetImprinterEndorser"/>
            <summary> Returns the printer modes supported by the device. </summary>
            <returns> An array of <see cref="T:Atalasoft.Twain.ImprinterEndorserMode"/> values supported by the device. </returns>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedBarCodes">
            <summary> Returns the barcodes supported by the device. </summary>
            <returns> An array of <see cref="T:Atalasoft.Twain.BarCodeType"/> specifying which barcodes can be detected by the device. </returns>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedPatchCodes"/>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedPatchCodes">
            <summary> Returns the patchcodes supported by the device. </summary>
            <returns> An array of <see cref="T:Atalasoft.Twain.PatchCodeType"/> specifying the patchcodes the device can detect. </returns>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedBarCodes"/>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedBitDepths">
            <summary> Returns the supported bit depth values for the current <see cref="P:Atalasoft.Twain.Device.PixelType"/>. </summary>
            <returns> An array of bit depth values for the current <see cref="P:Atalasoft.Twain.Device.PixelType"/>. </returns>
            <remarks> This method only returns the bit depth values supported by the current <STRONG>PixelType</STRONG>.  To get
            all possible bit depths, call this method for each <STRONG>PixelType</STRONG>. </remarks>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="P:Atalasoft.Twain.Device.BitDepth"/>
            <seealso cref="P:Atalasoft.Twain.Device.PixelType"/>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedBitDepthReductionModes">
            <summary> Returns the BitDepthReductionModes supported by the device. </summary>
            <returns> An array of <see cref="T:Atalasoft.Twain.BitDepthReductionMode"/> values supported by the device. </returns>
            <remarks> If the device supports the <see cref="P:Atalasoft.Twain.Device.BitDepthReduction"/> property, this method will provide a
            list of valid values for this property. </remarks>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedBrightnessValues">
            <summary> Returns the brightness values supported by the device. </summary>
            <returns> An array of brightness values supported by the device. </returns>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="P:Atalasoft.Twain.Device.Brightness"/>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedContrastValues">
            <summary> Returns the contrast values supported by the device. </summary>
            <returns> An array of contrast values supported by the device. </returns>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="P:Atalasoft.Twain.Device.Contrast"/>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedFlashModes">
            <summary> Returns the flash modes supported by the device. </summary>
            <returns> An array of <see cref="T:Atalasoft.Twain.FlashMode"/> supported by the device. </returns>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="P:Atalasoft.Twain.Device.FlashUsed"/>
            <remarks> This represents the <STRONG>ICAP_FLASHUSED2</STRONG> device capability. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedHalftones">
            <summary> Returns the halftone values supported by the device. </summary>
            <returns> An array of string values specifying the halftones supported by the device. </returns>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="P:Atalasoft.Twain.Device.Halftone"/>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedHighlightValues">
            <summary> Returns the highlight values supported by the device. </summary>
            <returns> An array of values supported by the device. </returns>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="P:Atalasoft.Twain.Device.Highlight"/>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedImageFilters">
            <summary> Returns the image filters supported by the device. </summary>
            <returns> An array of <see cref="T:Atalasoft.Twain.ImageFilterMode"/> supported by the device. </returns>
            <seealso cref="P:Atalasoft.Twain.Device.Filter"/>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedJpegPixelTypes">
            <summary> Returns the Jpeg pixel types supported by the device. </summary>
            <returns> An array of <see cref="T:Atalasoft.Twain.ImagePixelType"/> supported by the device. </returns>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="P:Atalasoft.Twain.Device.JpegPixelType"/>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedJpegQualityValues">
            <summary> Returns the Jpeg quality values supported by the device. </summary>
            <returns> An array of Jpeg quality values supported by the device. </returns>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="P:Atalasoft.Twain.Device.JpegQuality"/>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedLightPathModes">
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="P:Atalasoft.Twain.Device.LightPath"/>
            <summary> Returns the light path modes supported by the device. </summary>
            <returns> An array of <see cref="T:Atalasoft.Twain.LightPathMode"/> values supported by the device. </returns>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedLightSourceModes">
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="P:Atalasoft.Twain.Device.LightSource"/>
            <summary> Returns the light source modes supported by the device. </summary>
            <returns> An array of <see cref="T:Atalasoft.Twain.LightSourceMode"/> values supported by the device. </returns>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedNoiseFilterModes">
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="P:Atalasoft.Twain.Device.NoiseFilter"/>
            <summary> Returns the noise filter modes supported by the device. </summary>
            <returns> An array of <see cref="T:Atalasoft.Twain.NoiseFilterMode"/> values supported by the device. </returns>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedOrientationModes">
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="P:Atalasoft.Twain.Device.Orientation"/>
            <summary> Returns the orientation modes supported by the device. </summary>
            <returns> An array of <see cref="T:Atalasoft.Twain.OrientationMode"/> values supported by the device. </returns>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedOverscanModes">
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="P:Atalasoft.Twain.Device.Overscan"/>
            <summary> Returns the overscan modes supported by the device. </summary>
            <returns> An array of <see cref="T:Atalasoft.Twain.OverscanMode"/> values supported by the device. </returns>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedPixelTypes">
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="P:Atalasoft.Twain.Device.PixelType"/>
            <summary> Returns the pixel types supported by the device. </summary>
            <returns> An array of <see cref="T:Atalasoft.Twain.ImagePixelType"/> values supported by the device. </returns>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedRotations">
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="P:Atalasoft.Twain.Device.Rotation"/>
            <summary> Returns the rotations supported by the device. </summary>
            <returns> An array of supported rotation values. </returns>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedShadowValues">
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="P:Atalasoft.Twain.Device.Shadow"/>
            <summary> Returns the shadow values supported by the device. </summary>
            <returns> An array of shadow values supported by the device. </returns>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedThresholdValues">
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="P:Atalasoft.Twain.Device.Threshold"/>
            <summary> Returns the threshold values supported by the device. </summary>
            <returns> An array of threshold values supported by the device. </returns>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedIccProfileOptions">
            <summary> Returns an array of <see cref="T:Atalasoft.Twain.TwainIccProfileOption"/> values indicating what type of ICC profiles are
            supported by the device. </summary>
            <returns> An array of supported ICC profile options. </returns>
            <seealso cref="P:Atalasoft.Twain.Device.IccProfile"/>
            <remarks> If the device supports linking or embedding ICC profiles, this feature can be set using the <see
            cref="P:Atalasoft.Twain.Device.IccProfile"/> property. </remarks>
            <exception> Thrown if the state is less than SourceOpen. </exception>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedUnitTypes">
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="P:Atalasoft.Twain.Device.Units"/>
            <summary> Returns the unit values supported by the device. </summary>
            <returns> An array of <see cref="T:Atalasoft.Twain.UnitType"/> values supported by the device. </returns>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedNativeResolutions">
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <summary> Returns the native resolution values for the device. </summary>
            <returns> An array of <see cref="T:Atalasoft.Twain.TwainResolution"/> containing the supported native resolution values. </returns>
            <seealso cref="P:Atalasoft.Twain.Device.NativeResolution"/>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedScalingValues">
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <seealso cref="P:Atalasoft.Twain.Device.Scaling"/>
            <summary> Returns scaling values supported by the device. </summary>
            <returns> An array of SizeF values specifying the supported scaling. </returns>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedCapabilities">
            <summary> Returns a list of all the capabilities for which the Source will answer inquiries. </summary>
            <returns> An array of DeviceCapability values. </returns>
            <remarks> This does not indicate which capabilities the Source will allow to be set by the application.  Some
            capabilities can only be set if certain setup work has been done, so the Source cannot globally answer which
            capabilities are set-able. </remarks>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedCompressionModes">
            <summary> Returns the supported compression modes for this device. </summary>
            <returns> An array of <see cref="T:Atalasoft.Twain.CompressionMode"/>. </returns>
            <seealso cref="P:Atalasoft.Twain.Device.Compression"/>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedExposureTimes">
            <summary> Returns an array of exposure times supported by the device. </summary>
            <returns> An array of exposure times supported by the device. </returns>
            <seealso cref="P:Atalasoft.Twain.Device.ExposureTime"/>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedExtendedCapabilities">
            <summary> Returns the extended capabilities supported by the device. </summary>
            <seealso cref="M:Atalasoft.Twain.Device.SetExtendedCapabilities(Atalasoft.Twain.DeviceCapability[])"/>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
            <returns> An array of DeviceCapabilities the device will allow. </returns>
            <remarks> Extended capabilities are used in the <STRONG>SourceEnabled</STRONG> and <STRONG>ReadyToTransfer</STRONG>
            states. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedFrameSizes">
            <summary> Returns the frame sizes supported by the device. </summary>
            <returns> An array of <see cref="T:Atalasoft.Twain.StaticFrameSizeType"/> specifying the supported sizes for the source. </returns>
            <seealso cref="T:Atalasoft.Twain.StaticFrameSizeType"/>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedImageFormats">
            <summary> Returns a list of the file formats supported by this device. </summary>
            <returns> An array of supported <see cref="T:Atalasoft.Twain.SourceImageFormat"/>. </returns>
            <seealso cref="T:Atalasoft.Twain.SourceImageFormat"/>
            <example> FileTransfer Event </example>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
        </member>
        <member name="M:Atalasoft.Twain.Device.GetSupportedResolutions">
            <summary> Returns supported resolution values for the device. </summary>
            <returns> An array of valid resolutions for this source. </returns>
            <seealso cref="P:Atalasoft.Twain.Device.Resolution"/>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if there is a Twain error during processing. </exception>
        </member>
        <member name="M:Atalasoft.Twain.Device.PreFilterMessage(System.Windows.Forms.Message@)">
            <inheritdoc/>
        </member>
        <member name="M:Atalasoft.Twain.Device.Dispose">
            <summary> Releases resources used by the device when created from the <see cref="M:Atalasoft.Twain.Acquisition.CreateDeviceSession(System.String)"/>
            method.  This should not be used for <see cref="T:Atalasoft.Twain.Device"/> objects in the <see cref="T:Atalasoft.Twain.DeviceCollection"/>. </summary>
        </member>
        <member name="T:Atalasoft.Twain.CustomCapability">
            <summary>
            This class is used to get any capability value from the device.
            </summary>
        </member>
        <member name="T:Atalasoft.Twain.DeviceCollection">
            <summary> <para>Contains a collection of all <STRONG>Device</STRONG> objects on the system. </para> </summary>
            <remarks> <para>This information can be used to look for a device which fits the needs of your application, or to
            create a custom interface for selecting a device instead of using the Twain dialog displayed by <see
            cref="M:Atalasoft.Twain.Acquisition.ShowSelectSource"/>.</para> </remarks>
        </member>
        <member name="M:Atalasoft.Twain.DeviceCollection.#ctor">
            <overloads> Creates a new instance of DeviceCollection. </overloads>
        </member>
        <member name="P:Atalasoft.Twain.DeviceCollection.Default">
            <summary> Gets the system default device. </summary>
            <value> The system default device. </value>
            <remarks> This property performs a TWAIN query to obtain the current default device.  Since the system default
            device can change at any time, never call methods directly on this property. </remarks>
            <example>
<code lang="CS"><![CDATA[
Device dev = this.acquisition1.Devices.Default;
if (dev.TryOpen())
{
    dev.PixelType = ImagePixelType.BlackAndWhite;
    dev.ModalAcquire = true;
    dev.Acquire();
    dev.Close();
}
]]></code>

<code lang="VB"><![CDATA[
Dim dev As Device = Me.acquisition1.Devices.Default
If dev.TryOpen() Then
    dev.PixelType = ImagePixelType.BlackAndWhite
    dev.ModalAcquire = True
    dev.Acquire()
    dev.Close()
End If
]]></code>
</example>
        </member>
        <member name="P:Atalasoft.Twain.DeviceCollection.Item(System.Int32)">
            <summary> Gets a <see cref="T:Atalasoft.Twain.Device"/> from the collection at the specified index. </summary>
            <value> A <see cref="T:Atalasoft.Twain.Device"/> from the collection at the specified index. </value>
            <param name="index"> The collection index of the device. </param>
        </member>
        <member name="M:Atalasoft.Twain.DeviceCollection.ScanForChanges">
            <summary> Checks the system for any device changes and regenerates the collection. </summary>
            <remarks> This method is automatically called the first time you access the <see cref="P:Atalasoft.Twain.Acquisition.Devices"/>
            property of the <see cref="T:Atalasoft.Twain.Acquisition"/> object. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.DeviceCollection.GetDevice(System.String)">
            <summary> Returns a specific <see cref="T:Atalasoft.Twain.Device"/> object. </summary>
            <returns> A <see cref="T:Atalasoft.Twain.Device"/> object that matches the product name or null (Nothing in Visual Basic). </returns>
            <seealso cref="T:Atalasoft.Twain.Device"/>
            <param name="productName"> The product name of the <see cref="T:Atalasoft.Twain.Device"/>.  This is the name that shows in the Select
            Source dialog. </param>
        </member>
        <member name="T:Atalasoft.Twain.DocumentFeeder">
            <summary> Gives control over the document feeder used by a scanner. </summary>
        </member>
        <member name="M:Atalasoft.Twain.DocumentFeeder.NegotiateCapabilities">
            <summary> Use this method to notify the device driver that control over the document feeder is requested. </summary>
            <returns> The code returned from the driver. </returns>
            <remarks> This method only needs to be called if the <see cref="M:Atalasoft.Twain.DocumentFeeder.ClearPage"/>, <see
            cref="M:Atalasoft.Twain.DocumentFeeder.FeedPage"/> or <see cref="M:Atalasoft.Twain.DocumentFeeder.RewindPage"/> methods will be used.  The <see
            cref="P:Atalasoft.Twain.DocumentFeeder.Enabled"/> property must be set to true before calling <STRONG>NegotiateCapabilities</STRONG>.
            </remarks>
        </member>
        <member name="P:Atalasoft.Twain.DocumentFeeder.FeederPrep">
            <exception> Thrown if the state is less than SourceOpen for getting the value, or is not equal to SourceOpen when
            setting the value. </exception>
            <summary> Gets or sets the <STRONG>CAP_FEEDERPREP</STRONG> capability, which is used to improve movement of the page
            through the feeder. </summary>
            <value> A value indicating if the device can improve movement of the page through the feeder. </value>
        </member>
        <member name="P:Atalasoft.Twain.DocumentFeeder.AutoFeed">
            <summary> Gets or sets a value indicating if the feeder will automatically load the pages. </summary>
            <value> A value indicating if the feeder will automatically load the pages. </value>
        </member>
        <member name="P:Atalasoft.Twain.DocumentFeeder.Enabled">
            <summary> <para>Gets or sets a value indicating if the document feeder is enabled. </para><para>You should set this
            property to true before getting or setting any other <see cref="T:Atalasoft.Twain.DocumentFeeder"/> properties.</para> </summary>
            <value> A value indicating if the document feeder is enabled. </value>
        </member>
        <member name="P:Atalasoft.Twain.DocumentFeeder.Loaded">
            <summary> Gets a value indicating if the document feeder has pages loaded. </summary>
            <value> A value indicating if there are pages in the feeder. </value>
            <remarks> In most cases this property can be used to find out if a scanner has a document feeder; however there are
            some scanners that always return true. </remarks>
        </member>
        <member name="P:Atalasoft.Twain.DocumentFeeder.PageOrder">
            <summary> Gets or sets a value stating the order in which the pages will be scanned. </summary>
            <value> A value stating the order in which the pages will be scanned. </value>
        </member>
        <member name="P:Atalasoft.Twain.DocumentFeeder.PageAlignment">
            <summary> Gets or sets the positioning of the page on the scanner. </summary>
            <value> The positioning of the page on the scanner. </value>
        </member>
        <member name="P:Atalasoft.Twain.DocumentFeeder.FeederType">
            <exception> Thrown if the state is less than SourceOpen for getting the value, or is not equal to SourceOpen when
            setting the value. </exception>
            <summary> Gets or sets the <STRONG>ICAP_FEEDERTYPE</STRONG> capability which determines which feeder type is used.
            </summary>
            <value> Indicates which feeder type is used. </value>
            <remarks> It's advised that this capability be set before image capabilities such as resolution and pixel type.
            </remarks>
        </member>
        <member name="M:Atalasoft.Twain.DocumentFeeder.FeedPage">
            <summary> Forces the document feeder to eject the current page and load the next page. </summary>
            <seealso cref="M:Atalasoft.Twain.DocumentFeeder.ClearPage"/>
            <seealso cref="M:Atalasoft.Twain.DocumentFeeder.RewindPage"/>
        </member>
        <member name="M:Atalasoft.Twain.DocumentFeeder.RewindPage">
            <summary> Forces the document feeder to return the current page to the input area and bring the last page scanned
            back into the scan area. </summary>
            <seealso cref="M:Atalasoft.Twain.DocumentFeeder.ClearPage"/>
            <seealso cref="M:Atalasoft.Twain.DocumentFeeder.FeedPage"/>
        </member>
        <member name="M:Atalasoft.Twain.DocumentFeeder.ClearPage">
            <summary> Ejects the current page being acquired and leaves the feeder acquire area empty. </summary>
            <seealso cref="M:Atalasoft.Twain.DocumentFeeder.FeedPage"/>
            <seealso cref="M:Atalasoft.Twain.DocumentFeeder.RewindPage"/>
        </member>
        <member name="M:Atalasoft.Twain.DocumentFeeder.GetOutputFeederPockets">
            <exception> Thrown if the state is not SourceOpen. </exception>
            <summary> Gets the feeder pockets for the device. </summary>
            <returns> An array of feeder pockets for the device. </returns>
        </member>
        <member name="M:Atalasoft.Twain.DocumentFeeder.SetOutputFeederPockets(Atalasoft.Twain.TwainFeederPocket[])">
            <summary> Sets the feeder pockets used for page output. </summary>
            <returns> True if the operation was a success. </returns>
            <exception> Thrown if the state is not SourceOpen. </exception>
            <param name="pockets"> An array of <see cref="T:Atalasoft.Twain.TwainFeederPocket"/> where pages should be placed after scanning.
            </param>
        </member>
        <member name="T:Atalasoft.Twain.QueryOperation">
            <summary> Specifies the type of operation that can be performed on a specific capability. </summary>
        </member>
        <member name="F:Atalasoft.Twain.QueryOperation.TWQC_NONE">
            <summary> No operations are allowed. </summary>
        </member>
        <member name="F:Atalasoft.Twain.QueryOperation.TWQC_GET">
            <summary> A MSG_GET can be performed. </summary>
        </member>
        <member name="F:Atalasoft.Twain.QueryOperation.TWQC_SET">
            <summary> A MSG_SET can be performed. </summary>
        </member>
        <member name="F:Atalasoft.Twain.QueryOperation.TWQC_GETDEFAULT">
            <summary> A MSG_GETDEFAULT can be performed. </summary>
        </member>
        <member name="F:Atalasoft.Twain.QueryOperation.TWQC_GETCURRENT">
            <summary> A MSG_GETCURRENT can be performed. </summary>
        </member>
        <member name="F:Atalasoft.Twain.QueryOperation.TWQC_RESET">
            <summary> A MSG_RESET can be peroformed. </summary>
        </member>
        <member name="T:Atalasoft.Twain.TwainState">
            <summary> Indicates the current Twain state.  This value can be retrieved from the <STRONG>State</STRONG> property
            of the <see cref="T:Atalasoft.Twain.Device"/> and <see cref="T:Atalasoft.Twain.TwainController"/> classes. </summary>
            <seealso cref="P:Atalasoft.Twain.Device.State"/>
        </member>
        <member name="F:Atalasoft.Twain.TwainState.Unloaded">
            <summary> The Twain_32.dll is not loaded. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainState.Loaded">
            <summary> The Twain_32.dll is loaded and ready to use. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainState.SourceManagerOpen">
            <summary> A connection to the source manager is open. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainState.SourceOpen">
            <summary> A connection to the source device is open. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainState.SourceEnabled">
            <summary> The device is enabled.  The device interface is shown unless <see cref="P:Atalasoft.Twain.Device.HideInterface"/> is true.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainState.ReadyToTransfer">
            <summary> The device indicates that it's ready to begin data transfer. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainState.Transferring">
            <summary> Data is being transferred from the device. </summary>
        </member>
        <member name="T:Atalasoft.Twain.TwainContainer">
            <summary> Specifies the type of container used for capabilities in the <see cref="T:Atalasoft.Twain.TwainCapability"/> class.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainContainer.TWON_ARRAY">
            <summary> The <see cref="P:Atalasoft.Twain.TwainCapability.Data"/> property of the <see cref="T:Atalasoft.Twain.TwainCapability"/> is a TW_ARRAY
            structure. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainContainer.TWON_ENUMERATION">
            <summary> The <see cref="P:Atalasoft.Twain.TwainCapability.Data"/> property of the <see cref="T:Atalasoft.Twain.TwainCapability"/> is a TW_ENUMERATION
            structure. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainContainer.TWON_ONEVALUE">
            <summary> The <see cref="P:Atalasoft.Twain.TwainCapability.Data"/> property of the <see cref="T:Atalasoft.Twain.TwainCapability"/> is a TW_ONEVALUE
            structure. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainContainer.TWON_RANGE">
            <summary> The <see cref="P:Atalasoft.Twain.TwainCapability.Data"/> property of the <see cref="T:Atalasoft.Twain.TwainCapability"/> is a TW_RANGE
            structure. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainContainer.TWON_DONTCARE16">
            <summary> Used when getting a capability value with MSG_GET. </summary>
        </member>
        <member name="T:Atalasoft.Twain.TwainPixelFlavor">
            <summary> Determines whether Black or White is represented by the value zero. </summary>
            <seealso cref="P:Atalasoft.Twain.Device.PixelFlavor"/>
        </member>
        <member name="F:Atalasoft.Twain.TwainPixelFlavor.TWPF_CHOCOLATE">
            <summary> Black is zero. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainPixelFlavor.TWPF_VANILLA">
            <summary> White is zero. </summary>
        </member>
        <member name="T:Atalasoft.Twain.TwainTransferMethod">
            <summary> Specifies the transfer method used.  This can be set with the <see cref="P:Atalasoft.Twain.Device.TransferMethod"/> property
            of the <see cref="T:Atalasoft.Twain.Device"/> object. </summary>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedTransferMethods"/>
        </member>
        <member name="F:Atalasoft.Twain.TwainTransferMethod.TWSX_NATIVE">
            <summary> Transfer image as a 'native' bitmap in memory. This is the default method, all drivers must support it. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTransferMethod.TWSX_FILE">
            <summary> Transfer image as a file on host filesystem. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTransferMethod.TWSX_MEMORY">
            <summary> Transfer image as pixel data through memory buffers. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTransferMethod.TWSX_FILE2">
            <summary> (DEPRECATED) Transfer image as a file on host filesystem.  Allows long and Unicode filenames. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTransferMethod.TWSX_MEMFILE">
            <summary> Transfer image in file format in memory </summary>
        </member>
        <member name="T:Atalasoft.Twain.TwainDataGroupFlags">
            <summary> Indicates the control groups supported by the device.  The <see cref="T:Atalasoft.Twain.TwainIdentity"/> class provides this
            information about the device. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainDataGroupFlags.DG_AUDIO">
            <summary> Indicates the device supports audio transfers. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainDataGroupFlags.DG_CONTROL">
            <summary> Controls the Twain session.  All devices must support this. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainDataGroupFlags.DG_IMAGE">
            <summary> Indicates the device supports image transfers. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainDataGroupFlags.DF_DSM2">
            <summary> Indicates that TWAIN 2.x is supported. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainDataGroupFlags.DF_APP2">
            <summary> Set by the application to indicate that it can support TWAIN 2.x. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainDataGroupFlags.DF_DS2">
            <summary> Set by the driver to indicate that is can support TWAIN 2.x. </summary>
        </member>
        <member name="T:Atalasoft.Twain.TwainEventMessage">
            <summary> These messages are passed to the WndProc during acquisition to indicate events from the device. </summary>
            <seealso cref="P:Atalasoft.Twain.Device.DeviceEvents"/>
            <seealso cref="M:Atalasoft.Twain.TwainController.ProcessEvent(System.Windows.Forms.Message,Atalasoft.Twain.TwainEventMessage@)"/>
        </member>
        <member name="F:Atalasoft.Twain.TwainEventMessage.MSG_NULL">
            <summary> No action is required. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainEventMessage.MSG_CLOSEDSOK">
            <summary> The user pressed the 'OK' button on the device interface when <see cref="M:Atalasoft.Twain.Device.ShowUserInterface"/> is
            called. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainEventMessage.MSG_CLOSEDSREQ">
            <summary> The user pressed the 'Cancel' button on the interface. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainEventMessage.MSG_DEVICEEVENT">
            <summary> Some event has been triggered by the device. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainEventMessage.MSG_XFERREADY">
            <summary> The user pressed the 'Scan' button on the device interface.  This message is sent instantly if the
            interface is hidden. </summary>
        </member>
        <member name="T:Atalasoft.Twain.TwainCameraSide">
            <summary> Specifies which camera to enable or disable in the <see cref="M:Atalasoft.Twain.Device.EnableCamera(Atalasoft.Twain.TwainCameraSide,System.Boolean)"/> method. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainCameraSide.TWCS_BOTH">
            <summary> Both top (front) and bottom (back) cameras. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainCameraSide.TWCS_TOP">
            <summary> The top (front) camera. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainCameraSide.TWCS_BOTTOM">
            <summary> The bottom (back) camera. </summary>
        </member>
        <member name="T:Atalasoft.Twain.DeviceCapability">
            <summary> The device capabilities which can be tested with the <see cref="M:Atalasoft.Twain.Device.QueryCapability(Atalasoft.Twain.DeviceCapability,System.Boolean)"/> method.  This
            enumeration is also used with the low level <see cref="T:Atalasoft.Twain.TwainController"/>. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ACAP_AUDIOFILEFORMAT">
            <summary> Used to specify the audio file format when acquiring audio. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ACAP_XFERMECH">
            <summary> Allows the Application and Source to identify which audio transfer mechanisms they have in common.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_ALARMS">
            <summary> Indicates if specific audible alarms are on or off. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_ALARMVOLUME">
            <summary> Allows you to control the volume of any alarms. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_AUTHOR">
            <summary> The name or other identifying information about the Author of the image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_AUTOMATICCAPTURE">
            <summary> Indicates if the device supports automatic capture. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_AUTOFEED">
            <summary> Indicates if the feeder will automatically load the pages. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_AUTOSCAN">
            <summary> Indicates if the device supports AutoScan. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_BATTERYMINUTES">
            <summary> Indicates if the device can report the number of battery minutes remaining. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_BATTERYPERCENTAGE">
            <summary> Indicates if the device can report the percentage of battery available. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_CAMERAENABLED">
            <summary> Indicates whether the current <STRONG>CAP_CAMERASIDE</STRONG> is enabled. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_CAMERAORDER">
            <summary> Indicates the order of the images returned when more than one camera is enabled. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_CAMERAPREVIEWUI">
            <summary> Indicates if the device supports a camera preview interface.  This is a good indicator that the device is
            a camera. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_CAMERASIDE">
            <summary> Used to control if the front (top) or back (bottom) camera is enabled for a duplex scan.  The <see
            cref="M:Atalasoft.Twain.Device.EnableCamera(Atalasoft.Twain.TwainCameraSide,System.Boolean)"/> method can be used for this functionality. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_CAPTION">
            <summary> A general note about the acquired image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_CLEARBUFFERS">
            <summary> Allows you to set the mode the source uses to clear it's internal buffer. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_CLEARPAGE">
            <summary> Ejects the current page being acquired and leaves the feeder acquire area empty. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_CUSTOMBASE">
            <summary> Indicates if custom capabilities are supported. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_CUSTOMDSDATA">
            <summary> Allows the application to query the data source to see if it supports the <see
            cref="M:Atalasoft.Twain.Device.SaveParameters(System.IO.Stream)"/> and <see cref="M:Atalasoft.Twain.Device.LoadParameters(System.IO.Stream)"/> methods. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_DEVICEEVENT">
            <summary> Indicates that the device supports device event callbacks. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_DEVICEONLINE">
            <summary> Indicates if the device is powered up and ready to use. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_DEVICETIMEDATE">
            <summary> Allows you to get the date and time of the device. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_DUPLEX">
            <summary> Allows you to specify the type of duplex to use. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_DUPLEXENABLED">
            <summary> Allows you to turn duplex on or off. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_ENABLEDSUIONLY">
            <summary> Indicates if the interface can be displayed without acquiring an image.  This is required to use <see
            cref="M:Atalasoft.Twain.Device.ShowUserInterface"/>. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_ENDORSER">
            <summary> Allows you to set the starting endorser number. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_EXTENDEDCAPS">
            <summary> Indicates if the device has extended capabilities. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_FEEDERALIGNMENT">
            <summary> Allows you to set the paper alignment in a document feeder. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_FEEDERENABLED">
            <summary> Indicates if the document feeder is enabled. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_FEEDERLOADED">
            <summary> Indicates if the document feeder has pages loaded. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_FEEDERORDER">
            <summary> Allows you to set the page order in a document feeder. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_FEEDERPOCKET">
            <summary> Indicates which feeder output pocket will be used. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_FEEDERPREP">
            <summary> Improves the movement of the paper through the scanner. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_FEEDPAGE">
            <summary> Forces the document feeder to eject the current page and load the next page. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_INDICATORS">
            <summary> Indicates if the source will display a progress bar during an acquisition. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_JOBCONTROL">
            <summary> Allows multiple jobs in batch mode. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_LANGUAGE">
            <summary> Allows you to specify the language to use. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_MAXBATCHBUFFERS">
            <summary> Allows you to set the number of pages that the scanner can buffer when <see cref="P:Atalasoft.Twain.Device.AutoScan"/> is
            enabled. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_MICRENABLED">
            <summary> Enables MICR check scanning. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_PAPERDETECTABLE">
            <summary> Indicates if the device has a paper sensor. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_POWERSUPPLY">
            <summary> Allows you to get the type of power supply being used. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_PRINTER">
            <summary> <para>Indicates that the device supports an imprinter or endorser.</para> </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_PRINTERENABLED">
            <summary> Allows you to turn the imprinter/endorser on or off. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_PRINTERINDEX">
            <summary> Allows you to specify the endorser starting number. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_PRINTERMODE">
            <summary> Allows you to specify the type of imprinter/endorser to use. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_PRINTERSTRING">
            <summary> Allows you to specify the imprinter/endorser text. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_PRINTERSUFFIX">
            <summary> Allows you to specify the imprinter/endorser suffix text. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_REACQUIREALLOWED">
            <summary> Indicates whether the physical hardware is capable of acquiring multiple images of the same page.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_REWINDPAGE">
            <summary> Forces the document feeder to return the current page to the input area and bring the last page scanned
            back into the scan area. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_SEGMENTED">
            <summary> Describes the segmentation settings for captured images. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_SERIALNUMBER">
            <summary> A string containing the serial number of this device. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_SUPPORTEDCAPS">
            <summary> Indicates if the device can use the <see cref="M:Atalasoft.Twain.Device.GetSupportedCapabilities"/> method. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_THUMBNAILSENABLED">
            <summary> Indicates if a thumbnail should be returned instead of the full size image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_TIMEBEFOREFIRSTCAPTURE">
            <summary> The amount of time before the first capture.  This is used in <see cref="M:Atalasoft.Twain.Device.StartAutomaticCapture(System.String,System.Int32,System.Int32,System.Int32)"/>.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_TIMEBETWEENCAPTURES">
            <summary> The amount of time between captures.  This is used in <see cref="M:Atalasoft.Twain.Device.StartAutomaticCapture(System.String,System.Int32,System.Int32,System.Int32)"/>.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_TIMEDATE">
            <summary> The date and time of the image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_UICONTROLLABLE">
            <summary> Indicates if the interface can be hidden during an acquire. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.CAP_XFERCOUNT">
            <summary> The number of images your application is willing to accept. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_AUTOBRIGHT">
            <summary> <para>Indicates if the device supports the <see cref="P:Atalasoft.Twain.Device.AutoBrightness"/> feature.</para> </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_AUTODISCARDBLANKPAGES">
            <summary> Indicates if the device supports the <see cref="P:Atalasoft.Twain.Device.AutoDiscardBlankPages"/> property. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_AUTOMATICBORDERDETECTION">
            <summary> Allows you to turn AutomaticBorderDetection on or off. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_AUTOMATICDESKEW">
            <summary> Allows you to turn the automatic deskew on or off. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_AUTOMATICROTATE">
            <summary> Allows you to turn the automatic rotation on or off. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_AUTOSIZE">
            <summary> Forces the output image size to match either the <STRONG>ICAP_SUPPORTEDSIZES</STRONG> or any supported
            value. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_BARCODEDETECTIONENABLED">
            <summary> Turns bar code detection on and off. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_BARCODEMAXRETRIES">
            <summary> Restricts the number of times a search will be retried if none are found on each page. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_BARCODEMAXSEARCHPRIORITIES">
            <summary> Determines how many bar code detection priorities can be set. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_BARCODESEARCHMODE">
            <summary> Restricts bar code searching to certain orientations, or prioritizes one orientation over the other.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_BARCODESEARCHPRIORITIES">
            <summary> A prioritized list of bar code types dictating the order in which bar codes will be sought. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_BARCODETIMEOUT">
            <summary> Restricts the total time spent on searching for a bar code on each page. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_BITDEPTH">
            <summary> Allows you to specify the bitdepth of the acquisition. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_BITDEPTHREDUCTION">
            <summary> Allows you to specify the type of bit depth reduction used by the source. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_BITORDER">
            <summary> Specifies how bytes in an image are filled by the source. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_BITORDERCODES">
            <summary> Used for CCITT data compression only. Indicates the bit order representation of the stored,<BR/>compressed
            codes. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_BRIGHTNESS">
            <summary> Allows you to specify the amount of brightness the source applies to the image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_CCITTKFACTOR">
            <summary> Indicates if the device supports Group 3 compression and allows you to specify the K factor. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_COMPRESSION">
            <summary> Indicates that the device supports compression when acquiring to file. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_CONTRAST">
            <summary> Allows you to specify the contrast of the image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_CUSTHALFTONE">
            <summary> Specifies the halftone matrix the source device should use. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_EXPOSURETIME">
            <summary> Indicates that the device supports an exposure time.  This is a good indication that the device is a
            camera. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_EXTIMAGEINFO">
            <summary> Determines if the device supports the <see cref="M:Atalasoft.Twain.Device.SetExtendedCapabilities(Atalasoft.Twain.DeviceCapability[])"/> method. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_FEEDERTYPE">
            <summary> Allows setting scan parameters depending upon the type of feeder. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_FILTER">
            <summary> Allows you to specify a color filter to apply to the image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_FLASHUSED">
            <summary> Indicates that a flash was used.  This is a good indication that the device is a camera. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_FLASHUSED2">
            <summary> Indicates that a flash was used.  This was added to the Twain specification to enhance the Flash property.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_FLIPROTATION">
            <summary> Allows you to specify how pages are to be scanned. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_FRAMES">
            <summary> Allows you to specify that only a section of the scanning bed be acquired. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_GAMMA">
            <summary> Allows you to apply gamma to the image when acquired. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_HALFTONES">
            <summary> Specifies the halftone to be used by the source. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_HIGHLIGHT">
            <summary> Allows you to set the maximum highlight value in the image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_ICCPROFILE">
            <summary> Indicates if the driver supports linking or embedding an ICC profile. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_IMAGEDATASET">
            <summary> Allows you to specify which images to acquire.  This is used with <see cref="M:Atalasoft.Twain.Device.SetImageDataset(System.Int32[])"/>.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_IMAGEFILEFORMAT">
            <summary> Indicates if the device supports saving directly to file. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_IMAGEFILTER">
            <summary> Indicates that a filter can be applied to the image when acquired. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_JPEGPIXELTYPE">
            <summary> Allows the application and source to agree on a pixel type used during a compressed memory transfer.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_JPEGQUALITY">
            <summary> Allows you to specify the JPEG quality to use when acquiring directly to file. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_LAMPSTATE">
            <summary> Indicates if the lamp is currently, or should be on or off. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_LIGHTPATH">
            <summary> Describes whether the image was captured transmissively or reflectively. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_LIGHTSOURCE">
            <summary> Describes the general color characteristic of the light source used to acquire the image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_MAXFRAMES">
            <summary> The maximum number of frames the source can provide or the application can accept. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_MINIMUMHEIGHT">
            <summary> Allows you to retrieve the minimum acquisition height. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_MINIMUMWIDTH">
            <summary> Allows you to retrieve the minimum acquisition width. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_NOISEFILTER">
            <summary> Allows you to specify a noise filter to use during an acquire. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_ORIENTATION">
            <summary> Allows you to specify the orientation of the acquire. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_OVERSCAN">
            <summary> Allows you to turn <see cref="P:Atalasoft.Twain.Device.Overscan"/> on or off. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_PATCHCODEDETECTIONENABLED">
            <summary> Turns patch code detection on and off. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_PATCHCODEMAXRETRIES">
            <summary> Restricts the number of times a search will be retried if none are found on each page. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_PATCHCODEMAXSEARCHPRIORITIES">
            <summary> Determines how many patch code detection priorities can be set. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_PATCHCODESEARCHMODE">
            <summary> Restricts patch code searching to certain orientations, or prioritizes one orientation over the other.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_PATCHCODESEARCHPRIORITIES">
            <summary> A prioritized list of patch code types dictating the order in which patch codes will be sought. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_PATCHCODETIMEOUT">
            <summary> Restricts the total time spent on searching for a patch code on each page. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_PHYSICALWIDTH">
            <summary> Indicates that the device can return its physical width. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_PHYSICALHEIGHT">
            <summary> Indicates that the device can return its physical height. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_PIXELFLAVOR">
            <summary> Used to indicate whether black or white has a value of zero in an image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_PIXELFLAVORCODES">
            <summary> Used only for CCITT data compression. Specifies whether the compressed codes? pixel ?sense?,<BR/>will be
            inverted from the Current value of ICAP_PIXELFLAVOR prior to transfer. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_PIXELTYPE">
            <summary> <para>Allows you to specify the pixel format of the image.</para> </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_PLANARCHUNKY">
            <summary> Allows image data to be transferred in planar or chunky format. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_ROTATION">
            <summary> The amount to rotate the image by the Source. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_SHADOW">
            <summary> The value in an image which should be interpreted as the darkest shadow. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_SUPPORTEDBARCODETYPES">
            <summary> Provides a list of bar codes that can be detected by the device. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_SUPPORTEDPATCHCODETYPES">
            <summary> Provides a list of patch codes that can be detected by the device. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_SUPPORTEDSIZES">
            <summary> Allows predefined frame sizes to be set. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_THRESHOLD">
            <summary> The dividing line between black and white for 1-bit acquires. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_TILES">
            <summary> Used with buffered memory transfers to indicate whether the image data is transferred in tiles or strips.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_TIMEFILL">
            <summary> Used only with CCITT data compression. Specifies the minimum number of words of,<BR/>compressed codes
            (compressed data) to be transmitted per line. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_UNDEFINEDIMAGESIZE">
            <summary> Used by the application to notify the Source that the application accepts -1 as the image width,<BR/>or
            -length in the <see cref="E:Atalasoft.Twain.Acquisition.BeforeTwainDataTransfer"/> event. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_UNITS">
            <summary> The units of measure for this acquire. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_XFERMECH">
            <summary> The transfer method used to acquire images. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_XNATIVERESOLUTION">
            <summary> The native optical resolution of the device along the X-axis. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_XRESOLUTION">
            <summary> The number of pixels per unit for the horizontal direction as specified by the <see cref="P:Atalasoft.Twain.Device.Units"/>
            property. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_XSCALING">
            <summary> The amount of scaling in the horizontal direction the Source will perform on the image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_YNATIVERESOLUTION">
            <summary> The native optical resolution of the device along the Y-axis. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_YRESOLUTION">
            <summary> The number of pixels per unit in the vertical direction as specified by the <see cref="P:Atalasoft.Twain.Device.Units"/>
            property. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_YSCALING">
            <summary> The amount of scaling in the vertical direction the Source will perform on the image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceCapability.ICAP_ZOOMFACTOR">
            <summary> The zoom factor to use for the acquire. </summary>
        </member>
        <member name="T:Atalasoft.Twain.TwainAutoSize">
            <summary> Specifies the type of auto sizing to perform. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainAutoSize.TWAS_NONE">
            <summary> No sizing is performed. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainAutoSize.TWAS_AUTO">
            <summary> Forces the image size to the closest one supported. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainAutoSize.TWAS_CURRENT">
            <summary> Forces the image size to the current <see cref="P:Atalasoft.Twain.Device.FrameSize"/>. </summary>
        </member>
        <member name="T:Atalasoft.Twain.TwainFeederType">
            <summary> Specifies the feeder type to use with the specified parameters. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainFeederType.TWFE_GENERAL">
            <summary> The default general feeder. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainFeederType.TWFE_PHOTO">
            <summary> A photo feeder. </summary>
        </member>
        <member name="T:Atalasoft.Twain.TwainIccProfileOption">
            <summary> Specifies the type of ICC profile support to use. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainIccProfileOption.TWIC_NONE">
            <summary> No ICC support. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainIccProfileOption.TWIC_EMBED">
            <summary> The ICC profile will be embedded.  <STRONG>ICAP_IMAGEFILEFORMAT</STRONG> must be set to a format that
            supports embedded profiles. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainIccProfileOption.TWIC_LINK">
            <summary> The ICC profile will be linked.  <STRONG>ICAP_IMAGEFILEFORMAT</STRONG> must be set to a format that
            supports linking profiles. </summary>
        </member>
        <member name="T:Atalasoft.Twain.TwainExtendedImageInfoID">
            <summary> Used to specify which extended parameters are requested from the driver. </summary>
            <seealso cref="M:Atalasoft.Twain.TwainController.SetExtendedImageInfoOptions(Atalasoft.Twain.TwainExtendedImageInfoID[])"/>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_BARCODECONFIDENCE">
            <summary> (TW_UINT32):  This number reflects the degree of certainty the bar code engine has in the accuracy of the
            information obtained from the scanned image and ranges from 0 (no confidence) to 100 (supreme confidence).
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_BARCODECOUNT">
            <summary> (TW_UINT32):  Returns the number of bar codes found on the document image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_BARCODEROTATION">
            <summary> (TW_UINT32):  The bar code?s orientation on the scanned image is described in reference to a Western-style
            interpretation of the image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_BARCODETEXT">
            <summary> (TW_HANDLE):  The text of a bar code found on a page. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_BARCODETEXTLENGTH">
            <summary> (TW_UINT32):  The number of ASCII characters derived from the bar code. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_BARCODETYPE">
            <summary> (TW_UINT32):  The type of bar code found on a page.  See <see cref="T:Atalasoft.Twain.BarCodeType"/> for values. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_BARCODEX">
            <summary> (TW_UINT32):  The X coordinate of a bar code found on a page. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_BARCODEY">
            <summary> (TW_UINT32):  The Y coordinate of a bar code found on a page. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_BLACKSPECKLESREMOVED">
            <summary> (TW_UINT32):  The number of black speckles removed from the image when despeckle is enabled. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_BOOKNAME">
            <summary> (TW_STR255):  This is new with TWAIN 1.9, expanding on the document/page/frame numbers described by
            previous versions of TWAIN in the TW_IMAGELAYOUT (<see cref="T:Atalasoft.Twain.TwainImageLayout"/>) structure. The ordering is
            book/chapter/document/page(camera)/frame, and increases the detail of image addressing that a Source can provide for
            an Application. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_CAMERA">
            <summary> (TW_STR255):  The primary use of this value is to determine if the image is from the top or the bottom
            side of a sheet of paper. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_CHAPTERNUMBER">
            <summary> (TW_UINT32):  This is new with TWAIN 1.9, expanding on the document/page/frame numbers described by
            previous versions of TWAIN in the TW_IMAGELAYOUT (<see cref="T:Atalasoft.Twain.TwainImageLayout"/>) structure. The ordering is
            book/chapter/document/page(camera)/frame, and increases the detail of image addressing that a Source can provide for
            an Application. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_DESHADEBLACKCOUNTNEW">
            <summary> (TW_UINT32):  The total number of black pixels in the region after deshading. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_DESHADEBLACKCOUNTOLD">
            <summary> (TW_UINT32):  The total number of black pixels in the region prior to deshading. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_DESHADEBLACKRLMAX">
            <summary> (TW_UINT32):  The longest black pixel run-length in the region prior to deshading. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_DESHADEBLACKRLMIN">
            <summary> (TW_UINT32):  The shortest black pixel run-length in the region prior to deshading. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_DESHADECOUNT">
            <summary> (TW_UINT32):  Returns the number of shaded regions found and erased in the document image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_DESHADEHEIGHT">
            <summary> (TW_UINT32):  The height coordinate of a shaded region found on a page. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_DESHADELEFT">
            <summary> (TW_UINT32):  The left coordinate of a shaded region found on a page. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_DESHADESIZE">
            <summary> (TW_UINT32):  The width of the dots within the shade region. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_DESHADETOP">
            <summary> (TW_UINT32):  The top coordinate of a shaded region found on a page. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_DESHADEWIDTH">
            <summary> (TW_UINT32):  The width coordinate of a shaded region found on a page. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_DESHADEWHITECOUNTNEW">
            <summary> (TW_UINT32):  The total number of white pixels in the region after deshading. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_DESHADEWHITECOUNTOLD">
            <summary> (TW_UINT32):  The total number of white pixels in the region prior to deshading. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_DESHADEWHITERLAVE">
            <summary> (TW_UINT32):  The average length of all white pixel run-lengths in the region prior to deshading.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_DESHADEWHITERLMAX">
            <summary> (TW_UINT32):  The longest white pixel run-length in the region prior to deshading. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_DESHADEWHITERLMIN">
            <summary> (TW_UINT32):  The shortest white pixel run-length in the region prior to deshading. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_DESKEWSTATUS">
            <summary> (TW_UINT32):  Returns the status of the deskew operation. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_DOCUMENTNUMBER">
            <summary> (TW_UINT32):  The ordering is book/chapter/document/page(camera)/frame, and increases the amount of image
            addressing that a Source can provide for an Application. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_ENDORSEDTEXT">
            <summary> (TW_STR255):  The text that was endorsed on the paper by the scanner. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_FILESYSTEMSOURCE">
            <summary> (TW_STR255):  Returns a string describing the camera that captured the image data. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_FORMCONFIDENCE">
            <summary> (TW_UINT32):  The confidence that the specified form was detected. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_FORMHORZDOCOFFSET">
            <summary> (TW_UINT32):  An array containing the perceived horizontal offsets of the form image being matched against
            a set of master forms. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_FORMTEMPLATEMATCH">
            <summary> (TW_STR255):  The array of file names for the master forms matched against a form. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_FORMTEMPLATEPAGEMATCH">
            <summary> (TW_UINT32):  An array containing the number of the page from a multi-page master form matched against a
            form image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_FORMVERTDOCOFFSET">
            <summary> (TW_UINT32):  An array containing the perceived vertical offsets of the form image being matched against a
            set of master forms. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_FRAME">
            <summary> (TW_FRAME):  This is the same value returned in <see cref="P:Atalasoft.Twain.TwainImageLayout.Frame"/>. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_FRAMENUMBER">
            <summary> (TW_UINT32):  This is the same value returned in <see cref="P:Atalasoft.Twain.TwainImageLayout.FrameNumber"/>. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_HORZLINECOUNT">
            <summary> (TW_UINT32):  Returns the number of horizontal lines found and erased in the document image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_HORZLINELENGTH">
            <summary> (TW_UINT32):  The length of a horizontal line detected in the image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_HORZLINETHICKNESS">
            <summary> (TW_UINT32):  The thickness (height) of a horizontal line detected in the image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_HORZLINEXCOORD">
            <summary> (TW_UINT32):  The X coordinate of a horizontal line detected in the image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_HORZLINEYCOORD">
            <summary> (TW_UINT32):  The Y coordinate of a horizontal line detected in the image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_ICCPROFILE">
            <summary> (TW_STR255):  Returns the name of the ICC profile that was used to render the current image. This may be a
            fully qualified path indicating the exact location of the ICC profile. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_IMAGEMERGED">
            <summary> (TW_BOOL):  Indicates that the current image is the result of a merger between the front and rear images
            of a duplex capture. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_LASTSEGMENT">
            <summary> (TW_BOOL):  Returns true if the current segment is the last segment of a page. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_MAGDATA">
            <summary> (TW_HANDLE):  This is a ?blob? of data with a byte count retrieved from the driver/ device. The
            interpretation of the data comes from TWEI_MAGTYPE. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_MAGDATALENGTH">
            <summary> (TW_UINT32):  This describes the length of the magnetic data. Either in bytes for ?blob? or data or
            characters for string data. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_MAGTYPE">
            <summary> (TW_UINT16):  This describes the kind of magnetic data. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_PAGENUMBER">
            <summary> (TW_UINT32):  The ordering is book/chapter/document/page(camera)/frame, and increases the amount of image
            addressing that a Source can provide for an Application. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_PAGESIDE">
            <summary> (TW_UINT16):  Returns a value indicating if the image represents the front or rear of the sheet of paper.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_PATCHCODE">
            <summary> (TW_UINT32):  The patch code detected.  See <see cref="T:Atalasoft.Twain.PatchCodeType"/> for values. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_PIXELFLAVOR">
            <summary> (TW_UINT16):  This value describes the pixel flavor of the current image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_SEGMENTNUMBER">
            <summary> (TW_UINT32):  Returns a number identifying the segment of an image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_SKEWCONFIDENCE">
            <summary> (TW_UINT32):  This number reflects the degree of certainty the deskew engine has in the accuracy of the
            deskewing of the current image and ranges from 0 (no confidence) to 100 (supreme confidence). </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_SKEWFINALANGLE">
            <summary> (TW_UINT32):  The amount of skew in the deskewed image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_SKEWORIGINALANGLE">
            <summary> (TW_UINT32):  The amount of skew in the original image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_SKEWWINDOWX1">
            <summary> (TW_UINT32):  This is the X image coordinate of the upper left corner of the virtual deskewed image.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_SKEWWINDOWY1">
            <summary> (TW_UINT32):  This is the Y image coordinate of the upper left corner of the virtual deskewed image.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_SKEWWINDOWX2">
            <summary> (TW_UINT32):  The X image coordinate of the upper right corner of the virtual deskewed image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_SKEWWINDOWY2">
            <summary> (TW_UINT32):  The Y image coordinate of the upper right corner of the virtual deskewed image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_SKEWWINDOWX3">
            <summary> (TW_UINT32):  This is the X image coordinate of the lower left corner of the virtual deskewed image.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_SKEWWINDOWY3">
            <summary> (TW_UINT32):  This is the Y image coordinate of the lower left corner of the virtual deskewed image.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_SKEWWINDOWX4">
            <summary> (TW_UINT32):  This is the X image coordinate of the lower left corner of the virtual deskewed image.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_SKEWWINDOWY4">
            <summary> (TW_UINT32):  This is the Y image coordinate of the lower left corner of the virtual deskewed image.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_SPECKLESREMOVED">
            <summary> (TW_UINT32):  The number of speckles removed from the image when de-speckle is enabled. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_VERTLINECOUNT">
            <summary> (TW_UINT32):  Returns the number of vertical lines found and erased in the document image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_VERTLINELENGTH">
            <summary> (TW_UINT32):  The length of a vertical line detected in the image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_VERTLINETHICKNESS">
            <summary> (TW_UINT32):  The thickness (width) of a vertical line detected in the image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_VERTLINEXCOORD">
            <summary> (TW_UINT32):  The X coordinate of a vertical line detected in the image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_VERTLINEYCOORD">
            <summary> (TW_UINT32):  The Y coordinate of a vertical line detected in the image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainExtendedImageInfoID.TWEI_WHITESPECKLESREMOVED">
            <summary> (TW_UINT32):  The number of white speckles removed (black speckles added) from the image when despeckle is
            enabled. </summary>
        </member>
        <member name="T:Atalasoft.Twain.TwainReturnCode">
            <summary> These values are returned from Twain and the device.  The <see cref="P:Atalasoft.Twain.Device.LastReturnCode"/> property of
            the <see cref="T:Atalasoft.Twain.Device"/> object provides this value as do the methods in the <see cref="T:Atalasoft.Twain.TwainController"/> class.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainReturnCode.TWRC_CANCEL">
            <summary> Transfer was canceled. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainReturnCode.TWRC_CHECKSTATUS">
            <summary> Partially successful operation.  This can happen if the device doesn't support the exact value passed in
            and modified it to the nearest supported value. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainReturnCode.TWRC_CUSTOMBASE">
            <summary> Custom return codes must be greater than this value. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainReturnCode.TWRC_DATANOTAVAILABLE">
            <summary> Data for the requested information is not available. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainReturnCode.TWRC_DSEVENT">
            <summary> Indicates that an event or Windows message belongs to the device.  This is used when watching for device
            events in the window message loop. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainReturnCode.TWRC_ENDOFLIST">
            <summary> Indicates the last device has been reached when getting a list of devices from Twain. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainReturnCode.TWRC_FAILURE">
            <summary> The operation failed.  Use <see cref="M:Atalasoft.Twain.Device.GetConditionCode"/> for more information. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainReturnCode.TWRC_INFONOTSUPPORTED">
            <summary> The type of information requested is not supported by the device. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainReturnCode.TWRC_NOTDSEVENT">
            <summary> Indicates that an event or Windows message does not belong to the device.  This is used when watching for
            device events in the window message loop. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainReturnCode.TWRC_SUCCESS">
            <summary> The operation was a success. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainReturnCode.TWRC_XFERDONE">
            <summary> The transfer operation has finished. </summary>
        </member>
        <member name="T:Atalasoft.Twain.TwainConditionCode">
            <summary> These codes are returned from the <see cref="M:Atalasoft.Twain.Device.GetConditionCode"/> method in the <see cref="T:Atalasoft.Twain.Device"/>
            and <see cref="T:Atalasoft.Twain.TwainController"/> classes. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_BADCAP">
            <summary> Capability not supported by Source or operation (get, set) is not supported on capability, or capability
            had dependencies on other capabilities and cannot be operated upon at this time. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_BADDEST">
            <summary> Unknown destination device. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_BADPROTOCOL">
            <summary> Unrecognized <see cref="T:Atalasoft.Twain.TwainTriplet"/>. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_BADVALUE">
            <summary> Data parameter is out of the supported range. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_BUMMER">
            <summary> General failure. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_CAPUNSUPPORTED">
            <summary> The capability is not supported by the device. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_CAPBADOPERATION">
            <summary> Operation (Get or Set) is not supported for the capability. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_CAPSEQERROR">
            <summary> Capability has dependencies on other capabilities and cannot be operated upon at this time. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_CHECKDEVICEONLINE">
            <summary> The device may not be online.  Check the <see cref="P:Atalasoft.Twain.Device.Online"/> property. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_CHECKSTATUS">
            <summary> Operation modified.  This can happen when setting a capability to a value the device does not support and
            the device converts the value to the nearest supported value. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_CUSTOMBASE">
            <summary> Custom condition codes start after this value. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_DAMAGEDCORNER">
            <summary> Operation failed because the document has a damaged corner. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_DENIED">
            <summary> File System operation denied.  The file may be protected. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_DOCTOODARK">
            <summary> Operation failed because the document is too dark. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_DOCTOOLIGHT">
            <summary> Operation failed because the document is too light. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_DOUBLEFEED">
            <summary> Transfer failed because of a feeder error. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_FILEEXISTS">
            <summary> Operation failed because the file already exists. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_FILENOTFOUND">
            <summary> File not found. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_FILEWRITEERROR">
            <summary> Operation failed while writing the file. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_FOCUSERROR">
            <summary> Operation failed because of a focusing error during document capture. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_INTERLOCK">
            <summary> Operation failed because the cover or door is open. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_INVALIDSTATE">
            <summary> Invalid state for the operation. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_LOWMEMORY">
            <summary> Not enough memory to complete this operation. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_MAXCONNECTIONS">
            <summary> The device is connected to the maximum number of applications it can support. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_NODS">
            <summary> Device was not found. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_NOMEDIA">
            <summary> Source has nothing to capture for a transfer. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_NOTEMPTY">
            <summary> Operation failed because the directory is not empty. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_OPERATIONERROR">
            <summary> Source or Source Manager reported an error to the user and handled the error; no application action
            required. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_PAPERDOUBLEFEED">
            <summary> Transfer failed because of a feeder error. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_PAPERJAM">
            <summary> Transfer failed because of a paper jam. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_SEQERROR">
            <summary> Invalid operation for the current state. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_SUCCESS">
            <summary> The operation was successful. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainConditionCode.TWCC_UNKNOWN">
            <summary> Unknown condition. </summary>
        </member>
        <member name="T:Atalasoft.Twain.AutoDiscardMode">
            <summary> Used with <see cref="P:Atalasoft.Twain.Device.AutoDiscardBlankPages"/> to enable or disable this feature in the driver.
            </summary>
            <remarks> In addition to these settings, a value from 0 to 2147483647 can be used to determine the byte size cutoff
            point to identify which images are to be discarded. </remarks>
        </member>
        <member name="F:Atalasoft.Twain.AutoDiscardMode.Disabled">
            <summary> Turns off this feature. </summary>
        </member>
        <member name="F:Atalasoft.Twain.AutoDiscardMode.Auto">
            <summary> Turns on this feature and allows the driver to decide if the page is blank or not. </summary>
        </member>
        <member name="T:Atalasoft.Twain.BarCodeSearchMode">
            <summary> Specifies the search mode for barcode recognition. </summary>
            <seealso cref="P:Atalasoft.Twain.TwainBarCode.SearchMode"/>
        </member>
        <member name="F:Atalasoft.Twain.BarCodeSearchMode.TWBD_HORZ">
            <summary> Horizontal orientation. </summary>
        </member>
        <member name="F:Atalasoft.Twain.BarCodeSearchMode.TWBD_VERT">
            <summary> Vertical orientation. </summary>
        </member>
        <member name="F:Atalasoft.Twain.BarCodeSearchMode.TWBD_HORZVERT">
            <summary> Search both directions giving priority to the horizontal search. </summary>
        </member>
        <member name="F:Atalasoft.Twain.BarCodeSearchMode.TWBD_VERTHORZ">
            <summary> Search both directions giving priority to the vertical search. </summary>
        </member>
        <member name="T:Atalasoft.Twain.BarCodeType">
            <summary> Specifies the bar code type priority for the <see cref="M:Atalasoft.Twain.TwainBarCode.SetSearchPriorities(Atalasoft.Twain.BarCodeType[])"/> method.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.BarCodeType.TWBT_2OF5DATALOGIC">
            <summary>  Symbolic constant used in capability access methods.</summary>
        </member>
        <member name="F:Atalasoft.Twain.BarCodeType.TWBT_2OF5IATA">
            <summary>  Symbolic constant used in capability access methods.</summary>
        </member>
        <member name="F:Atalasoft.Twain.BarCodeType.TWBT_2OF5INDUSTRIAL">
            <summary>  Symbolic constant used in capability access methods.</summary>
        </member>
        <member name="F:Atalasoft.Twain.BarCodeType.TWBT_2OF5INTERLEAVED">
            <summary>  Symbolic constant used in capability access methods.</summary>
        </member>
        <member name="F:Atalasoft.Twain.BarCodeType.TWBT_2OF5NONINTERLEAVED">
            <summary>  Symbolic constant used in capability access methods.</summary>
        </member>
        <member name="F:Atalasoft.Twain.BarCodeType.TWBT_2OF5MATRIX">
            <summary>  Symbolic constant used in capability access methods.</summary>
        </member>
        <member name="F:Atalasoft.Twain.BarCodeType.TWBT_3OF9">
            <summary>  Symbolic constant used in capability access methods.</summary>
        </member>
        <member name="F:Atalasoft.Twain.BarCodeType.TWBT_3OF9FULLASCII">
            <summary>  Symbolic constant used in capability access methods.</summary>
        </member>
        <member name="F:Atalasoft.Twain.BarCodeType.TWBT_CODABAR">
            <summary>  Symbolic constant used in capability access methods.</summary>
        </member>
        <member name="F:Atalasoft.Twain.BarCodeType.TWBT_CODABARWITHSTARTSTOP">
            <summary>  Symbolic constant used in capability access methods.</summary>
        </member>
        <member name="F:Atalasoft.Twain.BarCodeType.TWBT_CODE93">
            <summary>  Symbolic constant used in capability access methods.</summary>
        </member>
        <member name="F:Atalasoft.Twain.BarCodeType.TWBT_CODE128">
            <summary>  Symbolic constant used in capability access methods.</summary>
        </member>
        <member name="F:Atalasoft.Twain.BarCodeType.TWBT_EAN8">
            <summary>  Symbolic constant used in capability access methods.</summary>
        </member>
        <member name="F:Atalasoft.Twain.BarCodeType.TWBT_EAN13">
            <summary>  Symbolic constant used in capability access methods.</summary>
        </member>
        <member name="F:Atalasoft.Twain.BarCodeType.TWBT_MAXICODE">
            <summary>  Symbolic constant used in capability access methods.</summary>
        </member>
        <member name="F:Atalasoft.Twain.BarCodeType.TWBT_PDF417">
            <summary>  Symbolic constant used in capability access methods.</summary>
        </member>
        <member name="F:Atalasoft.Twain.BarCodeType.TWBT_POSTNET">
            <summary>  Symbolic constant used in capability access methods.</summary>
        </member>
        <member name="F:Atalasoft.Twain.BarCodeType.TWBT_UCC128">
            <summary>  Symbolic constant used in capability access methods.</summary>
        </member>
        <member name="F:Atalasoft.Twain.BarCodeType.TWBT_UPCA">
            <summary>  Symbolic constant used in capability access methods.</summary>
        </member>
        <member name="F:Atalasoft.Twain.BarCodeType.TWBT_UPCE">
            <summary>  Symbolic constant used in capability access methods.</summary>
        </member>
        <member name="T:Atalasoft.Twain.PatchCodeType">
            <summary> Specifies the type of patchcode to work with. </summary>
        </member>
        <member name="F:Atalasoft.Twain.PatchCodeType.TWPCH_PATCH1">
            <summary>Patch1</summary>
        </member>
        <member name="F:Atalasoft.Twain.PatchCodeType.TWPCH_PATCH2">
            <summary>Patch2</summary>
        </member>
        <member name="F:Atalasoft.Twain.PatchCodeType.TWPCH_PATCH3">
            <summary>Patch3</summary>
        </member>
        <member name="F:Atalasoft.Twain.PatchCodeType.TWPCH_PATCH4">
            <summary>Patch4</summary>
        </member>
        <member name="F:Atalasoft.Twain.PatchCodeType.TWPCH_PATCH6">
            <summary>Patch5</summary>
        </member>
        <member name="F:Atalasoft.Twain.PatchCodeType.TWPCH_PATCHT">
            <summary>Patch6</summary>
        </member>
        <member name="T:Atalasoft.Twain.TwainTriplet">
            <summary> Specifies the Twain operation to perform in the <see cref="M:Atalasoft.Twain.TwainController.SendCommand"/> method of 
            <see cref="T:Atalasoft.Twain.TwainController"/>.  See the Twain specification for more information about these operations. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.AudioFileXferGet">
            <summary> DG_AUDIO / DAT_AUDIOFILEXFER / MSG_GET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.AudioInfoGet">
            <summary> DG_AUDIO / DAT_AUDIOINFO / MSG_GET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.AudioNativeXferGet">
            <summary> DG_AUDIO / DAT_AUDIONATIVEXFER / MSG_GET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.CapabilityGet">
            <summary> DG_CONTROL / DAT_CAPABILITY / MSG_GET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.CapabilityGetCurrent">
            <summary> DG_CONTROL / DAT_CAPABILITY / MSG_GETCURRENT </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.CapabilityGetDefault">
            <summary> DG_CONTROL / DAT_CAPABILITY / MSG_GETDEFAULT </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.CapabilityQuerySupport">
            <summary> DG_CONTROL / DAT_CAPABILITY / MSG_QUERYSUPPORT </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.CapabilityReset">
            <summary> DG_CONTROL / DAT_CAPABILITY / MSG_RESET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.CapabilityResetAll">
            <summary> Tells the driver to reset all of its capabilities to their startup values. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.CapabilitySet">
            <summary> DG_CONTROL / DAT_CAPABILITY / MSG_SET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.CieColorGet">
            <summary> DG_IMAGE / DAT_CIECOLOR / MSG_GET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.CustomDSDataGet">
            <summary> DG_CONTROL / DAT_CUSTOMDSDATA / MSG_GET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.CustomDSDataSet">
            <summary> DG_CONTROL / DAT_CUSTOMDSDATA / MSG_SET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.DeviceEventGet">
            <summary> DG_CONTROL / DAT_DEVICEEVENT / MSG_GET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.EventProcessEvent">
            <summary> DG_CONTROL / DAT_EVENT / MSG_PROCESSEVENT </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.ExtImageInfoGet">
            <summary> DG_IMAGE / DAT_EXTIMAGEINFO / MSG_GET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.FileSystemAutomaticCaptureDirectory">
            <summary> DG_CONTROL / DAT_FILESYSTEM / MSG_AUTOMATICCAPTUREDIRECTORY </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.FileSystemChangeDirectory">
            <summary> DG_CONTROL / DAT_FILESYSTEM / MSG_CHANGEDIRECTORY </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.FileSystemCopy">
            <summary> DG_CONTROL / DAT_FILESYSTEM / MSG_COPY </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.FileSystemCreateDirectory">
            <summary> DG_CONTROL / DAT_FILESYSTEM / MSG_CREATEDIRECTORY </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.FileSystemDelete">
            <summary> DG_CONTROL / DAT_FILESYSTEM / MSG_DELETE </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.FileSystemFormatMedia">
            <summary> DG_CONTROL / DAT_FILESYSTEM / MSG_FORMATMEDIA </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.FileSystemGetClose">
            <summary> DG_CONTROL / DAT_FILESYSTEM / MSG_GETCLOSE </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.FileSystemGetFirstFile">
            <summary> DG_CONTROL / DAT_FILESYSTEM / MSG_GETFIRSTFILE </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.FileSystemGetInfo">
            <summary> DG_CONTROL / DAT_FILESYSTEM / MSG_GETINFO </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.FileSystemGetNextFile">
            <summary> DG_CONTROL / DAT_FILESYSTEM / MSG_GETNEXTFILE </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.FileSystemRename">
            <summary> DG_CONTROL / DAT_FILESYSTEM / MSG_RENAME </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.GrayscaleResponseReset">
            <summary> DG_IMAGE / DAT_GRAYRESPONSE / MSG_RESET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.GrayscaleResponseSet">
            <summary> DG_IMAGE / DAT_GRAYRESPONSE / MSG_SET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.IdentityCloseDS">
            <summary> DG_CONTROL / DAT_IDENTITY / MSG_CLOSEDS </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.IdentityGetDefault">
            <summary> DG_CONTROL / DAT_IDENTITY / MSG_GETDEFAULT </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.IdentityGetFirst">
            <summary> DG_CONTROL / DAT_IDENTITY / MSG_GETFIRST </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.IdentityGetNext">
            <summary> DG_CONTROL / DAT_IDENTITY / MSG_GETNEXT </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.IdentityOpenDS">
            <summary> DG_CONTROL / DAT_IDENTITY / MSG_OPENDS </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.IdentityUserSelect">
            <summary> DG_CONTROL / DAT_IDENTITY / MSG_USERSELECT </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.ImageFileXferGet">
            <summary> DG_IMAGE / DAT_IMAGEFILEXFER / MSG_GET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.ImageInfoGet">
            <summary> DG_IMAGE / DAT_IMAGEINFO / MSG_GET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.ImageLayoutGet">
            <summary> DG_IMAGE / DAT_IMAGELAYOUT / MSG_GET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.ImageLayoutGetDefault">
            <summary> DG_IMAGE / DAT_IMAGELAYOUT / MSG_GETDEFAULT </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.ImageLayoutReset">
            <summary> DG_IMAGE / DAT_IMAGELAYOUT / MSG_RESET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.ImageLayoutSet">
            <summary> DG_IMAGE / DAT_IMAGELAYOUT / MSG_SET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.ImageMemXferGet">
            <summary> DG_IMAGE / DAT_IMAGEMEMXFER / MSG_GET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.ImageMemFileXferGet">
            <summary> DG_IMAGE / MSG_GET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.ImageNativeXferGet">
            <summary> DG_IMAGE / DAT_IMAGENATIVEXFER / MSG_GET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.JpegCompressionGet">
            <summary> DG_IMAGE / DAT_JPEGCOMPRESSION / MSG_GET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.JpegCompressionGetDefault">
            <summary> DG_IMAGE / DAT_JPEGCOMPRESSION / MSG_GETDEFAULT </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.JpegCompressionReset">
            <summary> DG_IMAGE / DAT_JPEGCOMPRESSION / MSG_RESET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.JpegCompressionSet">
            <summary> DG_IMAGE / DAT_JPEGCOMPRESSION / MSG_SET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.NullCloseDSReq">
            <summary> DG_CONTROL / DAT_NULL / MSG_CLOSEDSREQ </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.NullDeviceEvent">
            <summary> DG_CONTROL / DAT_NULL / MSG_DEVICEEVENT </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.NullXferReady">
            <summary> DG_CONTROL / DAT_NULL / MSG_XFERREADY </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.Palette8Get">
            <summary> DG_IMAGE / DAT_PALETTE8 / MSG_GET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.Palette8GetDefault">
            <summary> DG_IMAGE / DAT_PALETTE8 / MSG_GETDEFAULT </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.Palette8Reset">
            <summary> DG_IMAGE / DAT_PALETTE8 / MSG_RESET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.Palette8Set">
            <summary> DG_IMAGE / DAT_PALETTE8 / MSG_SET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.PassThru">
            <summary> DG_CONTROL / DAT_PASSTHRU / MSG_PASSTHRU </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.PendingXfersEndXfer">
            <summary> DG_CONTROL / DAT_PENDINGXFERS / MSG_ENDXFER </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.PendingXfersGet">
            <summary> DG_CONTROL / DAT_PENDINGXFERS / MSG_GET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.PendingXfersReset">
            <summary> DG_CONTROL / DAT_PENDINGXFERS / MSG_RESET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.PendingXfersStopFeeder">
            <summary> DG_CONTROL / DAT_PENDINGXFERS / MSG_STOPFEEDER </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.RgbResponseReset">
            <summary> DG_IMAGE / DAT_RGBRESPONSE / MSG_RESET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.RgbResponseSet">
            <summary> DG_IMAGE / DAT_RGBRESPONSE / MSG_SET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.SetupFileXferGet">
            <summary> DG_CONTROL / DAT_SETUPFILEXFER / MSG_GET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.SetupFileXferGetDefault">
            <summary> DG_CONTROL / DAT_SETUPFILEXFER / MSG_GETDEFAULT </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.SetupFileXFerReset">
            <summary> DG_CONTROL / DAT_SETUPFILEXFER / MSG_RESET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.SetupFileXFerSet">
            <summary> DG_CONTROL / DAT_SETUPFILEXFER / MSG_SET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.SetupFileXfer2Get">
            <summary> DG_CONTROL / DAT_SETUPFILEXFER2 / MSG_GET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.SetupFileXfer2GetDefault">
            <summary> DG_CONTROL / DAT_SETUPFILEXFER2 / MSG_GETDEFAULT </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.SetupFileXfer2Reset">
            <summary> DG_CONTROL / DAT_SETUPFILEXFER2 / MSG_RESET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.SetupFileXfer2Set">
            <summary> DG_CONTROL / DAT_SETUPFILEXFER2 / MSG_SET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.SetupMemXFerGet">
            <summary> DG_CONTROL / DAT_SETUPMEMXFER / MSG_GET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.StatusGet">
            <summary> DG_CONTROL / DAT_STATUS / MSG_GET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.UserInterfaceDisableDS">
            <summary> DG_CONTROL / DAT_USERINTERFACE / MSG_DISABLEDS </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.UserInterfaceEnableDS">
            <summary> DG_CONTROL / DAT_USERINTERFACE / MSG_ENABLEDS </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.UserInterfaceEnableDSUIOnly">
            <summary> DG_CONTROL / DAT_USERINTERFACE / MSG_ENABLEDSUIONLY </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.XferGroupGet">
            <summary> DG_CONTROL / DAT_XFERGROUP / MSG_GET </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainTriplet.XferGroupSet">
            <summary> DG_CONTROL / DAT_XFERGROUP / MSG_SET </summary>
        </member>
        <member name="T:Atalasoft.Twain.TwainFeederPocket">
            <summary> Specifies feeder pockets available for page ouput. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainFeederPocket.TWFP_POCKETERROR">
            <summary> Indicates an error accessing the pocket. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainFeederPocket.TWFP_POCKET1">
            <summary> Pocket #1 </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainFeederPocket.TWFP_POCKET2">
            <summary> Pocket #2 </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainFeederPocket.TWFP_POCKET3">
            <summary> Pocket #3 </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainFeederPocket.TWFP_POCKET4">
            <summary> Pocket #4 </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainFeederPocket.TWFP_POCKET5">
            <summary> Pocket #5 </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainFeederPocket.TWFP_POCKET6">
            <summary> Pocket #6 </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainFeederPocket.TWFP_POCKET7">
            <summary> Pocket #7 </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainFeederPocket.TWFP_POCKET8">
            <summary> Pocket #8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainFeederPocket.TWFP_POCKET9">
            <summary> Pocket #9 </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainFeederPocket.TWFP_POCKET10">
            <summary> Pocket #10 </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainFeederPocket.TWFP_POCKET11">
            <summary> Pocket #11 </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainFeederPocket.TWFP_POCKET12">
            <summary> Pocket #12 </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainFeederPocket.TWFP_POCKET13">
            <summary> Pocket #13 </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainFeederPocket.TWFP_POCKET14">
            <summary> Pocket #14 </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainFeederPocket.TWFP_POCKET15">
            <summary> Pocket #15 </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainFeederPocket.TWFP_POCKET16">
            <summary> Pocket #16 </summary>
        </member>
        <member name="T:Atalasoft.Twain.FileItemType">
            <summary> Indicates the type of file or device camera position. </summary>
            <seealso cref="P:Atalasoft.Twain.FileInformation.FileType"/>
            <seealso cref="T:Atalasoft.Twain.FileInformation"/>
            <seealso cref="T:Atalasoft.Twain.FileSystem"/>
        </member>
        <member name="F:Atalasoft.Twain.FileItemType.Camera">
            <summary> The default camera used in a <see cref="T:Atalasoft.Twain.FileSystem"/>. </summary>
        </member>
        <member name="F:Atalasoft.Twain.FileItemType.CameraTop">
            <summary> The camera which will acquire the top of the page. </summary>
        </member>
        <member name="F:Atalasoft.Twain.FileItemType.CameraBottom">
            <summary> The camera which will acquire the back side of the page. </summary>
        </member>
        <member name="F:Atalasoft.Twain.FileItemType.CameraReview">
            <summary> A logical device that performs camera live preview functionality. </summary>
        </member>
        <member name="F:Atalasoft.Twain.FileItemType.Directory">
            <summary> A directory can contain other directories and/or images. </summary>
        </member>
        <member name="F:Atalasoft.Twain.FileItemType.Domain">
            <summary> This is the root of the device.  A domain can only contains <see cref="F:Atalasoft.Twain.FileItemType.Host"/> directories.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.FileItemType.Host">
            <summary> The host is a branch of the domain and can only contain directories. </summary>
        </member>
        <member name="F:Atalasoft.Twain.FileItemType.Image">
            <summary> The file is an image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.FileItemType.Unknown">
            <summary> The type of file is unknown. </summary>
        </member>
        <member name="T:Atalasoft.Twain.ImagePixelType">
            <summary> Used to determine the type of image being transferred. </summary>
            <seealso cref="P:Atalasoft.Twain.MemoryFileTransferEventArgs.PixelType"/>
        </member>
        <member name="F:Atalasoft.Twain.ImagePixelType.BlackAndWhite">
            <summary> A 1-bit black and white image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ImagePixelType.Ciexyz">
            <summary> CIEXYZ. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ImagePixelType.Cmy">
            <summary> A 24-bit CMY image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ImagePixelType.Cmyk">
            <summary> A 32-bit CMYK image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ImagePixelType.Color">
            <summary> A 24-bit color image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ImagePixelType.Grayscale">
            <summary> An 8-bit grayscale image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ImagePixelType.Palette">
            <summary> An 8-bit paletted image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ImagePixelType.Yuv">
            <summary> Yuv</summary>
        </member>
        <member name="F:Atalasoft.Twain.ImagePixelType.Yuvk">
            <summary> Yuvk</summary>
        </member>
        <member name="F:Atalasoft.Twain.ImagePixelType.Srgb">
            <summary> Srgb</summary>
        </member>
        <member name="F:Atalasoft.Twain.ImagePixelType.Srgb64">
            <summary>Srgb64</summary>
        </member>
        <member name="T:Atalasoft.Twain.DocumentFeederOrder">
            <seealso cref="P:Atalasoft.Twain.DocumentFeeder.PageOrder"/>
            <seealso cref="T:Atalasoft.Twain.DocumentFeeder"/>
            <summary> Used to set the page order of the document feeder. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DocumentFeederOrder.FirstPageFirst">
            <summary> The first page will be acquired first. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DocumentFeederOrder.LastPageFirst">
            <summary> The last page will be acquired first. </summary>
        </member>
        <member name="T:Atalasoft.Twain.DocumentFeederAlignment">
            <summary> Used to determine the alignment of the paper in a document feeder. </summary>
            <seealso cref="T:Atalasoft.Twain.DocumentFeeder"/>
        </member>
        <member name="F:Atalasoft.Twain.DocumentFeederAlignment.None">
            <summary> The alignment is free-floating. </summary>
            <remarks> Applications should assume that the origin for frames is on the left. </remarks>
        </member>
        <member name="F:Atalasoft.Twain.DocumentFeederAlignment.Left">
            <summary> The alignment is to the left. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DocumentFeederAlignment.Center">
            <summary> The alignment is centered. </summary>
            <remarks> This means that the paper will be fed in the middle of the PhysicalWidth of the device. If this is set,
            then the Application should calculate any frames with a left offset of zero. </remarks>
        </member>
        <member name="F:Atalasoft.Twain.DocumentFeederAlignment.Right">
            <summary> The alignment is to the right. </summary>
        </member>
        <member name="T:Atalasoft.Twain.ClearBufferMode">
            <summary> These values are used to determine how the device will clear its internal buffer. </summary>
            <seealso cref="M:Atalasoft.Twain.Device.ClearBuffers(Atalasoft.Twain.ClearBufferMode)"/>
        </member>
        <member name="F:Atalasoft.Twain.ClearBufferMode.Auto">
            <summary> Causes the Source to automatically clear the buffers when it transitions from state 4 to state 5, or from
            state 5 to state 4. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ClearBufferMode.Clear">
            <summary> Causes the Source to immediately clear its buffers. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ClearBufferMode.NoClear">
            <summary> Causes the Source to preserve images in the buffers. </summary>
            <remarks> If the Source transitions from state 4 to state 5 with images in its buffer, it will immediately deliver
            those images before any new images scanned by the user. </remarks>
        </member>
        <member name="T:Atalasoft.Twain.ImprinterEndorserType">
            <summary> Bit flags used to indicate which printers for imprinting or endorsing are available. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ImprinterEndorserType.EndorserBottomAfter">
            <summary> An endorser which can print from the bottom and after the page is scanned is available. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ImprinterEndorserType.EndorserBottomBefore">
            <summary> An endorser which can print from the bottom and before the page is scanned is available. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ImprinterEndorserType.EndorserTopAfter">
            <summary> An endorser which can print from the top and after the page is scanned is available. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ImprinterEndorserType.EndorserTopBefore">
            <summary> An endorser which can print from the top and before the page is scanned is available. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ImprinterEndorserType.ImprinterBottomAfter">
            <summary> An imprinter which can print from the bottom and after the page is scanned is available. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ImprinterEndorserType.ImprinterBottomBefore">
            <summary> An imprinter which can print from the bottom and before the page is scanned is available. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ImprinterEndorserType.ImprinterTopAfter">
            <summary> An imprinter which can print from the top and after the page is scanned is available. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ImprinterEndorserType.ImprinterTopBefore">
            <summary> An imprinter which can print from the top and before the page is scanned is available. </summary>
        </member>
        <member name="T:Atalasoft.Twain.ImprinterEndorserMode">
            <summary> Used with SetImprinterEndorser to specify the type of string to use. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ImprinterEndorserMode.Compound">
            <summary> Specifies that a compound string will be generated from the text, index and suffix values. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ImprinterEndorserMode.MultiLine">
            <summary> Specifies that multiple lines of text will be printed to the scan. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ImprinterEndorserMode.SingleLine">
            <summary> Specifies that a single line of text will be printed to the scan. </summary>
        </member>
        <member name="T:Atalasoft.Twain.AlarmTypeFlags">
            <summary> The type of alarm used for the <see cref="P:Atalasoft.Twain.Device.Alarms"/> property of the <see cref="T:Atalasoft.Twain.Device"/>.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.AlarmTypeFlags.AllAlarms">
            <summary> A catchall for alarms not explicitly listed. It is also used where a device only provides control over a
            single, multi-use alarm. </summary>
        </member>
        <member name="F:Atalasoft.Twain.AlarmTypeFlags.BarCode">
            <summary> Generates alarms when an image with this kind of data is recognized. </summary>
        </member>
        <member name="F:Atalasoft.Twain.AlarmTypeFlags.DoubleFeed">
            <summary> Generates alarms when more than one sheet is pulled into the scanning area. </summary>
        </member>
        <member name="F:Atalasoft.Twain.AlarmTypeFlags.FeederError">
            <summary> Covers paper handling errors such as jams, double-feeds, skewing and the like; conditions that most likely
            stop scanning. </summary>
        </member>
        <member name="F:Atalasoft.Twain.AlarmTypeFlags.FeederWarning">
            <summary> Covers non-fatal events, such as feeder empty. </summary>
        </member>
        <member name="F:Atalasoft.Twain.AlarmTypeFlags.Jam">
            <summary> Generates alarms when there is a paper jam. </summary>
        </member>
        <member name="F:Atalasoft.Twain.AlarmTypeFlags.PatchCode">
            <summary> Generates alarms when an image with this kind of data is recognized. </summary>
        </member>
        <member name="F:Atalasoft.Twain.AlarmTypeFlags.Power">
            <summary> Generates alarms for any changes in power to the device. </summary>
        </member>
        <member name="F:Atalasoft.Twain.AlarmTypeFlags.Skew">
            <summary> Generates alarms when the paper in not inserted correctly. </summary>
        </member>
        <member name="T:Atalasoft.Twain.DeviceEventFlags">
            <summary> A set of bit flags used to indicate which device events you want to receive. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceEventFlags.None">
            <summary> Disable device events. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceEventFlags.AutomaticCapture">
            <summary> The automatic capture settings on the device have been changed by the user. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceEventFlags.Battery">
            <summary> The status of the battery has changed. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceEventFlags.CheckDeviceOnline">
            <summary> Indicates that a device has become unavailable. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceEventFlags.CustomEvents">
            <summary> Baseline for events specific to a given Source. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceEventFlags.DeviceAdded">
            <summary> The user has added a device (for instance a memory card in a digital camera). </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceEventFlags.DeviceOffline">
            <summary> A device has become unavailable, but has not been removed. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceEventFlags.DeviceReady">
            <summary> The device is ready to capture an image. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceEventFlags.DeviceRemoved">
            <summary> The user has removed a device. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceEventFlags.Flash">
            <summary> The flash setting on the device has been changed by the user. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceEventFlags.ImageCaptured">
            <summary> The user has captured an image to the device s internal storage. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceEventFlags.ImageDeleted">
            <summary> The user has removed an image from the device s internal storage. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceEventFlags.LampFailure">
            <summary> The device s light source has failed. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceEventFlags.PaperDoubleFeed">
            <summary> Two or more sheets of paper have been fed together. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceEventFlags.PaperJam">
            <summary> The device s document feeder has jammed. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceEventFlags.PowerSupply">
            <summary> The power supply has been changed (for instance, the user may have just connected AC to a device that was
            running on battery power). </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceEventFlags.Resolution">
            <summary> The x/y resolution setting on the device has been changed by the user. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceEventFlags.PowerDown">
            <summary> The device is about to power down to save energy. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DeviceEventFlags.PowerSaveNotify">
            <summary> Indicates that the device has switched to a power save mode. </summary>
        </member>
        <member name="T:Atalasoft.Twain.LanguageType">
            <summary> Languages used by the source device. </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.UserLocal">
            <summary> Uses the local system settings. </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Danish">
            <summary> Danish </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Dutch">
            <summary> Dutch </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.English">
            <summary> English </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.FrenchCanadian">
            <summary> French - Canadian </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Finnish">
            <summary> Finnish </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.French">
            <summary> French </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.German">
            <summary> German </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Icelandic">
            <summary> Icelandic </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Italian">
            <summary> <para>Italian</para> </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Norwegian">
            <summary> Norwegian </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Portuguese">
            <summary> Portuguese </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Spanish">
            <summary> Spanish </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Swedish">
            <summary> Swedish </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.EnglishUsa">
            <summary> English - USA </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Afrikaans">
            <summary> Afikaans </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Albania">
            <summary> Ablania </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Arabic">
            <summary> Arabic </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.ArabicAlgerian">
            <summary> Arabic - Algerian </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.ArabicBahrain">
            <summary> Arabic - Bahrain </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.ArabicEgypt">
            <summary> Arabic - Egypt </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.ArabicIraq">
            <summary> Arabic - Iraq </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.ArabicJordan">
            <summary> Arabic - Jordan </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.ArabicKuwait">
            <summary> Arabic - Kuwait </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.ArabicLebanon">
            <summary> Arabic - Lebanon </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.ArabicLibya">
            <summary> Arabic - Libya </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.ArabicMorocco">
            <summary> Arabic - Morocco </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.ArabicOman">
            <summary> Arabic - Oman </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.ArabicQatar">
            <summary> Arabic - Qatar </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.ArabicSaudiArabia">
            <summary> Arabic - Saudi Arabia </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.ArabicSyria">
            <summary> Arabic - Syria </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.ArabicTunisia">
            <summary> Arabic - Tunisia </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.ArabicUae">
            <summary> Arabic - UAE </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.ArabicYemen">
            <summary> Arabic - Yemen </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Basque">
            <summary> Basque </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Byelorussian">
            <summary> Byelorussian </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Bulgarian">
            <summary> Bulgarian </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Catalan">
            <summary> Catalan </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Chinese">
            <summary> Chinese </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.ChineseHongKong">
            <summary> Chinese - Hong Kong </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.ChinesePrc">
            <summary> Chinese - PRC </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.ChineseSingapore">
            <summary> Chinese - Singapore </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.ChineseSimplified">
            <summary> Chinese Simplified </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.ChineseTaiwan">
            <summary> Chinese - Taiwan </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.ChineseTraditional">
            <summary> Chinese Traditional </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Croatia">
            <summary> Croatia </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Czech">
            <summary> Czech </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.DutchBelgian">
            <summary> Dutch - Belgian </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.EnglishAustralian">
            <summary> English - Australian </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.EnglishCanadian">
            <summary> English - Canadian </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.EnglishIreland">
            <summary> English - Ireland </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.EnglishNewZealand">
            <summary> English - New Zealand </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.EnglishSouthAfrica">
            <summary> English - South Africa </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.EnglishUK">
            <summary> English - UK </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Estonian">
            <summary> Estonian </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Faeroese">
            <summary> Faeroese </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Farsi">
            <summary> Farsi </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.FrenchBelgian">
            <summary> French - Belgian </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.FrenchLuxembourg">
            <summary> French - Luxembourg </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.FrenchSwiss">
            <summary> French - Swiss </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.GermanAustrian">
            <summary> German - Austrian </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.GermanLuxembourg">
            <summary> German - Luxembourg </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.GermanLiechtenstein">
            <summary> German - Liechtenstein </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.GermanSwiss">
            <summary> German - Swiss </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Greek">
            <summary> Greek </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Hebrew">
            <summary> <para>Hebrew</para> </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Hungarian">
            <summary> Hungarian </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Indonesian">
            <summary> Indonesian </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.ItalianSwiss">
            <summary> Italian - Swiss </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Japanese">
            <summary> Japanese </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Korean">
            <summary> Korean </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.KoreanJohab">
            <summary> Korean - Johab </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Latvian">
            <summary> Latvian </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Lithuanian">
            <summary> Lithuanian </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.NorwegianBokmal">
            <summary> Norwegian - Bokmal </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.NorwegianNynorsk">
            <summary> Norwegian - Nynorsk </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Polish">
            <summary> Polish </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.PortugueseBrazil">
            <summary> Portuguese - Brazil </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Romanian">
            <summary> Romanian </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Russian">
            <summary> Russian </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.SerbianLatin">
            <summary> Serbian Latin </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Slovak">
            <summary> Slovak </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Slovenian">
            <summary> Slovenian </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.SpanishMexican">
            <summary> Spanish - Mexican </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.SpanishModern">
            <summary> Spanish Modern </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Thai">
            <summary> Thai </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Turkish">
            <summary> Turkish </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Ukranian">
            <summary> Ukranian </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Assamese">
            <summary> Assamese </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Bengali">
            <summary> Bengali </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Bihari">
            <summary> Bihari </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Bodo">
            <summary> Bodo </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Dogri">
            <summary> Dogri </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Gujarati">
            <summary> Gujarati </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Haryanvi">
            <summary> Haryanvi </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Hindi">
            <summary> Hindi </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Kannada">
            <summary> Kannada </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Kashmiri">
            <summary> Kashmiri </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Malayalam">
            <summary> Malayalam </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Marathi">
            <summary> Marathi </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Marwari">
            <summary> Marwari </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Meghalayan">
            <summary> Meghalayan </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Mizo">
            <summary> Mizo </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Naga">
            <summary> Naga </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Orissi">
            <summary> <para>Orissi</para> </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Punjabi">
            <summary> Punjabi </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Pushtu">
            <summary> Pushtu </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.SerbianCyrillic">
            <summary> Serbian Cyrillic </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Sikkimi">
            <summary> Sikkimi </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.SwedishFinland">
            <summary> Swedish - Finland </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Tamil">
            <summary> Tamil </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Telugu">
            <summary> Telugu </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Tripuri">
            <summary> Tripuri </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Urdu">
            <summary> Urdu </summary>
        </member>
        <member name="F:Atalasoft.Twain.LanguageType.Vietnamese">
            <summary> Vietnamese </summary>
        </member>
        <member name="T:Atalasoft.Twain.BitDepthReductionMode">
            <summary> The bit depth reduction mode for the Source. </summary>
            <seealso cref="P:Atalasoft.Twain.Device.BitDepthReduction"/>
        </member>
        <member name="F:Atalasoft.Twain.BitDepthReductionMode.Diffusion">
            <summary> Uses a type of diffusion to reduce the bit depth. </summary>
        </member>
        <member name="F:Atalasoft.Twain.BitDepthReductionMode.Halftones">
            <summary> Uses a halftone algorithm to reduce the colors. </summary>
        </member>
        <member name="F:Atalasoft.Twain.BitDepthReductionMode.Threshold">
            <summary> Uses a set value to determine the reduced color.  See the <see cref="P:Atalasoft.Twain.Device.Threshold"/> property.
            </summary>
        </member>
        <member name="T:Atalasoft.Twain.ColorFilterFlags">
            <summary> The filter values for the <see cref="P:Atalasoft.Twain.Device.ColorFilter"/> device property. </summary>
            <seealso cref="P:Atalasoft.Twain.Device.ColorFilter"/>
        </member>
        <member name="F:Atalasoft.Twain.ColorFilterFlags.None">
            <summary> No color characteristic is used. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ColorFilterFlags.Red">
            <summary> Adds a Red characteristic of the subtractive filter applied to the image data. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ColorFilterFlags.Green">
            <summary> Adds a Green characteristic of the subtractive filter applied to the image data. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ColorFilterFlags.Blue">
            <summary> Adds a Blue characteristic of the subtractive filter applied to the image data. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ColorFilterFlags.White">
            <summary> Adds a White characteristic of the subtractive filter applied to the image data. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ColorFilterFlags.Cyan">
            <summary> Adds a Cyan characteristic of the subtractive filter applied to the image data. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ColorFilterFlags.Magenta">
            <summary> Adds a Magenta characteristic of the subtractive filter applied to the image data. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ColorFilterFlags.Yellow">
            <summary> Adds a Yellow characteristic of the subtractive filter applied to the image data. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ColorFilterFlags.Black">
            <summary> Adds a Black characteristic of the subtractive filter applied to the image data. </summary>
        </member>
        <member name="T:Atalasoft.Twain.FlipRotationMode">
            <summary> Specifies the type of flip rotation the Source will perform. </summary>
        </member>
        <member name="F:Atalasoft.Twain.FlipRotationMode.Book">
            <summary> The images to be scanned are viewed in book form, flipping each page from left to right or right to left.
            </summary>
        </member>
        <member name="F:Atalasoft.Twain.FlipRotationMode.FanFold">
            <summary> The images to be scanned are viewed in fanfold paper style, flipping each page up or down. </summary>
        </member>
        <member name="T:Atalasoft.Twain.SourceImageFormat">
            <summary> Specifies the type of image format to use when saving directly from the source device. </summary>
            <seealso cref="P:Atalasoft.Twain.Device.FileFormat"/>
        </member>
        <member name="F:Atalasoft.Twain.SourceImageFormat.Bmp">
            <summary> Native Microsoft format. </summary>
        </member>
        <member name="F:Atalasoft.Twain.SourceImageFormat.Exif">
            <summary> File format for use with digital cameras. </summary>
        </member>
        <member name="F:Atalasoft.Twain.SourceImageFormat.Fpx">
            <summary> FlashPix, used with digital cameras. </summary>
        </member>
        <member name="F:Atalasoft.Twain.SourceImageFormat.Jfif">
            <summary> Wrapper for JPEG images. </summary>
        </member>
        <member name="F:Atalasoft.Twain.SourceImageFormat.Jpeg2000">
            <summary> JPEG2000 Image </summary>
        </member>
        <member name="F:Atalasoft.Twain.SourceImageFormat.Pdf">
            <summary> PDF document </summary>
        </member>
        <member name="F:Atalasoft.Twain.SourceImageFormat.Pict">
            <summary> Native Macintosh format. </summary>
        </member>
        <member name="F:Atalasoft.Twain.SourceImageFormat.Png">
            <summary> Portable Network Graphic. </summary>
        </member>
        <member name="F:Atalasoft.Twain.SourceImageFormat.Spiff">
            <summary> A standard from JPEG, intended to replace JFIF, also supports JBIG. </summary>
        </member>
        <member name="F:Atalasoft.Twain.SourceImageFormat.Tiff">
            <summary> Tagged Image File Format. </summary>
        </member>
        <member name="F:Atalasoft.Twain.SourceImageFormat.TiffMulti">
            <summary> Multi-page TIFF. </summary>
        </member>
        <member name="F:Atalasoft.Twain.SourceImageFormat.Xbm">
            <summary> Used for document imaging. </summary>
        </member>
        <member name="T:Atalasoft.Twain.ImageFilterMode">
            <summary> A list of filter the source can apply to the image. </summary>    
        </member>
        <member name="F:Atalasoft.Twain.ImageFilterMode.None">
            <summary> Do not use any filter. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ImageFilterMode.Auto">
            <summary> Allow the Source to decide which, if any, to use. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ImageFilterMode.BandPass">
            <summary> Good for improving text. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ImageFilterMode.HighPass">
            <summary> Good for improving fine lines. </summary>
        </member>
        <member name="F:Atalasoft.Twain.ImageFilterMode.LowPass">
            <summary> Good for halftone images. </summary>
        </member>
        <member name="T:Atalasoft.Twain.OrientationMode">
            <summary> Used to set the orientation of the image. </summary>
            <seealso cref="P:Atalasoft.Twain.Device.Orientation"/>
        </member>
        <member name="F:Atalasoft.Twain.OrientationMode.None">
            <summary> The image will not be rotated. </summary>
        </member>
        <member name="F:Atalasoft.Twain.OrientationMode.Rotate90">
            <summary> The image will be rotated 90 degrees clockwise. </summary>
        </member>
        <member name="F:Atalasoft.Twain.OrientationMode.Rotate180">
            <summary> The image will be rotated 180 degrees clockwise. </summary>
        </member>
        <member name="F:Atalasoft.Twain.OrientationMode.Rotate270">
            <summary> The image will be rotated 270 degrees. </summary>
        </member>
        <member name="T:Atalasoft.Twain.DuplexMode">
            <summary> The duplex mode supported by the device. </summary>
            <seealso cref="P:Atalasoft.Twain.Device.Duplex"/>
        </member>
        <member name="F:Atalasoft.Twain.DuplexMode.None">
            <summary> No duplex is supported. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DuplexMode.OnePass">
            <summary> Single-pass duplex will be used. Both sides are scanned in a single pass. </summary>
        </member>
        <member name="F:Atalasoft.Twain.DuplexMode.TwoPass">
            <summary> Double-pass duplex will be used.  Only one side at a time is scanned. </summary>
        </member>
        <member name="T:Atalasoft.Twain.OverscanMode">
            <summary> Specifies the type of Overscan used by the device. </summary>
            <seealso cref="P:Atalasoft.Twain.Device.Overscan"/>
        </member>
        <member name="F:Atalasoft.Twain.OverscanMode.None">
            <summary> <para>No overscan will be performed.</para> </summary>
        </member>
        <member name="F:Atalasoft.Twain.OverscanMode.Auto">
            <summary> The device will control what type of overscan, if any, will be performed. </summary>
        </member>
        <member name="F:Atalasoft.Twain.OverscanMode.TopBottom">
            <summary> A vertical overscan will be performed. </summary>
        </member>
        <member name="F:Atalasoft.Twain.OverscanMode.LeftRight">
            <summary> A horizontal overscan will be performed. </summary>
        </member>
        <member name="F:Atalasoft.Twain.OverscanMode.All">
            <summary> Both horizontal and vertical overscans will be performed. </summary>
        </member>
        <member name="T:Atalasoft.Twain.StaticFrameSizeType">
            <summary> An enumeration of standard frame sizes used by <see cref="P:Atalasoft.Twain.Device.FrameSize"/>. </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.None">
            <summary> No frame size is selected.  This is also returned if the <see cref="P:Atalasoft.Twain.Device.FrameSize"/> property is not
            supported. </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.LetterUS">
            <summary> 8.5 x 11.0 (216mm x 280mm) </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.LegalUS">
            <summary> <para>8.5 x 14.0 (216mm x 356mm)</para> </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.SizeA5">
            <summary> 148mm x 210mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.USLedger">
            <summary> 11.0 x 17.0 (280mm x 432mm) </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.USExecutive">
            <summary> 7.25 x 10.5 (184mm x 267mm) </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.SizeA3">
            <summary> 297mm x 420mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.SizeA6">
            <summary> 105mm x 148mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.SizeC4">
            <summary> 229mm x 324mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.SizeC5">
            <summary> 162mm x 229mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.SizeC6">
            <summary> 114mm x 162mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.Size4A0">
            <summary> 1682mm x 2378mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.Size2A0">
            <summary> 1189mm x 1682mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.SizeA0">
            <summary> 841mm x 1189mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.SizeA1">
            <summary> 594mm x 841mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.SizeA2">
            <summary> 420mm x 594mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.SizeA4">
            <summary> 210mm x 297mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.SizeA7">
            <summary> 74mm x 105mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.SizeA8">
            <summary> 52mm x 74mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.SizeA9">
            <summary> 37mm x 52mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.SizeA10">
            <summary> 26mm x 37mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.IsoB0">
            <summary> 1000mm x 1414mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.IsoB1">
            <summary> 707mm x 1000mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.IsoB2">
            <summary> 500mm x 707mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.IsoB3">
            <summary> 353mm x 500mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.IsoB4">
            <summary> 250mm x 353mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.IsoB5">
            <summary> 176mm x 250mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.IsoB6">
            <summary> 125mm x 176mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.IsoB7">
            <summary> 88mm x 125mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.IsoB8">
            <summary> 62mm x 88mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.IsoB9">
            <summary> 44mm x 62mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.IsoB10">
            <summary> 31mm x 44mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.JisB0">
            <summary> 1030mm x 1456mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.JisB1">
            <summary> 728mm x 1030mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.JisB2">
            <summary> 515mm x 728mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.JisB3">
            <summary> 364mm x 515mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.JisB4">
            <summary> 257mm x 364mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.JisB5">
            <summary> 182mm x 257mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.JisB6">
            <summary> 128mm x 182mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.JisB7">
            <summary> 91mm x 128mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.JisB8">
            <summary> 64mm x 91mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.JisB9">
            <summary> 45mm x 64mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.JisB10">
            <summary> 32mm x 45mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.SizeC0">
            <summary> 917mm x 1297mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.SizeC1">
            <summary> 648mm x 917mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.SizeC2">
            <summary> 458mm x 648mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.SizeC3">
            <summary> 324mm x 458mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.SizeC7">
            <summary> 81mm x 114mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.SizeC8">
            <summary> 57mm x 81mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.SizeC9">
            <summary> 40mm x 57mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.SizeC10">
            <summary> 28mm x 40mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.USStatement">
            <summary> 5.5 x 8.5 (140mm x 216mm) </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.BusinessCard">
            <summary> 90mm x 55mm </summary>
        </member>
        <member name="F:Atalasoft.Twain.StaticFrameSizeType.MaximumSize">
            <summary> <para>Tells the driver to use the maximum possible scan size.  This was added to the TWAIN 2.1
            specification.</para> </summary>
        </member>
        <member name="T:Atalasoft.Twain.UnitType">
            <summary> Used to set the units of measure for the acquire. </summary>
            <seealso cref="P:Atalasoft.Twain.Device.Units"/>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedUnitTypes"/>
        </member>
        <member name="F:Atalasoft.Twain.UnitType.Centimeters">
            <summary> Sets units to pixels per centimeters. </summary>
        </member>
        <member name="F:Atalasoft.Twain.UnitType.Inches">
            <summary> Sets units to pixels per inch or DPI.  This is the default mode. </summary>
        </member>
        <member name="F:Atalasoft.Twain.UnitType.Picas">
            <summary> Sets units to pixels per picas. </summary>
        </member>
        <member name="F:Atalasoft.Twain.UnitType.Pixels">
            <summary> Sets units to pixels per pixel.  This will cause resolution to always return 1. </summary>
        </member>
        <member name="F:Atalasoft.Twain.UnitType.Points">
            <summary> Sets units to pixels per point. </summary>
        </member>
        <member name="F:Atalasoft.Twain.UnitType.Twips">
            <summary> Sets units to pixels per twip. </summary>
        </member>
        <member name="T:Atalasoft.Twain.CountryCode">
            <summary> A list of country codes used by Twain devices. </summary>
            <seealso cref="P:Atalasoft.Twain.TwainIdentity.Country"/>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Afghanistan">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Algeria">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.AmericanSamoa">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Andorra">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Angola">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Anguilla">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Antigua">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Argentina">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Aruba">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Ascensioni">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Australia">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Austria">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Bahamas">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Bahrain">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Bangladesh">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Barbados">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Belgium">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Belize">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Benin">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Bermuda">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Bhutan">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Bolivia">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Botswana">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Britain">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Britvirginsis">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Brazil">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Brunei">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Bulgaria">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Burkinafaso">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Burma">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Burundi">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Camaroon">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Canada">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.CapeVerdeis">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Caymanis">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.CentralAfrep">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Chad">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Chile">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.China">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Christmasis">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Cocosis">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Colombia">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Comoros">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Congo">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Cookis">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Costarica">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Cuba">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Cyprus">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Czechoslovakia">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Denmark">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Djibouti">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Dominica">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Domincanrep">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Easteris">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Ecuador">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Egypt">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Elsalvador">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Eqguinea">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Ethiopia">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Falklandis">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Faeroeis">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Fijiislands">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Finland">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.France">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Frantilles">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Frguiana">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Frpolyneisa">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Futanais">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Gabon">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Gambia">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Germany">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Ghana">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Gibralter">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Greece">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Greenland">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Grenada">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Grenedines">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Guadeloupe">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Guam">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Guantanamobay">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Guatemala">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Guinea">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Guineabissau">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Guyana">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Haiti">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Honduras">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.HongKong">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Hungary">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Iceland">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.India">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Indonesia">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Iran">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Iraq">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Ireland">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Israel">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Italy">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.IvoryCoast">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Jamaica">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Japan">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Jordan">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Kenya">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Kiribati">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Korea">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Kuwait">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Laos">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Lebanon">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Liberia">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Libya">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Liechtenstein">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Luxenbourg">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Macao">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Madagascar">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Malawi">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Malaysia">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Maldives">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Mali">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Malta">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Marshallis">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Mauritania">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Mauritius">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Mexico">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Micronesia">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Miquelon">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Monaco">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Mongolia">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Montserrat">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Morocco">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Mozambique">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Namibia">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Nauru">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Nepal">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Netherlands">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Nethantilles">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Nevis">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Newcaledonia">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Newzealand">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Nicaragua">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Niger">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Nigeria">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Niue">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Norfolki">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Norway">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Oman">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Pakistan">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Palau">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Panama">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Paraguay">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Peru">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Phillippines">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Pitcairnis">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Pnewguinea">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Poland">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Portugal">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Qatar">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Reunioni">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Romania">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Rwanda">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Saipan">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Sanmarino">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Saotome">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Saudiarabia">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Senegal">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Seychellesis">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Sierraleone">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Singapore">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Solomonis">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Somali">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.SouthAfrica">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Spain">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Srilanka">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Sthelena">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Stkitts">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.StLucia">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.StPierre">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.StVincent">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Sudan">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Suriname">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Swaziland">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Sweden">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Switzerland">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Syria">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Taiwan">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Tanzania">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Thailand">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Tobago">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Togo">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Tongais">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Trinidad">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Tunisia">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Turkey">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Turkscaicos">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Tuvalu">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Uganda">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Ussr">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Uaemirates">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.UnitedKingdom">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Usa">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Uruguay">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Vanuatu">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.VaticanCity">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Venezuela">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Wake">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Wallisis">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.WesternSahara">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.WesternSamoa">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Yemen">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Yugoslavia">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Zaire">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Zambia">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Zimbabwe">
            <summary> Country code constant</summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Albania">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Armenia">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Azerbaijan">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Belarus">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Bosniaherzgo">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Cambodia">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Croatia">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.CzechRepublic">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Diegogarcia">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Eritrea">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Estonia">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Georgia">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Latvia">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Lesotho">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Lithuania">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Macedonia">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Mayotteis">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Moldova">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Myanmar">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.NorthKorea">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.PuertoRico">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Russia">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Serbia">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Slovakia">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Slovenia">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.SouthKorea">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Ukraine">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.USVirginis">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="F:Atalasoft.Twain.CountryCode.Vietnam">
            <summary> Country code constant, added =for 1.8 </summary>
        </member>
        <member name="T:Atalasoft.Twain.PowerSupplyMode">
            <summary> Specifies the type of power supply being used by the device. </summary>
            <seealso cref="P:Atalasoft.Twain.Device.PowerSupply"/>
        </member>
        <member name="F:Atalasoft.Twain.PowerSupplyMode.External">
            <summary> Indicates that the device is plugged into an external power source. </summary>
        </member>
        <member name="F:Atalasoft.Twain.PowerSupplyMode.Battery">
            <summary> Indicates that a battery is being used in the device. </summary>
        </member>
        <member name="T:Atalasoft.Twain.FlashMode">
            <summary> Specifies the type of flash, if any, was used by the device. </summary>
        </member>
        <member name="F:Atalasoft.Twain.FlashMode.None">
            <summary> This device does not report flash settings. </summary>
        </member>
        <member name="F:Atalasoft.Twain.FlashMode.Off">
            <summary> The flash was turned off. </summary>
        </member>
        <member name="F:Atalasoft.Twain.FlashMode.On">
            <summary> The flash was turned on. </summary>
        </member>
        <member name="F:Atalasoft.Twain.FlashMode.Auto">
            <summary> The flash was controlled by the device. </summary>
        </member>
        <member name="F:Atalasoft.Twain.FlashMode.RedEye">
            <summary> A red eye reduction flash was used. </summary>
        </member>
        <member name="T:Atalasoft.Twain.LightPathMode">
            <summary> Specifies the type of light path used. </summary>
        </member>
        <member name="F:Atalasoft.Twain.LightPathMode.Reflective">
            <summary> Reflective lighting is being used. </summary>
        </member>
        <member name="F:Atalasoft.Twain.LightPathMode.Transmissive">
            <summary> Transmissive lighting is being used. </summary>
        </member>
        <member name="T:Atalasoft.Twain.LightSourceMode">
            <summary> Specifies the light characteristics used for the acquisition. </summary>
            <seealso cref="P:Atalasoft.Twain.Device.LightSource"/>
        </member>
        <member name="F:Atalasoft.Twain.LightSourceMode.Red">
            <summary> Specifies that a Red light source is used. </summary>
        </member>
        <member name="F:Atalasoft.Twain.LightSourceMode.Green">
            <summary> Specifies that a Green light source is used. </summary>
        </member>
        <member name="F:Atalasoft.Twain.LightSourceMode.Blue">
            <summary> Specifies that a Blue light source is used. </summary>
        </member>
        <member name="F:Atalasoft.Twain.LightSourceMode.None">
            <summary> Specifies that a no light source is used. </summary>
        </member>
        <member name="F:Atalasoft.Twain.LightSourceMode.White">
            <summary> Specifies that a White light source is used. </summary>
        </member>
        <member name="F:Atalasoft.Twain.LightSourceMode.UltraViolet">
            <summary> Specifies that a ultra violet light source is used. </summary>
        </member>
        <member name="F:Atalasoft.Twain.LightSourceMode.InfraRed">
            <summary> Specifies that a Infrared light source is used. </summary>
        </member>
        <member name="T:Atalasoft.Twain.NoiseFilterMode">
            <summary> Specifies the noise filter to use for the acquisition. </summary>
            <seealso cref="P:Atalasoft.Twain.Device.NoiseFilter"/>
        </member>
        <member name="F:Atalasoft.Twain.NoiseFilterMode.None">
            <summary> No filter will be used. </summary>
        </member>
        <member name="F:Atalasoft.Twain.NoiseFilterMode.Auto">
            <summary> The device will determine which or if a noise filter will be used. </summary>
        </member>
        <member name="F:Atalasoft.Twain.NoiseFilterMode.LonePixel">
            <summary> Each pixel will be checked to see if it appears to be noise. </summary>
        </member>
        <member name="F:Atalasoft.Twain.NoiseFilterMode.MajorityRule">
            <summary> A group of pixels are examined to determine if any noise exists. </summary>
        </member>
        <member name="T:Atalasoft.Twain.CompressionMode">
            <summary> Compression modes used during file and memory transfers. </summary>
            <seealso cref="P:Atalasoft.Twain.Device.Compression"/>
        </member>
        <member name="F:Atalasoft.Twain.CompressionMode.None">
            <summary> No compression. </summary>
        </member>
        <member name="F:Atalasoft.Twain.CompressionMode.BitFields">
            <summary> Used only with Bitmaps. </summary>
        </member>
        <member name="F:Atalasoft.Twain.CompressionMode.Group3">
            <summary> CCITT Group 3 2-dimensional encoding, intended for document images (can be used with TIFF). </summary>
        </member>
        <member name="F:Atalasoft.Twain.CompressionMode.Group4">
            <summary> CCITT Group 4 fax encoding, intended for document images (can be used with TIFF). </summary>
        </member>
        <member name="F:Atalasoft.Twain.CompressionMode.Jbig">
            <summary> Intended for bi-tonal and grayscale document images (can be used with TIFF
            or SPIFF). </summary>
        </member>
        <member name="F:Atalasoft.Twain.CompressionMode.Jpeg">
            <summary> Intended for the compression of color photographs (can be used with TIFF, JFIF or SPIFF). </summary>
        </member>
        <member name="F:Atalasoft.Twain.CompressionMode.Lzw">
            <summary> A compression licensed by UNISYS (can be used with TIFF). </summary>
        </member>
        <member name="F:Atalasoft.Twain.CompressionMode.PackBits">
            <summary> Macintosh PackBits format, (can be used with TIFF or PICT). </summary>
        </member>
        <member name="F:Atalasoft.Twain.CompressionMode.Png">
            <summary> Portable Network Graphic. </summary>
        </member>
        <member name="F:Atalasoft.Twain.CompressionMode.Rle4">
            <summary> Run-Length encoding used with Bitmaps. </summary>
        </member>
        <member name="F:Atalasoft.Twain.CompressionMode.Rle8">
            <summary> Run-Length encoding used with Bitmaps. </summary>
        </member>
        <member name="T:Atalasoft.Twain.BatchJobControl">
            <summary> Used to set the batch mode of the device. </summary>
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedJobControls"/>
        </member>
        <member name="F:Atalasoft.Twain.BatchJobControl.TWJC_NONE">
            <summary> No job control. </summary>
        </member>
        <member name="F:Atalasoft.Twain.BatchJobControl.TWJC_JSIC">
            <summary> Detect and include job separator and continue scanning. </summary>
        </member>
        <member name="F:Atalasoft.Twain.BatchJobControl.TWJC_JSIS">
            <summary> Detect and include job separator and stop scanning. </summary>
        </member>
        <member name="F:Atalasoft.Twain.BatchJobControl.TWJC_JSXC">
            <summary> Detect and exclude job separator and continue scanning. </summary>
        </member>
        <member name="F:Atalasoft.Twain.BatchJobControl.TWJC_JSXS">
            <summary> Detect and exclude job separator and stop scanning. </summary>
        </member>
        <member name="T:Atalasoft.Twain.InvalidStateException">
            <summary> This exception is fired when an action, such as setting a property, has been taken before the device is in
            the proper state. </summary>
        </member>
        <member name="M:Atalasoft.Twain.InvalidStateException.#ctor">
            <overloads> Creates an instance of InvalidStateException. </overloads>
            <summary> Creates a new instance of InvalidStateException. </summary>
        </member>
        <member name="M:Atalasoft.Twain.InvalidStateException.#ctor(System.String)">
            <summary> Creates a new instance of InvalidStateException specifying message. </summary>
            <param name="message"> The error message for this exception. </param>
        </member>
        <member name="M:Atalasoft.Twain.InvalidStateException.#ctor(System.String,System.Exception)">
            <summary> Creates a new instance of InvalidStateException specifying message and baseException. </summary>
            <param name="message"> The error message for this exception. </param>
            <param name="baseException"> The base exception for this InvalidStateException. </param>
        </member>
        <member name="M:Atalasoft.Twain.InvalidStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary> Creates an instance of InvalidStateException from serialized information. </summary>
            <param name="serializationInfo"> The SerializationInfo object containing information for this exception. </param>
            <param name="context"> A StreamingContext for this information. </param>
        </member>
        <member name="T:Atalasoft.Twain.TwainException">
            <summary> This is a general exception due to an error while using DotTwain. </summary>
        </member>
        <member name="M:Atalasoft.Twain.TwainException.#ctor">
            <summary> Creates a new instance of TwainException. </summary>
        </member>
        <member name="M:Atalasoft.Twain.TwainException.#ctor(System.String)">
            <summary> Creates a new instance of TwainException specifying message. </summary>
            <param name="message"> The error message for this exception. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainException.#ctor(System.String,Atalasoft.Twain.TwainConditionCode)">
            <summary> Creates a new instance of TwainException specifying the message and condition code. </summary>
            <param name="message"> The error message for this exception. </param>
            <param name="conditionCode"> The condition code returned by Twain or the device. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainException.#ctor(System.String,System.Exception)">
            <summary> Creates a new instance of TwainException specifying message and baseException. </summary>
            <param name="message"> The error message for this exception. </param>
            <param name="baseException"> The base exception for this TwainException. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary> Creates a new instance of TwainException from serialized information. </summary>
            <param name="serializationInfo"> The SerializationInfo object containing information about this exception. </param>
            <param name="context"> A StreamingContext for this information. </param>
        </member>
        <member name="P:Atalasoft.Twain.TwainException.ConditionCode">
            <summary> Gets the condition code for this exception. </summary>
            <value> The condition code returned by Twain or the device. </value>
        </member>
        <member name="M:Atalasoft.Twain.TwainException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary> Fills a SerializationInfo object with information about this exception. </summary>
            <param name="info"> The SerializationInfo object to fill. </param>
            <param name="context"> A StreamingContext for this data. </param>
        </member>
        <member name="T:Atalasoft.Twain.UnsupportedCapabilityException">
            <summary> <para>This exception is caused when trying to use features of Twain which are unsupported by the device. 
            For instance, if you try to perform an acquire directly to file and the device does not support this feature, an
            <STRONG>UnsupportedCapabilityException</STRONG> will be generated.</para> </summary>
            <remarks> <para>This exception will not be raised just by trying to set a property that the device doesn't
            support.</para> </remarks>
        </member>
        <member name="M:Atalasoft.Twain.UnsupportedCapabilityException.#ctor">
            <summary> An exception caused when a capability or property not supported by the device is accessed. </summary>
        </member>
        <member name="M:Atalasoft.Twain.UnsupportedCapabilityException.#ctor(System.String)">
            <summary> Creates an instance of UnsupportedCapabilityException specifying message. </summary>
            <param name="message"> The error message for this exception. </param>
        </member>
        <member name="M:Atalasoft.Twain.UnsupportedCapabilityException.#ctor(Atalasoft.Twain.DeviceCapability)">
            <summary> Creates an instance of UnsupportedCapabilityException specifying capability. </summary>
            <param name="capability"> The capability that is not supported by the device. </param>
        </member>
        <member name="M:Atalasoft.Twain.UnsupportedCapabilityException.#ctor(Atalasoft.Twain.DeviceCapability,System.String)">
            <summary> Creates an instance of UnsupportedCapabilityException specifying capability and message. </summary>
            <param name="capability"> The capability that is not supported by the device. </param>
            <param name="message"> The error message for this exception. </param>
        </member>
        <member name="M:Atalasoft.Twain.UnsupportedCapabilityException.#ctor(System.String,System.Exception)">
            <summary> Creates an instance of UnsupportedCapabilityException specifying message and baseException. </summary>
            <param name="message"> The error message for this exception. </param>
            <param name="baseException"> The base exception for this UnsupportedCapabilityException. </param>
        </member>
        <member name="M:Atalasoft.Twain.UnsupportedCapabilityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary> Creates an instance of UnsupportedCapabilityException from serialized information. </summary>
            <param name="serializationInfo"> A SerializationInfo object containing information about this exception. </param>
            <param name="context"> A StreamingContext for this information. </param>
        </member>
        <member name="P:Atalasoft.Twain.UnsupportedCapabilityException.Capability">
            <summary> Gets the capability which caused the exception. </summary>
            <value> The capability which caused the exception. </value>
            <remarks> If no capability was specified, this will return <see cref="T:Atalasoft.Twain.DeviceCapability"/>.Custom. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.UnsupportedCapabilityException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary> Fills a SerializationInfo object with information about this exception. </summary>
            <param name="info"> The SerializationInfo object to store information into. </param>
            <param name="context"> A StreamingContext for this information. </param>
        </member>
        <member name="T:Atalasoft.Twain.FileInformation">
            <summary> Contains information about a specific file in the <see cref="T:Atalasoft.Twain.FileSystem"/>. </summary>
            <seealso cref="T:Atalasoft.Twain.FileSystem"/>
        </member>
        <member name="P:Atalasoft.Twain.FileInformation.FileName">
            <summary> Gets the full path and name of the file. </summary>
            <value> The full path and name of the file. </value>
        </member>
        <member name="P:Atalasoft.Twain.FileInformation.CreateTimeDate">
            <summary> Gets the file creation time. </summary>
            <value> The file creation time. </value>
        </member>
        <member name="P:Atalasoft.Twain.FileInformation.ModifyTimeDate">
            <summary> Gets the file modify time. </summary>
            <value> The file modify time. </value>
        </member>
        <member name="P:Atalasoft.Twain.FileInformation.FileSize">
            <summary> Gets the file size in bytes. </summary>
            <value> The file size in bytes. </value>
        </member>
        <member name="P:Atalasoft.Twain.FileInformation.FileType">
            <summary> Gets a value indicating if this is an image, directory or other item. </summary>
            <value> A value indicating if this is an image, directory or other item. </value>
        </member>
        <member name="T:Atalasoft.Twain.FileSystem">
            <summary> Contains methods which can navigate the file system of a camera. </summary>
        </member>
        <member name="P:Atalasoft.Twain.FileSystem.CurrentDirectory">
            <summary> Gets or sets the current directory. </summary>
            <value> The current directory. </value>
        </member>
        <member name="M:Atalasoft.Twain.FileSystem.Copy(System.String,System.String,System.Boolean)">
            <summary> Copies a file or directory from one location to another. </summary>
            <param name="fromPath"> The path of the file or directory to copy. </param>
            <param name="toPath"> The destination path of the file or directory. </param>
            <param name="overwrite"> Determines if this method will overwrite a file or directory if one of the same name
            already exists. </param>
        </member>
        <member name="M:Atalasoft.Twain.FileSystem.CreateDirectory(System.String)">
            <summary> Creates a new directory in the current directory. </summary>
            <param name="newDirectory"> The name of the new directory. </param>
        </member>
        <member name="M:Atalasoft.Twain.FileSystem.Delete(System.String,System.Boolean)">
            <summary> Deletes a file or directory from the current directory. </summary>
            <remarks> You cannot delete directories unless they are empty. Files and directories in the root directory cannot be
            deleted. </remarks>
            <param name="path"> The name of the file or directory to delete. </param>
            <param name="recursive"> Set to true if you want to perform a recursive delete. </param>
        </member>
        <member name="M:Atalasoft.Twain.FileSystem.FormatMedia">
            <summary> Removes all files and folders from the file system. </summary>
        </member>
        <member name="M:Atalasoft.Twain.FileSystem.Rename(System.String,System.String,System.Boolean)">
            <summary> Renames a file or directory. </summary>
            <remarks> Files and directories in the root directory cannot be moved or renamed. </remarks>
            <param name="oldName"> The file or directory to rename. </param>
            <param name="newName"> The new name of the file or directory. </param>
            <param name="overwrite"> Determines if this will allow the rename to overwrite a file or directory with the same
            name. </param>
        </member>
        <member name="M:Atalasoft.Twain.FileSystem.CollectFileInformation">
            <summary> Refreshes the list of directories and files. </summary>
        </member>
        <member name="P:Atalasoft.Twain.FileSystem.Item(System.Int32)">
            <summary> Allows you to enumerate through the directories and files in the FileSystem. </summary>
            <value> A <see cref="T:Atalasoft.Twain.FileInformation"/> object containing data about the file or directory. </value>
            <param name="index"> The index of the file you want information about. </param>
        </member>
        <member name="M:Atalasoft.Twain.FileSystem.GetFirstFile">
            <summary> Finds the first file in the current directory and returns information about it. </summary>
            <returns> A FileInformation object containing details about this file, or null if no file was found. </returns>
            <remarks> Calling <see cref="M:Atalasoft.Twain.Device.Acquire"/> when navigating through the file system will cause the current file
            to be acquired. </remarks>
            <seealso cref="M:Atalasoft.Twain.FileSystem.GetClose"/>
            <seealso cref="M:Atalasoft.Twain.FileSystem.GetNextFile"/>
        </member>
        <member name="M:Atalasoft.Twain.FileSystem.GetNextFile">
            <summary> Finds the next file in the current directory and returns information about it. </summary>
            <returns> A FileInformation object containing details about this file, or null if no file was found. </returns>
            <remarks> You must call <see cref="M:Atalasoft.Twain.FileSystem.GetFirstFile"/> before calling this method. </remarks>
            <seealso cref="M:Atalasoft.Twain.FileSystem.GetClose"/>
            <seealso cref="M:Atalasoft.Twain.FileSystem.GetFirstFile"/>
        </member>
        <member name="M:Atalasoft.Twain.FileSystem.GetClose">
            <summary> Frees an internal context which is generated by calling <see cref="M:Atalasoft.Twain.FileSystem.GetFirstFile"/>. </summary>
            <remarks> You must call this method when you are done navigating the file system. </remarks>
            <seealso cref="M:Atalasoft.Twain.FileSystem.GetFirstFile"/>
            <seealso cref="M:Atalasoft.Twain.FileSystem.GetNextFile"/>
        </member>
        <member name="T:Atalasoft.Twain.HttpPost">
            <summary> <para>This class allows can post image data to a server without user interaction.</para> </summary>
            <example>
<code lang="CS" title="Posting an image (C#)"><![CDATA[
// Load the image we want to upload.
Bitmap bmp = new Bitmap(@"C:\myimage.jpg");

// We are going to save the image as JPEG on the server.
HttpPost post = new HttpPost(System.Drawing.Imaging.ImageFormat.Jpeg);
post.FormData.Add("image1", bmp, "myimage.jpg");

// Now lets add the additional information set by the client.
post.FormData.Add("comment", this.textComment.Text);
post.FormData.Add("author", this.textAuthor.Text);

// Upload the image and check the return value to see if it worked.
string retVal = post.PostData("http://www.mysite.com/handleupload.aspx");
if (retVal != "Success")
    MessageBox.Show(this, retVal, "Upload Error");

// Free the image.
bmp.Dispose();
]]></code>

<code lang="VB" title="Posting an image (Visual Basic)"><![CDATA[
' Load the image we want to upload.
Dim bmp As Bitmap = New Bitmap("C:\myimage.jpg")

' We are going to save the image as JPEG on the server.
Dim post As HttpPost = New HttpPost(System.Drawing.Imaging.ImageFormat.Jpeg)
post.FormData.Add("image1", bmp, "myimage.jpg")

' Now lets add the additional information set by the client.
post.FormData.Add("comment", Me.textComment.Text)
post.FormData.Add("author", Me.textAuthor.Text)

' Upload the image and check the return value to see if it worked.
Dim retVal As String = post.PostData("http://www.mysite.com/handleupload.aspx")
If retVal <> "Success" Then
    MessageBox.Show(this, retVal, "Upload Error")
End If

' Free the image.
bmp.Dispose()
]]></code>

<para>This example will show you how to acquire an image from a web page and post it to the server.</para>
<code lang="JScript" title="Posting from a browser (JScript)"><![CDATA[
<!-- The main Acquisition object. -->
<object id="Twain" height="1" width="1" classid="Atalasoft.Twain.dll#Atalasoft.Twain.Acquisition" VIEWASTEXT>
</object>

<!-- Create an instance of the HttpPost object -->
<object id="PostIt" height="1" width="1" classid="Atalasoft.Twain.dll#Atalasoft.Twain.HttpPost" VIEWASTEXT>
</object>

...

<script type="text/javascript">
var count = 0;
function AcquireImage()
{
    // Acquire the image.
    var img = document.Twain.AcquireModal(false);
    if (img == null)
    {
        alert(&apos;Image was not acquired.&apos;);
        return;
    }
            
    // Send the image to the server.
    count++;
    var filename = &apos;image&apos; + count + &apos;.png&apos;;
    document.PostIt.FormData.AddFromBrowser(&apos;postImage&apos;, img, filename);
            
    var response = "";
    //response = document.PostIt.PostDataFromBrowser(&apos;http://www.atalasoft.com/Components/Twain/Demo/savepost.aspx&apos;);
    response = document.PostIt.PostData(&apos;http://localhost/TwainDemo/savepost.aspx&apos;);
    
    // Free the form data.
    document.PostIt.FormData.Clear();
    
    // Update the image.
    if (response.length > 0)
    {
        var el = document.getElementById(&apos;preview&apos;);
        el.src = response;
    } else {
        alert("PostDataFromBrowser failed");
    }
}
</script>
]]></code>
</example>
            <seealso> FormDataCollection Class </seealso>
            <example>
<code lang="CS" title="Posting an image (C#)"><![CDATA[
// Load the image we want to upload.
Bitmap bmp = new Bitmap(@"C:\myimage.jpg");

// We are going to save the image as JPEG on the server.
HttpPost post = new HttpPost(System.Drawing.Imaging.ImageFormat.Jpeg);
post.FormData.Add("image1", bmp, "myimage.jpg");

// Now lets add the additional information set by the client.
post.FormData.Add("comment", this.textComment.Text);
post.FormData.Add("author", this.textAuthor.Text);

// Upload the image and check the return value to see if it worked.
string retVal = post.PostData("http://www.mysite.com/handleupload.aspx");
if (retVal != "Success")
    MessageBox.Show(this, retVal, "Upload Error");

// Free the image.
bmp.Dispose();
]]></code>

<code lang="VB" title="Posting an image (Visual Basic)"><![CDATA[
' Load the image we want to upload.
Dim bmp As Bitmap = New Bitmap("C:\myimage.jpg")

' We are going to save the image as JPEG on the server.
Dim post As HttpPost = New HttpPost(System.Drawing.Imaging.ImageFormat.Jpeg)
post.FormData.Add("image1", bmp, "myimage.jpg")

' Now lets add the additional information set by the client.
post.FormData.Add("comment", Me.textComment.Text)
post.FormData.Add("author", Me.textAuthor.Text)

' Upload the image and check the return value to see if it worked.
Dim retVal As String = post.PostData("http://www.mysite.com/handleupload.aspx")
If retVal <> "Success" Then
    MessageBox.Show(this, retVal, "Upload Error")
End If

' Free the image.
bmp.Dispose()
]]></code>

<para>This example will show you how to acquire an image from a web page and post it to the server.</para>
<code lang="JScript" title="Posting from a browser (JScript)"><![CDATA[
<!-- The main Acquisition object. -->
<object id="Twain" height="1" width="1" classid="Atalasoft.Twain.dll#Atalasoft.Twain.Acquisition" VIEWASTEXT>
</object>

<!-- Create an instance of the HttpPost object -->
<object id="PostIt" height="1" width="1" classid="Atalasoft.Twain.dll#Atalasoft.Twain.HttpPost" VIEWASTEXT>
</object>

...

<script type="text/javascript">
var count = 0;
function AcquireImage()
{
    // Acquire the image.
    var img = document.Twain.AcquireModal(false);
    if (img == null)
    {
        alert(&apos;Image was not acquired.&apos;);
        return;
    }
            
    // Send the image to the server.
    count++;
    var filename = &apos;image&apos; + count + &apos;.png&apos;;
    document.PostIt.FormData.AddFromBrowser(&apos;postImage&apos;, img, filename);
            
    var response = "";
    //response = document.PostIt.PostDataFromBrowser(&apos;http://www.atalasoft.com/Components/Twain/Demo/savepost.aspx&apos;);
    response = document.PostIt.PostData(&apos;http://localhost/TwainDemo/savepost.aspx&apos;);
    
    // Free the form data.
    document.PostIt.FormData.Clear();
    
    // Update the image.
    if (response.length > 0)
    {
        var el = document.getElementById(&apos;preview&apos;);
        el.src = response;
    } else {
        alert("PostDataFromBrowser failed");
    }
}
</script>
]]></code>
</example>
            <seealso> HttpPost Class </seealso>
            <remarks> <para>The data is posted as if it were being sent from an HTML Form, allowing any form handling component
            to be used on the server.</para> </remarks>
        </member>
        <member name="M:Atalasoft.Twain.HttpPost.#ctor">
            <summary> Creates a new instance of HttpPost. </summary>
        </member>
        <member name="M:Atalasoft.Twain.HttpPost.#ctor(System.Drawing.Imaging.ImageFormat)">
            <summary> Creates a new instance of HttpPost specifying encoder. </summary>
            <remarks> This determines what type of image will be sent to the server.  If an encoder is not specified, the image
            will be sent as PNG. </remarks>
            <param name="encoder"> The encoder to use for images that are uploaded. </param>
        </member>
        <member name="M:Atalasoft.Twain.HttpPost.SetImageFormat(System.Drawing.Imaging.ImageFormat)">
            <param name="format"> The GDI+ format extension to encode that image as when uploading. </param>
        </member>
        <member name="M:Atalasoft.Twain.HttpPost.SetImageFormat(System.String)">
            <remarks> <para>Set the FormData property to the FormDataCollection containing images to upload.  Supported GDI+
            formats passed as a case insensitive string include: BMP, GIF, EMF, ICON, JPEG, JPG, PNG, TIF, TIFF, and WMF.</para>
            <para>See the HTTP Post class in DotImage, to upload <STRONG>AtalaImage</STRONG> objects.</para> </remarks>
            <summary> Sets the image format that will be used to post the <STRONG>Bitmap</STRONG> data in the <see
            cref="T:Atalasoft.Twain.FormDataCollection"/>. </summary>
            <example> HttpPost Class </example>
        </member>
        <member name="P:Atalasoft.Twain.HttpPost.FormData">
            <summary> Gets the <see cref="T:Atalasoft.Twain.FormDataCollection"/> object that will be posted to the server. </summary>
            <value> The <see cref="T:Atalasoft.Twain.FormDataCollection"/> object that will be posted to the server. </value>
            <remarks> Set the <STRONG>FormData</STRONG> property in the <see cref="T:Atalasoft.Twain.HttpPost"/> constructor. </remarks>
        </member>
        <member name="P:Atalasoft.Twain.HttpPost.SessionCookies">
            <summary> Gets or sets the session cookies to use for this transfer. </summary>
            <value> The session cookies to use for the transfer. </value>
        </member>
        <member name="P:Atalasoft.Twain.HttpPost.Timeout">
            <summary> Gets or sets the seconds to wait before timing out on the transfer. </summary>
            <value> The number of seconds to wait before timing out. </value>
        </member>
        <member name="M:Atalasoft.Twain.HttpPost.GetData(System.String)">
            <summary> This method can be used to retrieve information from a server. </summary>
            <returns> A string containing the data returned by the server. </returns>
            <remarks> Use this method when you only want to retrieve information.  You can send parameters to the server by
            adding query string values to the url. </remarks>
            <param name="url"> A web address to request data from. </param>
        </member>
        <member name="M:Atalasoft.Twain.HttpPost.PostData(System.String)">
            <summary> This method will send the internal <see cref="T:Atalasoft.Twain.FormDataCollection"/> entries to a server for processing.
            </summary>
            <returns> A string containing returned data from the server. </returns>
            <param name="url"> The web address to send the data to. </param>
        </member>
        <member name="T:Atalasoft.Twain.FormDataCollection">
            <summary> The <STRONG>FormDataCollection</STRONG> is used with the <see cref="T:Atalasoft.Twain.HttpPost"/> class to send form
            information to a web server. </summary>
        </member>
        <member name="M:Atalasoft.Twain.FormDataCollection.#ctor">
            <summary> Creates a new instance of FormDataCollection. </summary>
        </member>
        <member name="M:Atalasoft.Twain.FormDataCollection.Add(System.String,System.String)">
            <summary> Adds form data to the collection. </summary>
            <remarks> Use this to add data other than images that might be needed for any server-side scripting. </remarks>
            <param name="fieldName"> The field name of the form object. </param>
            <param name="fieldValue"> The value of the field object. </param>
        </member>
        <member name="M:Atalasoft.Twain.FormDataCollection.Add(System.String,System.Drawing.Bitmap)">
            <summary> <para>Adds an image to the collection.</para> </summary>
            <remarks> <para>This allows you to upload images to the server without using interaction.</para> </remarks>
            <param name="fieldName"> The field name of the form object. </param>
            <param name="image"> The image you want to upload. </param>
        </member>
        <member name="M:Atalasoft.Twain.FormDataCollection.Add(System.String,System.Drawing.Bitmap,System.String)">
            <summary> <para>Adds an image to the collection, specifying a filename for the image.</para> </summary>
            <remarks> <para>This allows you to upload images to the server without using interaction.</para> </remarks>
            <param name="fieldName"> The field name of the form object. </param>
            <param name="image"> The image you want to upload. </param>
            <param name="fileName"> <para>The filename of the image being uploaded.</para><para>Many upload components use this
            value, and some require it.</para> </param>
        </member>
        <member name="M:Atalasoft.Twain.FormDataCollection.Add(System.String,System.IO.Stream,System.String,System.String)">
            <summary> Adds stream data to the collectoin.  Use this method to post any type of file. </summary>
            <param name="fieldName"> The field name of the form object. </param>
            <param name="data"> A Stream containing the data to be posted. </param>
            <param name="fileName"> A filename used to represent the stream data.  Many web applications use this filename when
            saving the data onto the server.  If a filename is not provided a generic name is used. </param>
            <param name="contextType"> The context type to use for this data.  If this parameter is not set,
            <STRONG>application/octet-stream</STRONG> is used. </param>
        </member>
        <member name="M:Atalasoft.Twain.FormDataCollection.AddFromBrowser(System.String,System.Object,System.String)">
            <summary> <para>Adds an image or form field to the collection.</para><para>You must use this method when posting
            from a web browser.</para> </summary>
            <remarks> When adding an image, set the <EM>fieldValue</EM> to the filename of the image.  When adding a form field
            entry, set the <EM>image</EM> to null. </remarks>
            <param name="fieldName"> The field name of the form object. </param>
            <param name="image"> The image you want to upload. </param>
            <param name="fieldValue"> The value of the field object or the filename of the image. </param>
        </member>
        <member name="M:Atalasoft.Twain.FormDataCollection.Remove(System.Drawing.Bitmap)">
            <summary> Removes an image from the collection. </summary>
            <param name="image"> The image to remove. </param>
        </member>
        <member name="M:Atalasoft.Twain.FormDataCollection.CopyTo(System.Drawing.Bitmap[],System.Int32)">
            <summary> Copies items in the collection into an array. </summary>
            <param name="images"> An array of Bitmap objects to copy. </param>
            <param name="index"> The collection index where copying will start. </param>
        </member>
        <member name="M:Atalasoft.Twain.FormDataCollection.Contains(System.Drawing.Bitmap)">
            <summary> Returns <STRONG>true</STRONG> if an image is contained within the collection. </summary>
            <returns> <STRONG>True</STRONG> if the image is contained in the collection; otherwise <STRONG>false</STRONG>.
            </returns>
            <param name="image"> The image to search for. </param>
        </member>
        <member name="M:Atalasoft.Twain.FormDataCollection.IndexOf(System.Drawing.Bitmap)">
            <summary> Returns the index of a Bitmap within the collection. </summary>
            <returns> The collection index of the image or -1 if the image is not found. </returns>
            <param name="image"> The image to search for. </param>
        </member>
        <member name="M:Atalasoft.Twain.FormDataCollection.Insert(System.Int32,System.Drawing.Bitmap)">
            <summary> Inserts an image into the collection at the specified index. </summary>
            <param name="index"> The index where the image should be placed. </param>
            <param name="image"> The image to insert. </param>
        </member>
        <member name="P:Atalasoft.Twain.FormDataCollection.Item(System.Int32)">
            <summary> Gets an image from the collection at the specified index. </summary>
            <value> The image found at the specified index. </value>
            <param name="index"> The collection index of the image. </param>
        </member>
        <member name="T:Atalasoft.Twain.ITwainDataStructure">
            <summary> This interface is used for data classes sent to the <see cref="M:Atalasoft.Twain.TwainController.SendCommand(Atalasoft.Twain.TwainTriplet,Atalasoft.Twain.TwainIdentity,Atalasoft.Twain.ITwainDataStructure)" /> method.
            </summary>
            <remarks> <para>Use this interface for custom Twain calls not implemented by DotTwain.  </para>
            <para>Implementors of this class should not dispose of the <see cref="T:Atalasoft.Twain.TwainMemory" /> sent to <see cref="M:Atalasoft.Twain.ITwainDataStructure.ProcessResult(Atalasoft.Twain.TwainMemory)" />.  The <see cref="T:Atalasoft.Twain.TwainController" /> will dispose of the memory created by
            <see cref="M:Atalasoft.Twain.ITwainDataStructure.GetStructurePointer(Atalasoft.Twain.TwainMemory)" />.</para> </remarks>
            <example>
<code lang="CS" title="ITwainDataCS (C#)"><![CDATA[
public class TwainHandle : ITwainDataStructure
{
    private IntPtr _handle = IntPtr.Zero;

    public TwainHandle(IntPtr handle)
    {
        _handle = handle;
    }

    public IntPtr Handle
    {
        get { return _handle; }
    }

    #region ITwainDataStructure Members

    public void GetStructurePointer(TwainMemory memory)
    {
        memory.Allocate(IntPtr.Size);
        memory.WriteIntPtr(_handle);
    }

    public void ProcessResult(TwainMemory memory)
    {
        _handle = memory.ReadIntPtr();
    }

    public bool IsSupportedCommand(Atalasoft.Twain.TwainTriplet command)
    {
        return (command == TwainTriplet.AudioNativeXferGet);
    }

    #endregion
}
]]></code>

<code lang="VB" title="ITwainDataVB (Visual Basic)"><![CDATA[
Public Class TwainHandle
    Implements ITwainDataStructure
    Private _handle As IntPtr = IntPtr.Zero

    Public Sub New(ByVal handle As IntPtr)
        _handle = handle
    End Sub

    Public Readonly Property Handle() As IntPtr
        Get
            Return _handle
        End Get
    End Property

    #Region "ITwainDataStructure Members"

    Public Sub GetStructurePointer(ByVal memory As TwainMemory)
        memory.Allocate(IntPtr.Size)
        memory.WriteIntPtr(_handle)
    End Sub

    Public Sub ProcessResult(ByVal memory As TwainMemory)
        _handle = memory.ReadIntPtr()
    End Sub

    Public Function IsSupportedCommand(ByVal command As Atalasoft.Twain.TwainTriplet) As Boolean
        Return (command Is TwainTriplet.AudioNativeXferGet)
    End Function

    #End Region
End Class
]]></code>
</example>
            <seealso cref="T:Atalasoft.Twain.TwainController" />
            <seealso cref="M:Atalasoft.Twain.TwainController.SendCommand(Atalasoft.Twain.TwainTriplet,Atalasoft.Twain.TwainIdentity,Atalasoft.Twain.ITwainDataStructure)" />
        </member>
        <member name="M:Atalasoft.Twain.ITwainDataStructure.IsSupportedCommand(Atalasoft.Twain.TwainTriplet)">
            <summary> Returns a value indicating whether the implementing class supports a specific <see cref="T:Atalasoft.Twain.TwainTriplet"/>
            command. </summary>
            <returns> True if the <see cref="T:Atalasoft.Twain.TwainTriplet"/> is supported by the implementing class. </returns>
            <example> ITwainDataStructure Interface </example>
            <param name="command"> A <see cref="T:Atalasoft.Twain.TwainTriplet"/> that will be sent to
            <see cref="M:Atalasoft.Twain.TwainController.SendCommand(Atalasoft.Twain.TwainTriplet,Atalasoft.Twain.TwainIdentity,Atalasoft.Twain.ITwainDataStructure)"/>.
            </param>
        </member>
        <member name="M:Atalasoft.Twain.ITwainDataStructure.GetStructurePointer(Atalasoft.Twain.TwainMemory)">
            <summary> Creates the memory pointer containing data sent to TWAIN. </summary>
            <remarks> DotTwain will dispose of this memory after calling <see cref="M:Atalasoft.Twain.ITwainDataStructure.ProcessResult(Atalasoft.Twain.TwainMemory)"/>.
            </remarks>
            <example> ITwainDataStructure Interface </example>
            <param name="memory"> A <see cref="T:Atalasoft.Twain.TwainMemory"/> object which should be used to allocate and write values that will
            be sent to TWAIN. </param>
        </member>
        <member name="M:Atalasoft.Twain.ITwainDataStructure.ProcessResult(Atalasoft.Twain.TwainMemory)">
            <summary> Receives the <see cref="T:Atalasoft.Twain.TwainMemory"/> created by <see cref="M:Atalasoft.Twain.ITwainDataStructure.GetStructurePointer(Atalasoft.Twain.TwainMemory)"/>
            after being processed by TWAIN. </summary>
            <remarks> This method is called after TWAIN has processed the data.  The memory will be disposed by DotTwain after
            this method call. </remarks>
            <example> ITwainDataStructure Interface </example>
            <param name="memory"> The <see cref="T:Atalasoft.Twain.TwainMemory"/> object created by <see
            cref="M:Atalasoft.Twain.ITwainDataStructure.GetStructurePointer(Atalasoft.Twain.TwainMemory)"/> and processed by TWAIN. </param>
        </member>
        <member name="T:Atalasoft.Twain.TwainResolution">
            <summary> Describes the horizontal and vertical resolution. </summary>
            <seealso cref="P:Atalasoft.Twain.Device.Resolution" />
            <seealso cref="M:Atalasoft.Twain.Device.GetSupportedResolutions" />
            <example>
<code lang="CS" title="TwainResolutionCS (C#)"><![CDATA[
this.device.Open();
this.device.Resolution = new TwainResolution(this.scanResolution.X, this.scanResolution.Y, this.scanResolution.Units);
this.device.ModalAcquire = true;
this.device.Acquire();
this.device.Close();
]]></code>

<code lang="VB" title="TwainResolutionVB (Visual Basic)"><![CDATA[
Me.device.Open()
Me.device.Resolution = New TwainResolution(Me.scanResolution.X, Me.scanResolution.Y, Me.scanResolution.Units)
Me.device.ModalAcquire = True
Me.device.Acquire()
Me.device.Close()
]]></code>
</example>
        </member>
        <member name="M:Atalasoft.Twain.TwainResolution.#ctor">
            <summary> Creates a new instance of TwainResolution. </summary>
            <overloads> Creates a new TwainResolution object. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainResolution.#ctor(System.Single,System.Single)">
            <summary> Creates a new instance of TwainResolution specifying x and y. </summary>
            <param name="x"> The horizontal resolution. </param>
            <param name="y"> The vertical resolution. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainResolution.#ctor(System.Single,System.Single,Atalasoft.Twain.UnitType)">
            <summary> Creates a new instance of TwainResolution specifying x, y and units. </summary>
            <param name="x"> The horizontal resolution. </param>
            <param name="y"> The vertical resolution. </param>
            <param name="units"> The units of measure used for the x, y values. </param>
        </member>
        <member name="P:Atalasoft.Twain.TwainResolution.X">
            <summary> Gets or sets the Horizontal X resolution. </summary>
            <value> The horizontal resolution. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainResolution.Y">
            <summary> Gets or sets the Vertical Y resolution. </summary>
            <value> The vertical resolution. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainResolution.Units">
            <summary> Gets or sets the units of measure used for the X, Y values. </summary>
            <value> The units of measure used for the X, Y values. </value>
        </member>
        <member name="M:Atalasoft.Twain.TwainResolution.ToString">
            <summary> Returns the <STRONG>X</STRONG> and <STRONG>Y</STRONG> values of the resolution. </summary>
            <returns> The resolution in the format "X, Y". </returns>
            <overloads> These methods return a string representation of the object. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainResolution.ToString(System.String)">
            <summary> Returns a formatted string representing the resolution. </summary>
            <returns> The formatted resolution string. </returns>
            <remarks> <para>The format string can contain the following values:</para>
            <para>{x} - This will be replaced by the resolution X value.</para>
            <para>{y} - This will be replaced by the resolution Y value.</para>
            <para>{u} - This will be replaced by the resolution units value.</para></remarks>
            <param name="format"> The format for the resolution.  See remarks below. </param>        
        </member>
        <member name="M:Atalasoft.Twain.TwainResolution.GetHashCode">
            <summary> Returns a value representing this object. </summary>
            <returns> A value representing this object. </returns>
        </member>
        <member name="T:Atalasoft.Twain.TwainIdentity">
            <summary> This class is used to identify your application to Twain and to provide information about each Twain
            compatible device found on the system. </summary>
            <seealso cref="T:System.ApplicationIdentity"/>
            <seealso cref="P:Atalasoft.Twain.Device.Identity"/>
            <remarks> This class can only be used with the <STRONG>IdentityCloseDS</STRONG>,
            <STRONG>IdentityGetDefault</STRONG>, <STRONG>IdentityGetFirst</STRONG>, <STRONG>IdentityGetNext</STRONG>,
            <STRONG>IdentityOpenDS</STRONG> and <STRONG>IdentityUserSelect</STRONG> <see cref="T:Atalasoft.Twain.TwainTriplet"/> values.
            </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainIdentity.#ctor">
            <summary> Creates a new instance of TwainIdentity. </summary>
            <overloads> These create new TwainIdentity objects for use with the <see cref="M:TwainController.SendCommand"/>
            method. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainIdentity.#ctor(System.String,System.String,System.String)">
            <summary> Creates a new instance of TwainIdentity specifying the product name, product family and manufacturer.
            </summary>
            <param name="productName"> The name of the product. </param>
            <param name="productFamily"> The family product name. </param>
            <param name="manufacturer"> The name of the manufacturer. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainIdentity.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,Atalasoft.Twain.LanguageType,Atalasoft.Twain.CountryCode,System.String)">
            <summary> Creates a new instance of TwainIdentity specifying the primary values of the object. </summary>
            <param name="productName"> The name of the product. </param>
            <param name="productFamily"> The family product name. </param>
            <param name="manufacturer"> The name of the manufacturer. </param>
            <param name="versionMajor"> The major version number of the product. </param>
            <param name="versionMinor"> The minor version number of the product. </param>
            <param name="language"> The language used by the product. </param>
            <param name="country"> The country settings for the product. </param>
            <param name="info"> An information description about the product. </param>
        </member>
        <member name="P:Atalasoft.Twain.TwainIdentity.DefaultIdentity">
            <summary> Gets the default DotTwain application identity. </summary>
            <value> The default DotTwain application identity. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainIdentity.ID">
            <summary> Gets the ID given to the application or device by TWAIN. </summary>
            <value> The ID given by TWAIN. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainIdentity.Manufacturer">
            <summary> Gets or sets the manufacturer name for the product. </summary>
            <remarks> The maximum length of this string is 32 characters. </remarks>
            <value> The manufacturer name for the product. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainIdentity.ProductFamily">
            <summary> Gets or sets the product line (family) the product belongs to. </summary>
            <remarks> The maximum length of this string is 32 characters. </remarks>
            <value> The product line (family) the product belongs to. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainIdentity.ProductName">
            <summary> Gets or sets the name of the product. </summary>
            <remarks> The maximum length of this string is 32 characters. </remarks>
            <value> The name of the product. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainIdentity.ProtocolMajor">
            <summary> Gets or sets the major version number of the Twain protocol supported by the application or device.
            </summary>
            <value> The major version number of the Twain protocol supported. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainIdentity.ProtocolMinor">
            <summary> Gets or sets the minor version number of the Twain protocol supported by the application or device.
            </summary>
            <value> The minor version number of the Twain protocol. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainIdentity.SupportedGroups">
            <summary> Gets or sets the data groups supported by the application or device. </summary>
            <value> The supported data groups. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainIdentity.Country">
            <summary> Gets or sets the country the product was produced in. </summary>
            <value> The country the product was produced in. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainIdentity.Info">
            <summary> Gets or sets an information description of the product. </summary>
            <remarks> The maximum length of this string is 32 characters. </remarks>
            <value> An information description of the product. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainIdentity.Language">
            <summary> Gets or sets the language used by the product. </summary>
            <value> The language used by the product. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainIdentity.VersionMajor">
            <summary> Gets or sets the major version of the product. </summary>
            <value> The major version of the product. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainIdentity.VersionMinor">
            <summary> Gets or sets the minor version of the product. </summary>
            <value> The minor version of the product. </value>
        </member>
        <member name="M:Atalasoft.Twain.TwainIdentity.IsSupportedCommand(Atalasoft.Twain.TwainTriplet)">
            <summary> Returns a value indicating whether the implementing class supports a specific <see cref="T:Atalasoft.Twain.TwainTriplet"/>
            command. </summary>
            <returns> True if the <see cref="T:Atalasoft.Twain.TwainTriplet"/> is <STRONG>IdentityCloseDS</STRONG>,
            <STRONG>IdentityGetDefault</STRONG>, <STRONG>IdentityGetFirst</STRONG>, <STRONG>IdentityGetNext</STRONG>,
            <STRONG>IdentityOpenDS</STRONG> or <STRONG>IdentityUserSelect</STRONG>. </returns>
            <param name="command"> A <see cref="T:Atalasoft.Twain.TwainTriplet"/> that will be sent to <see cref="M:TwainController.SendCommand"/>.
            </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainIdentity.GetStructurePointer(Atalasoft.Twain.TwainMemory)">
            <summary> Creates the memory pointer containing data sent to Twain. </summary>
            <returns> A global memory pointer containing data about the class.  This pointer is used by <see
            cref="M:TwainController.SendCommand"/> and sent to Twain for processing. </returns>
            <remarks> DotTwain will dispose of this memory pointer after calling <see
            cref="M:Atalasoft.Twain.ITwainDataStructure.ProcessResult(Atalasoft.Twain.TwainMemory)"/>. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainIdentity.ProcessResult(Atalasoft.Twain.TwainMemory)">
            <summary> Receives the data pointer created by <see cref="M:Atalasoft.Twain.ITwainDataStructure.GetStructurePointer(Atalasoft.Twain.TwainMemory)"/> after being
            processed by Twain. </summary>
            <remarks> This method is called after Twain has processed the data.  The memory will be disposed by DotTwain after
            this method call. </remarks>
        </member>
        <member name="T:Atalasoft.Twain.TwainCapability">
            <summary> This class is used with <see cref="M:TwainController.SendCommand" /> to get or set device capabilities.</summary>
            <example>
<code lang="CS" title="TwainCapabilityCS (C#)"><![CDATA[
TwainCapability cap = new TwainCapability(DeviceCapability.CAP_DEVICEONLINE);
TwainReturnCode ret = SendCommand(TwainTriplet.CapabilityGetCurrent, this._device, cap);
]]></code>

<code lang="VB" title="TwainCapabilityVB (Visual Basic)"><![CDATA[
Dim cap As TwainCapability = New TwainCapability(DeviceCapability.CAP_DEVICEONLINE) 
Dim ret As TwainReturnCode = SendCommand(TwainTriplet.CapabilityGetCurrent, Me._device,cap)
]]></code>
</example>
        </member>
        <member name="M:Atalasoft.Twain.TwainCapability.#ctor">
            <summary> Creates a new instance of TwainCapability. </summary>
            <example> TwainCapability Class </example>
        </member>
        <member name="M:Atalasoft.Twain.TwainCapability.#ctor(Atalasoft.Twain.DeviceCapability)">
            <overloads> Creates a TwainCapability object used to get or set device capabilities. </overloads>
            <summary> Creates a new instance of TwainCapability specifying the capability to work with. </summary>
            <example> TwainCapability Class </example>
            <param name="capability"> The capability to work with. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainCapability.#ctor(Atalasoft.Twain.DeviceCapability,Atalasoft.Twain.TwainContainer,System.IntPtr)">
            <summary> Creates a new instance of TwainCapability specifying the capability, container type and pointer to the
            data. </summary>
            <example> TwainCapability Class </example>
            <param name="capability"> The capability to work with. </param>
            <param name="containerType"> The container used to hold the data. </param>
            <param name="data"> A pointer to the capability data. </param>
        </member>
        <member name="P:Atalasoft.Twain.TwainCapability.Capability">
            <summary> Gets or sets the capability to work with. </summary>
            <value> The device capability, indicating the contents of the <see cref="P:Atalasoft.Twain.TwainCapability.Data"/>. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainCapability.ContainerType">
            <summary> Gets or sets the container used to hold the data. </summary>
            <value> The container used to hold the data. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainCapability.Data">
            <summary> Gets or sets the data pointer. </summary>
            <value> The pointer to the data. </value>
        </member>
        <member name="M:Atalasoft.Twain.TwainCapability.IsSupportedCommand(Atalasoft.Twain.TwainTriplet)">
            <summary> Returns a value indicating whether the implementing class supports a specific <see cref="T:Atalasoft.Twain.TwainTriplet"/>
            command. </summary>
            <returns> True if the <see cref="T:Atalasoft.Twain.TwainTriplet"/> is <STRONG>CapabilityGet</STRONG>,
            <STRONG>CapabilityGetCurrent</STRONG>, <STRONG>CapabilityGetDefault</STRONG>,
            <STRONG>CapabilityQuerySupport</STRONG>, <STRONG>CapabilityReset</STRONG> or <STRONG>CapabilitySet</STRONG>.
            </returns>
            <param name="command"> A <see cref="T:Atalasoft.Twain.TwainTriplet"/> that will be sent to <see cref="M:TwainController.SendCommand"/>.
            </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainCapability.GetStructurePointer(Atalasoft.Twain.TwainMemory)">
            <remarks> DotTwain will dispose of this memory pointer after calling <see
            cref="M:Atalasoft.Twain.ITwainDataStructure.ProcessResult(Atalasoft.Twain.TwainMemory)"/>. </remarks>
            <summary> Creates the memory pointer containing data sent to Twain. </summary>
            <returns> A global memory pointer containing data about the class.  This pointer is used by <see
            cref="M:TwainController.SendCommand"/> and sent to Twain for processing. </returns>
        </member>
        <member name="M:Atalasoft.Twain.TwainCapability.ProcessResult(Atalasoft.Twain.TwainMemory)">
            <summary> Receives the data pointer created by <see cref="M:Atalasoft.Twain.ITwainDataStructure.GetStructurePointer(Atalasoft.Twain.TwainMemory)"/> after being
            processed by Twain. </summary>
            <remarks> This method is called after Twain has processed the data.  The memory will be disposed by DotTwain after
            this method call. </remarks>
        </member>
        <member name="T:Atalasoft.Twain.TwainImageLayout">
            <summary> This class is used with the <see cref="M:TwainController.SendCommand"/> method to get or set image layout
            data. </summary>
            <remarks> This class can only be used with the <STRONG>ImageLayoutGet</STRONG>,
            <STRONG>ImageLayoutGetDefault</STRONG>, <STRONG>ImageLayoutReset</STRONG> and <STRONG>ImageLayoutSet</STRONG> <see
            cref="T:Atalasoft.Twain.TwainTriplet"/> values. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainImageLayout.#ctor">
            <summary> Creates a new instance of <see cref="T:Atalasoft.Twain.TwainImageLayout"/>. </summary>
            <overloads> Creates a TwainImageLayout class used to get or set the image layout used in an acquisition.
            </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainImageLayout.#ctor(System.Drawing.RectangleF)">
            <summary> Creates a new instance of <see cref="T:Atalasoft.Twain.TwainImageLayout"/> setting the Frame. </summary>
            <param name="frame"> The frame used in the layout. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainImageLayout.#ctor(System.Drawing.RectangleF,System.Int32,System.Int32,System.Int32)">
            <summary> Creates a new instance of <see cref="T:Atalasoft.Twain.TwainImageLayout"/> setting the frame, frame number, page number and
            document number. </summary>
            <param name="frame"> The frame used in the layout. </param>
            <param name="frameNumber"> The frame index number. </param>
            <param name="pageNumber"> The page number for this layout. </param>
            <param name="documentNumber"> The document number for this layout. </param>
        </member>
        <member name="P:Atalasoft.Twain.TwainImageLayout.Frame">
            <summary> Gets or sets the area of the device to scan. </summary>
            <value> The area of the device to scan. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainImageLayout.DocumentNumber">
            <summary> Gets or sets the document number for this layout. </summary>
            <value> The document number for this layout. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainImageLayout.PageNumber">
            <summary> Gets or sets the page number this layout refers to. </summary>
            <value> The page number for this layout. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainImageLayout.FrameNumber">
            <summary> Gets or sets the frame number when multiple frames are being set for acquisition. </summary>
            <value> The frame index number. </value>
        </member>
        <member name="M:Atalasoft.Twain.TwainImageLayout.IsSupportedCommand(Atalasoft.Twain.TwainTriplet)">
            <summary> Returns a value indicating whether the implementing class supports a specific <see cref="T:Atalasoft.Twain.TwainTriplet"/>
            command. </summary>
            <returns> True if the <see cref="T:Atalasoft.Twain.TwainTriplet"/> is <STRONG>ImageLayoutGet</STRONG>,
            <STRONG>ImageLayoutGetDefault</STRONG>, <STRONG>ImageLayoutReset</STRONG> or <STRONG>ImageLayoutSet</STRONG>.
            </returns>
            <param name="command"> A <see cref="T:Atalasoft.Twain.TwainTriplet"/> that will be sent to <see cref="M:TwainController.SendCommand"/>.
            </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainImageLayout.GetStructurePointer(Atalasoft.Twain.TwainMemory)">
            <summary> Creates the memory pointer containing data sent to Twain. </summary>
            <returns> A global memory pointer containing data about the class.  This pointer is used by <see
            cref="M:TwainController.SendCommand"/> and sent to Twain for processing. </returns>
            <remarks> DotTwain will dispose of this memory pointer after calling <see
            cref="M:Atalasoft.Twain.ITwainDataStructure.ProcessResult(Atalasoft.Twain.TwainMemory)"/>. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainImageLayout.ProcessResult(Atalasoft.Twain.TwainMemory)">
            <summary> Receives the data pointer created by <see cref="M:Atalasoft.Twain.ITwainDataStructure.GetStructurePointer(Atalasoft.Twain.TwainMemory)"/> after being
            processed by Twain. </summary>
            <remarks> This method is called after Twain has processed the data.  The memory will be disposed by DotTwain after
            this method call. </remarks>
        </member>
        <member name="T:Atalasoft.Twain.TwainUserInterface">
            <summary> This class is used with the <see cref="M:TwainController.SendCommand"/> method to display or hide the driver
            interface. </summary>
            <remarks> This class can only be used with the <STRONG>UserInterfaceDisableDS</STRONG>,
            <STRONG>UserInterfaceEnableDS</STRONG> and <STRONG>UserInterfaceEnableDSUIOnly</STRONG> <see cref="T:Atalasoft.Twain.TwainTriplet"/>
            values. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainUserInterface.#ctor">
            <summary> Creates a new instance of TwainUserInterface. </summary>
        </member>
        <member name="M:Atalasoft.Twain.TwainUserInterface.#ctor(System.Boolean,System.Boolean,System.IntPtr)">
            <summary> Creates a new instance of <see cref="T:Atalasoft.Twain.TwainUserInterface"/> setting the showUI, modalUI and parentHandle
            properties. </summary>
            <param name="showUI"> Indicates whether the driver interface is shown or hidden. </param>
            <param name="modalUI"> Requests that the driver show its interface modally. </param>
            <param name="parentHandle"> The parent window handle used by the device. </param>
        </member>
        <member name="P:Atalasoft.Twain.TwainUserInterface.ShowUI">
            <summary> Gets or sets a value indicating whether the interface is shown or hidden. </summary>
            <value> A value indicating whether the interface is shown or hidden. </value>
            <remarks> This is only a request.  Some devices are not able or willing to hide their interface. </remarks>
        </member>
        <member name="P:Atalasoft.Twain.TwainUserInterface.ModalUI">
            <summary> Gets or sets a value indicating whether the dialog is shown modal. </summary>
            <value> a value indicating whether the dialog is shown modal. </value>
            <remarks> This is only a request; the driver is free to ignore this value. </remarks>
        </member>
        <member name="P:Atalasoft.Twain.TwainUserInterface.ParentHandle">
            <summary> Gets or sets the window handle that will act as the parent for the dialog. </summary>
            <value> The parent window handle. </value>
            <remarks> This property must be set before sending the <see cref="T:Atalasoft.Twain.TwainUserInterface"/> to the <see
            cref="M:TwainController.SendCommand"/> method. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainUserInterface.IsSupportedCommand(Atalasoft.Twain.TwainTriplet)">
            <summary> Returns a value indicating whether the implementing class supports a specific <see cref="T:Atalasoft.Twain.TwainTriplet"/>
            command. </summary>
            <returns> True if the <see cref="T:Atalasoft.Twain.TwainTriplet"/> is <STRONG>UserInterfaceDisableDS</STRONG>,
            <STRONG>UserInterfaceEnableDS</STRONG>, <STRONG>UserInterfaceEnableDSUIOnly</STRONG>. </returns>
            <param name="command"> A <see cref="T:Atalasoft.Twain.TwainTriplet"/> that will be sent to <see cref="M:TwainController.SendCommand"/>.
            </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainUserInterface.GetStructurePointer(Atalasoft.Twain.TwainMemory)">
            <summary> Creates the memory pointer containing data sent to Twain. </summary>
            <returns> A global memory pointer containing data about the class.  This pointer is used by <see
            cref="M:TwainController.SendCommand"/> and sent to Twain for processing. </returns>
            <remarks> DotTwain will dispose of this memory pointer after calling <see
            cref="M:Atalasoft.Twain.ITwainDataStructure.ProcessResult(Atalasoft.Twain.TwainMemory)"/>. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainUserInterface.ProcessResult(Atalasoft.Twain.TwainMemory)">
            <summary> Receives the data pointer created by <see cref="M:Atalasoft.Twain.ITwainDataStructure.GetStructurePointer(Atalasoft.Twain.TwainMemory)"/> after being
            processed by Twain. </summary>
            <remarks> This method is called after Twain has processed the data.  The memory will be disposed by DotTwain after
            this method call. </remarks>
        </member>
        <member name="T:Atalasoft.Twain.TwainImageInfo">
            <summary> This class is used with <see cref="M:TwainController.SendCommand"/> to get information about the image about
            to be scanned or the one that was just acquired. </summary>
            <remarks> This class can only be used with the <STRONG>ImageInfoGet</STRONG> <see cref="T:Atalasoft.Twain.TwainTriplet"/>. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainImageInfo.#ctor">
            <summary> Creates a new instance of <STRONG>TwainImageInfo</STRONG>. </summary>
        </member>
        <member name="P:Atalasoft.Twain.TwainImageInfo.Resolution">
            <summary> Gets the resolution values for the transfer. </summary>
            <value> The resolution values used in the transfer. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainImageInfo.Size">
            <summary> Gets the size of the image. </summary>
            <value> The size of the image. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainImageInfo.SamplePerPixel">
            <summary> Gets the number of samples per pixel. </summary>
            <value> The number of samples per pixel. </value>
            <seealso cref="M:Atalasoft.Twain.TwainImageInfo.GetBitsPerSample"/>
        </member>
        <member name="P:Atalasoft.Twain.TwainImageInfo.Planar">
            <summary> Gets a value indicating whether the image data is transferred in planar format. </summary>
            <value> A value indicating whether the image data is transferred in planar format. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainImageInfo.PixelType">
            <summary> Gets the pixel type of the image. </summary>
            <value> The pixel type of the image. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainImageInfo.Compression">
            <summary> Gets the compression mode used in the data transfer. </summary>
            <value> The compression used in the data transfer. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainImageInfo.BitsPerPixel">
            <summary> Gets the number of bits per pixel for the image. </summary>
            <value> Bits per pixel of the image. </value>
        </member>
        <member name="M:Atalasoft.Twain.TwainImageInfo.GetBitsPerSample">
            <summary> Gets an array of values specifying the bits per sample for each image channel. </summary>
            <returns> An array of values containing the bits per sample for each image channel. </returns>
            <seealso cref="P:Atalasoft.Twain.TwainImageInfo.SamplePerPixel"/>
        </member>
        <member name="M:Atalasoft.Twain.TwainImageInfo.IsSupportedCommand(Atalasoft.Twain.TwainTriplet)">
            <summary> Returns a value indicating whether the implementing class supports a specific <see cref="T:Atalasoft.Twain.TwainTriplet"/>
            command. </summary>
            <returns> True if the <see cref="T:Atalasoft.Twain.TwainTriplet"/> is <STRONG>ImageInfoGet</STRONG>. </returns>
            <param name="command"> A <see cref="T:Atalasoft.Twain.TwainTriplet"/> that will be sent to <see cref="M:TwainController.SendCommand"/>.
            </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainImageInfo.GetStructurePointer(Atalasoft.Twain.TwainMemory)">
            <summary> Creates the memory pointer containing data sent to Twain. </summary>
            <returns> A global memory pointer containing data about the class.  This pointer is used by <see
            cref="M:TwainController.SendCommand"/> and sent to Twain for processing. </returns>
            <remarks> DotTwain will dispose of this memory pointer after calling <see
            cref="M:Atalasoft.Twain.ITwainDataStructure.ProcessResult(Atalasoft.Twain.TwainMemory)"/>. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainImageInfo.ProcessResult(Atalasoft.Twain.TwainMemory)">
            <summary> Receives the data pointer created by <see cref="M:Atalasoft.Twain.ITwainDataStructure.GetStructurePointer(Atalasoft.Twain.TwainMemory)"/> after being
            processed by Twain. </summary>
            <remarks> This method is called after Twain has processed the data.  The memory will be disposed by DotTwain after
            this method call. </remarks>
        </member>
        <member name="T:Atalasoft.Twain.TwainDeviceEvent">
            <summary> This class is used with <see cref="M:TwainController.SendCommand" /> to obtain information about a device
            event when the <see cref="T:Atalasoft.Twain.TwainEventMessage" /> retrieved from <see cref="M:Atalasoft.Twain.TwainController.ProcessEvent(System.Windows.Forms.Message,Atalasoft.Twain.TwainEventMessage@)" /> is
            <STRONG>MSG_DEVICEEVENT</STRONG>. </summary>
            <remarks> Use this with the <STRONG>DeviceEventGet</STRONG> <see cref="T:Atalasoft.Twain.TwainTriplet" /> to get detailed information
            about a device event during acquisition. </remarks>
            <example>
<code lang="CS" title="TwainDeviceEventCS (C#)"><![CDATA[
public bool PreFilterMessage(ref Message m)
{
    try
    {
        TwainEventMessage msg;
        TwainReturnCode ret = this.twain.ProcessEvent(m, out msg);

        if (ret == TwainReturnCode.TWRC_DSEVENT)
        {
            switch(msg)
            {
                case TwainEventMessage.MSG_DEVICEEVENT:
                    if (this.DeviceEvent != null)
                    {
                        // Find out what ever fired.
                        TwainDeviceEvent devEvent = new TwainDeviceEvent();
                        ret = this.twain.SendCommand(TwainTriplet.DeviceEventGet, this._id, devEvent);
                            
                        if ((ret & TwainReturnCode.TWRC_FAILURE) != TwainReturnCode.TWRC_FAILURE)
                        {
                            DeviceEventArgs e = null;
                            switch(devEvent.Event) 
                            {
                                .....
                            }
                        }
                    }
                    break;
            }
        }
    }
    catch
    {
    }
}
]]></code>

<code lang="VB" title="TwainDeviceEventVB (Visual Basic)"><![CDATA[
Public Function PreFilterMessage(ByRef m As Message) As Boolean
    Try
        Dim msg As TwainEventMessage
        Dim ret As TwainReturnCode =  Me.twain.ProcessEvent(m,out msg) 
 
        If ret = TwainReturnCode.TWRC_DSEVENT Then
            Select Case msg
                Case TwainEventMessage.MSG_DEVICEEVENT
                    If Not Me.DeviceEvent Is Nothing Then
                        ' Find out what ever fired.
                        Dim devEvent As TwainDeviceEvent =  New TwainDeviceEvent()
                        ret = Me.twain.SendCommand(TwainTriplet.DeviceEventGet, Me._id, devEvent)
 
                        If (ret & TwainReturnCode.TWRC_FAILURE) <> TwainReturnCode.TWRC_FAILURE Then
                            Dim e As DeviceEventArgs =  Nothing 
                            Select Case devEvent.Event
                                .....
                            End Select
                        End If
                    End If
                    Exit Function
            End Select
        End If
    End Try
End Function
]]></code>
</example>
            <example>
<code lang="CS" title="TwainDeviceEventCS (C#)"><![CDATA[
public bool PreFilterMessage(ref Message m)
{
    try
    {
        TwainEventMessage msg;
        TwainReturnCode ret = this.twain.ProcessEvent(m, out msg);

        if (ret == TwainReturnCode.TWRC_DSEVENT)
        {
            switch(msg)
            {
                case TwainEventMessage.MSG_DEVICEEVENT:
                    if (this.DeviceEvent != null)
                    {
                        // Find out what ever fired.
                        TwainDeviceEvent devEvent = new TwainDeviceEvent();
                        ret = this.twain.SendCommand(TwainTriplet.DeviceEventGet, this._id, devEvent);
                            
                        if ((ret & TwainReturnCode.TWRC_FAILURE) != TwainReturnCode.TWRC_FAILURE)
                        {
                            DeviceEventArgs e = null;
                            switch(devEvent.Event) 
                            {
                                .....
                            }
                        }
                    }
                    break;
            }
        }
    }
    catch
    {
    }
}
]]></code>

<code lang="VB" title="TwainDeviceEventVB (Visual Basic)"><![CDATA[
Public Function PreFilterMessage(ByRef m As Message) As Boolean
    Try
        Dim msg As TwainEventMessage
        Dim ret As TwainReturnCode =  Me.twain.ProcessEvent(m,out msg) 
 
        If ret = TwainReturnCode.TWRC_DSEVENT Then
            Select Case msg
                Case TwainEventMessage.MSG_DEVICEEVENT
                    If Not Me.DeviceEvent Is Nothing Then
                        ' Find out what ever fired.
                        Dim devEvent As TwainDeviceEvent =  New TwainDeviceEvent()
                        ret = Me.twain.SendCommand(TwainTriplet.DeviceEventGet, Me._id, devEvent)
 
                        If (ret & TwainReturnCode.TWRC_FAILURE) <> TwainReturnCode.TWRC_FAILURE Then
                            Dim e As DeviceEventArgs =  Nothing 
                            Select Case devEvent.Event
                                .....
                            End Select
                        End If
                    End If
                    Exit Function
            End Select
        End If
    End Try
End Function
]]></code>
</example>
        </member>
        <member name="M:Atalasoft.Twain.TwainDeviceEvent.#ctor">
            <summary> Creates a new instance of TwainDeviceEvent. </summary>
        </member>
        <member name="P:Atalasoft.Twain.TwainDeviceEvent.Event">
            <summary> The event that was raised. </summary>
            <remarks> Use this property to determine which properties of the <STRONG>TwainDeviceEvent</STRONG> have been set. 
            Some events do not set any properties, such as <STRONG>PaperJam</STRONG>, <STRONG>DeviceOffline</STRONG>,
            <STRONG>LampFailure</STRONG> and <STRONG>PaperDoubleFeed</STRONG>. </remarks>
            <example> TwainDeviceEvent Class </example>
        </member>
        <member name="P:Atalasoft.Twain.TwainDeviceEvent.Name">
            <summary> The name of the device. </summary>
            <example> TwainDeviceEvent Class </example>
        </member>
        <member name="P:Atalasoft.Twain.TwainDeviceEvent.BatteryMinutes">
            <summary> Minutes of battery power remaining. </summary>
            <remarks> This is used with the <STRONG>Battery</STRONG> event when the device supports the
            <STRONG>CAP_BATTERYMINUTES</STRONG> capability. </remarks>
            <example> TwainDeviceEvent Class </example>
        </member>
        <member name="P:Atalasoft.Twain.TwainDeviceEvent.BatteryPercentage">
            <summary> Percentage of battery power remaining. </summary>
            <remarks> This is used with the <STRONG>Battery</STRONG> event when the device supports the
            <STRONG>CAP_BATTERYPERCENTAGE</STRONG> capability. </remarks>
            <example> TwainDeviceEvent Class </example>
        </member>
        <member name="P:Atalasoft.Twain.TwainDeviceEvent.PowerSupply">
            <summary> Current power supply in use. </summary>
            <remarks> This is used with the <STRONG>PowerSupply</STRONG> event. </remarks>
            <example> TwainDeviceEvent Class </example>
        </member>
        <member name="P:Atalasoft.Twain.TwainDeviceEvent.XResolution">
            <summary> Current X Resolution. </summary>
            <remarks> This is used with the <STRONG>Resolution</STRONG> event. </remarks>
            <seealso cref="P:Atalasoft.Twain.TwainDeviceEvent.YResolution"/>
            <example> TwainDeviceEvent Class </example>
        </member>
        <member name="P:Atalasoft.Twain.TwainDeviceEvent.YResolution">
            <summary> Current Y Resolution. </summary>
            <remarks> This is used with the <STRONG>Resolution</STRONG> event. </remarks>
            <seealso cref="P:Atalasoft.Twain.TwainDeviceEvent.XResolution"/>
            <example> TwainDeviceEvent Class </example>
        </member>
        <member name="P:Atalasoft.Twain.TwainDeviceEvent.FlashUsed2">
            <summary> Current flash setting. </summary>
            <remarks> This is used with the <STRONG>Flash</STRONG> event. </remarks>
            <example> TwainDeviceEvent Class </example>
        </member>
        <member name="P:Atalasoft.Twain.TwainDeviceEvent.AutomaticCapture">
            <summary> Number of images camera will capture. </summary>
            <remarks> This is used with the <STRONG>AutomaticCapture</STRONG> event. </remarks>
            <seealso cref="T:Atalasoft.Twain.DeviceEventFlags"/>
            <seealso cref="P:Atalasoft.Twain.TwainDeviceEvent.TimeBeforeFirstCapture"/>
            <seealso cref="P:Atalasoft.Twain.TwainDeviceEvent.TimeBetweenCaptures"/>
            <example> TwainDeviceEvent Class </example>
        </member>
        <member name="P:Atalasoft.Twain.TwainDeviceEvent.TimeBeforeFirstCapture">
            <summary> Number of seconds before first capture. </summary>
            <remarks> This is used with the <STRONG>AutomaticCapture</STRONG> event. </remarks>
            <seealso cref="T:Atalasoft.Twain.DeviceEventFlags"/>
            <seealso cref="P:Atalasoft.Twain.TwainDeviceEvent.AutomaticCapture"/>
            <seealso cref="P:Atalasoft.Twain.TwainDeviceEvent.TimeBetweenCaptures"/>
            <example> TwainDeviceEvent Class </example>
        </member>
        <member name="P:Atalasoft.Twain.TwainDeviceEvent.TimeBetweenCaptures">
            <summary> Hundredths of a second between captures. </summary>
            <remarks> This is used with the <STRONG>AutomaticCapture</STRONG> event. </remarks>
            <seealso cref="T:Atalasoft.Twain.DeviceEventFlags"/>
            <seealso cref="P:Atalasoft.Twain.TwainDeviceEvent.AutomaticCapture"/>
            <seealso cref="P:Atalasoft.Twain.TwainDeviceEvent.TimeBeforeFirstCapture"/>
            <example> TwainDeviceEvent Class </example>
        </member>
        <member name="M:Atalasoft.Twain.TwainDeviceEvent.IsSupportedCommand(Atalasoft.Twain.TwainTriplet)">
            <summary> Returns a value indicating whether the implementing class supports a specific <see cref="T:Atalasoft.Twain.TwainTriplet"/>
            command. </summary>
            <returns> True if the <see cref="T:Atalasoft.Twain.TwainTriplet"/> is <STRONG>DeviceEventGet</STRONG>. </returns>
            <param name="command"> A <see cref="T:Atalasoft.Twain.TwainTriplet"/> that will be sent to <see cref="M:TwainController.SendCommand"/>.
            </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainDeviceEvent.GetStructurePointer(Atalasoft.Twain.TwainMemory)">
            <summary> Creates the memory pointer containing data sent to Twain. </summary>
            <returns> A global memory pointer containing data about the class.  This pointer is used by <see
            cref="M:TwainController.SendCommand"/> and sent to Twain for processing. </returns>
            <remarks> DotTwain will dispose of this memory pointer after calling <see
            cref="M:Atalasoft.Twain.ITwainDataStructure.ProcessResult(Atalasoft.Twain.TwainMemory)"/>. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainDeviceEvent.ProcessResult(Atalasoft.Twain.TwainMemory)">
            <summary> Receives the data pointer created by <see cref="M:Atalasoft.Twain.ITwainDataStructure.GetStructurePointer(Atalasoft.Twain.TwainMemory)"/> after being
            processed by Twain. </summary>
            <remarks> This method is called after Twain has processed the data.  The memory will be disposed by DotTwain after
            this method call. </remarks>
        </member>
        <member name="T:Atalasoft.Twain.TwainHandle">
            <summary> This class is used with <see cref="M:TwainController.SendCommand"/> to pass a handle to Twain. </summary>
            <remarks> This class can only be used with the <STRONG>AudioNativeXferGet</STRONG> <see cref="T:Atalasoft.Twain.TwainTriplet"/> value.
            </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainHandle.#ctor(System.IntPtr)">
            <summary> Creates a new instance of TwainHandle. </summary>
            <param name="handle"> The handle being passed into TWAIN. </param>
        </member>
        <member name="P:Atalasoft.Twain.TwainHandle.Handle">
            <summary> The handle to be passed to Twain. </summary>
            <value> The handle being passed to Twain. </value>
        </member>
        <member name="M:Atalasoft.Twain.TwainHandle.GetStructurePointer(Atalasoft.Twain.TwainMemory)">
            <summary> Creates the memory pointer containing data sent to Twain. </summary>
            <returns> A global memory pointer containing data about the class.  This pointer is used by <see
            cref="M:TwainController.SendCommand"/> and sent to Twain for processing. </returns>
            <remarks> DotTwain will dispose of this memory pointer after calling <see
            cref="M:Atalasoft.Twain.ITwainDataStructure.ProcessResult(Atalasoft.Twain.TwainMemory)"/>. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainHandle.ProcessResult(Atalasoft.Twain.TwainMemory)">
            <summary> Receives the data pointer created by <see cref="M:Atalasoft.Twain.ITwainDataStructure.GetStructurePointer(Atalasoft.Twain.TwainMemory)"/> after being
            processed by Twain. </summary>
            <remarks> This method is called after Twain has processed the data.  The memory will be disposed by DotTwain after
            this method call. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainHandle.IsSupportedCommand(Atalasoft.Twain.TwainTriplet)">
            <summary> Returns a value indicating whether the implementing class supports a specific <see cref="T:Atalasoft.Twain.TwainTriplet"/>
            command. </summary>
            <returns> True if the <see cref="T:Atalasoft.Twain.TwainTriplet"/> is <STRONG>AudioNativeXferGet</STRONG>. </returns>
            <param name="command"> A <see cref="T:Atalasoft.Twain.TwainTriplet"/> that will be sent to <see cref="M:TwainController.SendCommand"/>.
            </param>
        </member>
        <member name="T:Atalasoft.Twain.TwainCustomData">
            <summary> This class is used with <see cref="M:TwainController.SendCommand"/> to query the device for its current
            settings or to restore previously saved settings. </summary>
            <remarks> <para>The device must support the <STRONG>CAP_CUSTOMDSDATA</STRONG> capability to use this class.</para>
            <para>This class is used by the <see cref="M:Atalasoft.Twain.Device.LoadParameters(System.IO.Stream)"/> and <see cref="M:Atalasoft.Twain.Device.SaveParameters(System.IO.Stream)"/> methods
            of the Device object.</para> </remarks>
            <seealso cref="M:Atalasoft.Twain.Device.LoadParameters(System.IO.Stream)"/>
            <seealso cref="M:Atalasoft.Twain.Device.SaveParameters(System.IO.Stream)"/>
        </member>
        <member name="M:Atalasoft.Twain.TwainCustomData.#ctor">
            <summary> Creates a new instance of <STRONG>TwainCustomData</STRONG>. </summary>
            <overloads> Create a <STRONG>TwainCustomData</STRONG> object. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainCustomData.#ctor(System.Byte[])">
            <summary> Creates a new instance of <STRONG>TwainCustomData</STRONG> specifying the data being sent to the device.
            </summary>
            <param name="data"> A byte array of data being sent to the device. </param>
        </member>
        <member name="P:Atalasoft.Twain.TwainCustomData.Data">
            <summary> Gets an array of bytes containing the data. </summary>
            <value> The data being sent to or received from the device. </value>
        </member>
        <member name="M:Atalasoft.Twain.TwainCustomData.GetStructurePointer(Atalasoft.Twain.TwainMemory)">
            <remarks> DotTwain will dispose of this memory pointer after calling <see
            cref="M:Atalasoft.Twain.ITwainDataStructure.ProcessResult(Atalasoft.Twain.TwainMemory)"/>. </remarks>
            <summary> Creates the memory pointer containing data sent to Twain. </summary>
            <returns> A global memory pointer containing data about the class.  This pointer is used by <see
            cref="M:TwainController.SendCommand"/> and sent to Twain for processing. </returns>
        </member>
        <member name="M:Atalasoft.Twain.TwainCustomData.ProcessResult(Atalasoft.Twain.TwainMemory)">
            <summary> Receives the data pointer created by <see cref="M:Atalasoft.Twain.ITwainDataStructure.GetStructurePointer(Atalasoft.Twain.TwainMemory)"/> after being
            processed by Twain. </summary>
            <remarks> This method is called after Twain has processed the data.  The memory will be disposed by DotTwain after
            this method call. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainCustomData.IsSupportedCommand(Atalasoft.Twain.TwainTriplet)">
            <summary> Returns a value indicating whether the implementing class supports a specific <see cref="T:Atalasoft.Twain.TwainTriplet"/>
            command. </summary>
            <returns> True if the <see cref="T:Atalasoft.Twain.TwainTriplet"/> is <STRONG>CustomDSDataGet</STRONG> or
            <STRONG>CustomDSDataSet</STRONG>. </returns>
            <param name="command"> A <see cref="T:Atalasoft.Twain.TwainTriplet"/> that will be sent to <see cref="M:TwainController.SendCommand"/>.
            </param>
        </member>
        <member name="T:Atalasoft.Twain.TwainEvent">
            <summary> This class is used with <see cref="M:TwainController.SendCommand"/> to process Windows messages during an
            acquisition. </summary>
            <remarks> This class can only be used with the <STRONG>EventProcessEvent</STRONG> <see cref="T:Atalasoft.Twain.TwainTriplet"/>.
            </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainEvent.#ctor(System.IntPtr)">
            <summary> Creates a new instance of TwainEvent specifying the event message pointer. </summary>
            <param name="eventMessage"> A pointer to the event message. </param>
        </member>
        <member name="P:Atalasoft.Twain.TwainEvent.EventMessage">
            <summary> Gets a pointer to the event message. </summary>
            <value> A pointer to a Windows MSG object. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainEvent.TwainMessage">
            <summary> Gets the value returned from the device for this message. </summary>
            <value> The value returned from the device. </value>
        </member>
        <member name="M:Atalasoft.Twain.TwainEvent.GetStructurePointer(Atalasoft.Twain.TwainMemory)">
            <summary> Creates the memory pointer containing data sent to Twain. </summary>
            <returns> A global memory pointer containing data about the class.  This pointer is used by <see
            cref="M:TwainController.SendCommand"/> and sent to Twain for processing. </returns>
            <remarks> DotTwain will dispose of this memory pointer after calling <see
            cref="M:Atalasoft.Twain.ITwainDataStructure.ProcessResult(Atalasoft.Twain.TwainMemory)"/>. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainEvent.ProcessResult(Atalasoft.Twain.TwainMemory)">
            <summary> Receives the data pointer created by <see cref="M:Atalasoft.Twain.ITwainDataStructure.GetStructurePointer(Atalasoft.Twain.TwainMemory)"/> after being
            processed by Twain. </summary>
            <remarks> This method is called after Twain has processed the data.  The memory will be disposed by DotTwain after
            this method call. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainEvent.IsSupportedCommand(Atalasoft.Twain.TwainTriplet)">
            <summary> Returns a value indicating whether the implementing class supports a specific <see cref="T:Atalasoft.Twain.TwainTriplet"/>
            command. </summary>
            <returns> True if the <see cref="T:Atalasoft.Twain.TwainTriplet"/> is <STRONG>EventProcessEvent</STRONG>. </returns>
            <param name="command"> A <see cref="T:Atalasoft.Twain.TwainTriplet"/> that will be sent to <see cref="M:TwainController.SendCommand"/>.
            </param>
        </member>
        <member name="T:Atalasoft.Twain.TwainFileSystem">
            <summary> This class is used with SendCommand to control the file system of a Twain compatible camera. </summary>
            <remarks> This class can only be used with the <STRONG>FileSystemAutomaticCaptureDirectory</STRONG>,
            <STRONG>FileSystemChangeDirectory</STRONG>, <STRONG>FileSystemCopy</STRONG>,
            <STRONG>FileSystemCreateDirectory</STRONG>, <STRONG>FileSystemDelete</STRONG>,
            <STRONG>FileSystemFormatMedia</STRONG>, <STRONG>FileSystemGetClose</STRONG>,
            <STRONG>FileSystemGetFirstFile</STRONG>, <STRONG>FileSystemGetInfo</STRONG>, <STRONG>FileSystemGetNextFile</STRONG>
            and <STRONG>FileSystemRename</STRONG> <see cref="T:Atalasoft.Twain.TwainTriplet"/> values. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainFileSystem.#ctor">
            <summary> Creates a new instance of TwainFileSystem. </summary>
        </member>
        <member name="P:Atalasoft.Twain.TwainFileSystem.InputName">
            <summary> Gets or sets the filename to work with. </summary>
            <value> The filename to work with. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainFileSystem.OutputName">
            <summary> Gets or sets the output filename. </summary>
            <value> The output filename. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainFileSystem.Recursive">
            <summary> Gets or sets a value indicating whether an action is recursive. </summary>
            <value> A value indicating whether an action is recursive. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainFileSystem.FileType">
            <summary> Gets or sets the type of file to work with. </summary>
            <value> The type of file to work with. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainFileSystem.Size">
            <summary> Gets the size of the file in bytes. </summary>
            <value> The size in bytes. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainFileSystem.CreateTimeDate">
            <summary> Gets the image creation time. </summary>
            <value> The image creation time. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainFileSystem.ModifiedTimeDate">
            <summary> Gets the modified date of the file. </summary>
            <value> The modified date. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainFileSystem.FreeSpace">
            <summary> Gets the amount of free space in the device. </summary>
            <value> The amount of free space. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainFileSystem.NewImageSize">
            <summary> Gets the size of the image. </summary>
            <value> The size of the image. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainFileSystem.NumberOfFiles">
            <summary> Gets the number of files in the current directory. </summary>
            <value> The number of files in the current directory. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainFileSystem.NumberOfSnippets">
            <summary> The number of audio snippets in the current directory. </summary>
            <value> The number of audio snippets in the current directory. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainFileSystem.DeviceGroupMask">
            <summary> Gets or sets the device groups </summary>
            <value> The device group mask used. </value>
        </member>
        <member name="M:Atalasoft.Twain.TwainFileSystem.GetStructurePointer(Atalasoft.Twain.TwainMemory)">
            <summary> Creates the memory pointer containing data sent to Twain. </summary>
            <returns> A global memory pointer containing data about the class.  This pointer is used by <see
            cref="M:TwainController.SendCommand"/> and sent to Twain for processing. </returns>
            <remarks> DotTwain will dispose of this memory pointer after calling <see
            cref="M:Atalasoft.Twain.ITwainDataStructure.ProcessResult(Atalasoft.Twain.TwainMemory)"/>. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainFileSystem.ProcessResult(Atalasoft.Twain.TwainMemory)">
            <summary> Receives the data pointer created by <see cref="M:Atalasoft.Twain.ITwainDataStructure.GetStructurePointer(Atalasoft.Twain.TwainMemory)"/> after being
            processed by Twain. </summary>
            <remarks> This method is called after Twain has processed the data.  The memory will be disposed by DotTwain after
            this method call. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainFileSystem.IsSupportedCommand(Atalasoft.Twain.TwainTriplet)">
            <summary> Returns a value indicating whether the implementing class supports a specific <see cref="T:Atalasoft.Twain.TwainTriplet"/>
            command. </summary>
            <returns> True if the <see cref="T:Atalasoft.Twain.TwainTriplet"/> is <STRONG>FileSystemAutomaticCaptureDirectory</STRONG>,
            <STRONG>FileSystemChangeDirectory</STRONG>, <STRONG>FileSystemCopy</STRONG>,
            <STRONG>FileSystemCreateDirectory</STRONG>, <STRONG>FileSystemDelete</STRONG>,
            <STRONG>FileSystemFormatMedia</STRONG>, <STRONG>FileSystemGetClose</STRONG>,
            <STRONG>FileSystemGetFirstFile</STRONG>, <STRONG>FileSystemGetInfo</STRONG>, <STRONG>FileSystemGetNextFile</STRONG>
            or <STRONG>FileSystemRename</STRONG>. </returns>
            <param name="command"> A <see cref="T:Atalasoft.Twain.TwainTriplet"/> that will be sent to <see cref="M:TwainController.SendCommand"/>.
            </param>
        </member>
        <member name="T:Atalasoft.Twain.TwainExtendedImageInformation">
            <summary> This class is used with <see cref="M:TwainController.SendCommand"/> to get extended image information from
            the device. </summary>
            <remarks> This class can only be used with the <STRONG>ExtImageInfoGet</STRONG> <see cref="T:Atalasoft.Twain.TwainTriplet"/>.
            </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainExtendedImageInformation.#ctor(Atalasoft.Twain.TwainExtendedImageInfoID[])">
            <summary> Creates a new instance of TwainExtendedImageInformation. </summary>
            <param name="info"> An array of information ID values to retrieve. </param>
        </member>
        <member name="P:Atalasoft.Twain.TwainExtendedImageInformation.Items">
            <summary> Gets a Hashtable containing the information retrieved from the device. </summary>
            <value> A Hashtable containing the information. </value>
            <remarks> The <see cref="T:Atalasoft.Twain.TwainExtendedImageInfoID"/> values passed into the constructor are used as the keys in the
            Hashtable. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainExtendedImageInformation.GetStructurePointer(Atalasoft.Twain.TwainMemory)">
            <summary> Creates the memory pointer containing data sent to Twain. </summary>
            <returns> A global memory pointer containing data about the class.  This pointer is used by <see
            cref="M:TwainController.SendCommand"/> and sent to Twain for processing. </returns>
            <remarks> DotTwain will dispose of this memory pointer after calling <see
            cref="M:Atalasoft.Twain.ITwainDataStructure.ProcessResult(Atalasoft.Twain.TwainMemory)"/>. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainExtendedImageInformation.ProcessResult(Atalasoft.Twain.TwainMemory)">
            <summary> Receives the data pointer created by <see cref="M:Atalasoft.Twain.ITwainDataStructure.GetStructurePointer(Atalasoft.Twain.TwainMemory)"/> after being
            processed by Twain. </summary>
            <remarks> This method is called after Twain has processed the data.  The memory will be disposed by DotTwain after
            this method call. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainExtendedImageInformation.IsSupportedCommand(Atalasoft.Twain.TwainTriplet)">
            <summary> Returns a value indicating whether the implementing class supports a specific <see cref="T:Atalasoft.Twain.TwainTriplet"/>
            command. </summary>
            <returns> True if the <see cref="T:Atalasoft.Twain.TwainTriplet"/> is <STRONG>ExtImageInfoGet</STRONG>. </returns>
            <param name="command"> A <see cref="T:Atalasoft.Twain.TwainTriplet"/> that will be sent to <see cref="M:TwainController.SendCommand"/>.
            </param>
        </member>
        <member name="F:Atalasoft.Twain.ThreadedForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Atalasoft.Twain.ThreadedForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Atalasoft.Twain.ThreadedForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Atalasoft.Twain.TwainBarCode">
            <summary> This class provides access to barcode and patchcode specific methods. </summary>
        </member>
        <member name="P:Atalasoft.Twain.TwainBarCode.DetectionEnabled">
            <summary> Gets or sets a value indicating whether the barcode or patchcode detection is enabled for the device.
            </summary>
            <value> A value indicating if barcode or patchcode detection is enabled. </value>
            <remarks> This property must be set to true before getting or setting any other properties or methods. </remarks>
        </member>
        <member name="P:Atalasoft.Twain.TwainBarCode.MaximumRetries">
            <summary> Gets or sets the maximum number of times the scanner will search for a barcode or patchcode before moving
            on. </summary>
            <value> The maximum number of retries when searching for codes. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainBarCode.MaximumSearchPriorities">
            <summary> Gets or sets the maximum number of search priorities to use when scanning for barcodes and patchcodes.
            </summary>
            <value> The maximum number of search priorities. </value>
            <seealso cref="M:Atalasoft.Twain.TwainBarCode.GetSearchPriorities"/>
            <seealso cref="M:Atalasoft.Twain.TwainBarCode.SetSearchPriorities(Atalasoft.Twain.BarCodeType[])"/>
        </member>
        <member name="P:Atalasoft.Twain.TwainBarCode.SearchMode">
            <summary> Gets or sets the search mode to use when scanning for barcodes and patchcodes. </summary>
            <value> The search mode to use. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainBarCode.Timeout">
            <summary> Gets or sets the number of seconds the device will wait per page until it moves on. </summary>
            <value> The number of seconds before the device will move on to the next page. </value>
            <remarks> Setting this property will keep the device from taking too long when scanning for barcodes and patchcodes.
            </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainBarCode.GetSearchPriorities">
            <summary> Returns an the search priorities used by the device. </summary>
            <returns> An array of BarCodeType used as search priorities. </returns>
        </member>
        <member name="M:Atalasoft.Twain.TwainBarCode.SetSearchPriorities(Atalasoft.Twain.BarCodeType[])">
            <summary> Sets the search priorities the device should use when scanning for barcodes and patchcodes. </summary>
            <param name="priorities"> An array of BarCodeType values to search for.  The first item in the array is given higher
            priority than the last item. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainBarCode.GetSearchModes">
            <summary> Returns the barcode search modes supported by the device. </summary>
            <returns> An array of BarCodeSearchMode values supported by the device. </returns>
        </member>
        <member name="T:Atalasoft.Twain.TwainController">
            <summary> The <STRONG>TwainController</STRONG> class allows for lower level access to Twain, providing greater
            control over the acquisition and access to custom device properties. </summary>
        </member>
        <member name="E:Atalasoft.Twain.TwainController.TwainDataTransfer">
            <example>
<code lang="CS" title="DataTransferCS (C#)"><![CDATA[
private void acquisition_TwainDataTransfer(object sender, TwainDataTransferArgs e)
{
    // Process the data instead of letting DotTwain do it.
    e.DataHandled = true;

    // ... processing ...

    // Free the memory.
    System.Runtime.InteropServices.Marshal.FreeHGlobal(e.Data);
}
]]></code>

<code lang="VB" title="DataTransferVB (Visual Basic)"><![CDATA[
Private  Sub acquisition_TwainDataTransfer(ByVal sender As Object, ByVal e As TwainDataTransferArgs)
    ' Process the data instead of letting DotTwain do it.
    e.DataHandled = True
 
    ' ... processing ...
 
    ' Free the memory.
    System.Runtime.InteropServices.Marshal.FreeHGlobal(e.Data)
End Sub
]]></code>
</example>
            <summary> This event fires after the data has been transferred but before it has been processed by DotTwain.
            </summary>
            <remarks> This event allows for processing of data DotTwain does not support, such as audio or unique image formats.
            If this data should not be processed by DotTwain, set the <see cref="P:Atalasoft.Twain.TwainDataTransferEventArgs.DataHandled" /> property
            of the <see cref="T:Atalasoft.Twain.TwainDataTransferEventArgs" /> to true. </remarks>
        </member>
        <member name="E:Atalasoft.Twain.TwainController.ImageAcquired">
            <summary> This event will fire for each image acquired. </summary>
            <remarks> <para>All pending image acquisitions can be cancelled by setting the <see cref="P:Atalasoft.Twain.AcquireEventArgs.CancelPending" /> property of the <see cref="T:Atalasoft.Twain.AcquireEventArgs" /> to true. </para>
            <para>To transfer the returned <STRONG>Bitmap</STRONG> to an <STRONG>AtalaImage</STRONG> when integrating with
            DotImage, use the <STRONG>AtalaImage.FromBitmap</STRONG> method.</para>
            <para>When scanning multiple pages at once, this method can be used to compose a multipage image by invoking the
            <STRONG>Images.Add</STRONG> method of the <STRONG>Workspace</STRONG> object in DotImage.</para> </remarks>
            <example>
<code lang="CS" title="ImageAcquiredCS2 (C#)"><![CDATA[
private void acquisition_ImageAcquired(object sender, Atalasoft.Twain.AcquireEventArgs e)
{
    if (e.Image != null)
        this.pictureBox1.Image = e.Image;
    else if (e.FileName != null && File.Exists(e.FileName))
        this.pictureBox1.Image = Image.FromFile(e.FileName);
}
]]></code>

<code lang="VB" title="ImageAcquiredVB2 (Visual Basic)"><![CDATA[
Private  Sub acquisition_ImageAcquired(ByVal sender As Object, ByVal e As Atalasoft.Twain.AcquireEventArgs)
    If Not e.Image Is Nothing Then
        Me.pictureBox1.Image = e.Image
    Else If e.FileName <> Nothing And File.Exists(e.FileName) Then 
        Me.pictureBox1.Image = Image.FromFile(e.FileName)
    End If
End Sub
]]></code>
</example>
            <example>
<code lang="CS" title="ImageAcquiredCS2 (C#)"><![CDATA[
private void acquisition_ImageAcquired(object sender, Atalasoft.Twain.AcquireEventArgs e)
{
    if (e.Image != null)
        this.pictureBox1.Image = e.Image;
    else if (e.FileName != null && File.Exists(e.FileName))
        this.pictureBox1.Image = Image.FromFile(e.FileName);
}
]]></code>

<code lang="VB" title="ImageAcquiredVB2 (Visual Basic)"><![CDATA[
Private  Sub acquisition_ImageAcquired(ByVal sender As Object, ByVal e As Atalasoft.Twain.AcquireEventArgs)
    If Not e.Image Is Nothing Then
        Me.pictureBox1.Image = e.Image
    Else If e.FileName <> Nothing And File.Exists(e.FileName) Then 
        Me.pictureBox1.Image = Image.FromFile(e.FileName)
    End If
End Sub
]]></code>
</example>
        </member>
        <member name="E:Atalasoft.Twain.TwainController.AcquireFinished">
            <example>
<code lang="CS" title="AcquireFinishedCS2 (C#)"><![CDATA[
private void acquisition_AcquireFinished(object sender, System.EventArgs e)
{
    // This is the only event where you should call the Close method.
    // AcquireFinished fires after all images have been acquired.
    // Note that you can call Close anytime if you need to cancel
    // any pending transfers and do a quick shutdown of your application.
    this.device.Close();
}
]]></code>

<code lang="VB" title="AcquireFinishedVB2 (Visual Basic)"><![CDATA[
Private  Sub acquisition_AcquireFinished(ByVal sender As Object, ByVal e As System.EventArgs)
    ' This is the only event where you should call the Close method.
    ' AcquireFinished fires after all images have been acquired.
    ' Note that you can call Close anytime if you need to cancel
    ' any pending transfers and do a quick shutdown of your application.
    Me.device.Close()
End Sub
]]></code>
</example>
            <example>
<code lang="CS" title="AcquireFinishedCS2 (C#)"><![CDATA[
private void acquisition_AcquireFinished(object sender, System.EventArgs e)
{
    // This is the only event where you should call the Close method.
    // AcquireFinished fires after all images have been acquired.
    // Note that you can call Close anytime if you need to cancel
    // any pending transfers and do a quick shutdown of your application.
    this.device.Close();
}
]]></code>

<code lang="VB" title="AcquireFinishedVB2 (Visual Basic)"><![CDATA[
Private  Sub acquisition_AcquireFinished(ByVal sender As Object, ByVal e As System.EventArgs)
    ' This is the only event where you should call the Close method.
    ' AcquireFinished fires after all images have been acquired.
    ' Note that you can call Close anytime if you need to cancel
    ' any pending transfers and do a quick shutdown of your application.
    Me.device.Close()
End Sub
]]></code>
</example>
            <summary> This event will fire when all of the images have been acquired.  This is useful when a document feeder is
            used. </summary>
        </member>
        <member name="E:Atalasoft.Twain.TwainController.BeforeTwainDataTransfer">
            <summary> This event will fire before the data is transferred from the device, allow the transfer to be canceled.
            </summary>
            <remarks> The image information may not be exactly what the resulting image will be, since a device doesn't know for
            sure until it has performed the scan. </remarks>
            <example>
<code lang="CS" title="BeforeAcquireCS (C#)"><![CDATA[
private void acquisition_BeforeTwainDataTransfer(object sender, TwainDataImageInfoArgs e)
{
    // Only scan 1-bit images.
    if (e.ImageInfo.PixelType != ImagePixelType.BlackAndWhite)
        e.Cancel = true;
}
]]></code>

<code lang="VB" title="BeforeAcquireVB (Visual Basic)"><![CDATA[
Private  Sub acquisition_BeforeTwainDataTransfer(ByVal sender As Object, ByVal e As TwainDataImageInfoArgs)
    ' Only scan 1-bit images.
    If e.ImageInfo.PixelType <> ImagePixelType.BlackAndWhite Then
        e.Cancel = True
    End If
End Sub
]]></code>
</example>
            <example>
<code lang="CS" title="BeforeAcquireCS (C#)"><![CDATA[
private void acquisition_BeforeTwainDataTransfer(object sender, TwainDataImageInfoArgs e)
{
    // Only scan 1-bit images.
    if (e.ImageInfo.PixelType != ImagePixelType.BlackAndWhite)
        e.Cancel = true;
}
]]></code>

<code lang="VB" title="BeforeAcquireVB (Visual Basic)"><![CDATA[
Private  Sub acquisition_BeforeTwainDataTransfer(ByVal sender As Object, ByVal e As TwainDataImageInfoArgs)
    ' Only scan 1-bit images.
    If e.ImageInfo.PixelType <> ImagePixelType.BlackAndWhite Then
        e.Cancel = True
    End If
End Sub
]]></code>
</example>
        </member>
        <member name="E:Atalasoft.Twain.TwainController.AcquireCanceled">
            <summary> This event will fire if the user has canceled the acquisition. </summary>
            <example>
<code lang="CS" title="AcquireCanceledCS2 (C#)"><![CDATA[
private void acquisition_AcquireCanceled(object sender, System.EventArgs e)
{
    this.device.Close();
    MessageBox.Show(this, "Acquisition was canceled.");
}
]]></code>

<code lang="VB" title="AcquireCanceledVB2 (Visual Basic)"><![CDATA[
Private  Sub acquisition_AcquireCanceled(ByVal sender As Object, ByVal e As System.EventArgs)
    Me.device.Close()
    MessageBox.Show(Me, "Acquisition was canceled.")
End Sub
]]></code>
</example>
            <example>
<code lang="CS" title="AcquireCanceledCS2 (C#)"><![CDATA[
private void acquisition_AcquireCanceled(object sender, System.EventArgs e)
{
    this.device.Close();
    MessageBox.Show(this, "Acquisition was canceled.");
}
]]></code>

<code lang="VB" title="AcquireCanceledVB2 (Visual Basic)"><![CDATA[
Private  Sub acquisition_AcquireCanceled(ByVal sender As Object, ByVal e As System.EventArgs)
    Me.device.Close()
    MessageBox.Show(Me, "Acquisition was canceled.")
End Sub
]]></code>
</example>
        </member>
        <member name="E:Atalasoft.Twain.TwainController.FileTransfer">
            <summary> This event will fire just before acquiring an image directly to file.  You must fill in the <see cref="P:Atalasoft.Twain.FileTransferEventArgs.FileName" /> property of the <see cref="T:Atalasoft.Twain.FileTransferEventArgs" /> object. </summary>
            <remarks> You can cancel the acquisition by setting the <see cref="P:Atalasoft.Twain.FileTransferEventArgs.CancelPending" /> property
            of the <see cref="T:Atalasoft.Twain.FileTransferEventArgs" /> to true. </remarks>
            <example>
<code lang="CS" title="ScanToFileCS (C#)"><![CDATA[
// Create an instance of Acquisition and set the FileTransfer event.
Acquisition acquisition = new Acquisition(this);
acquisition.FileTransfer += new FileTransferEventHandler(OnFileTransfer);

// We use the AcquireFinished event to know when to close the device.
acquisition.AcquireFinished += new System.EventHandler(OnAcquireFinished);

// The call is asynchronous, so hold onto the device object.
Device dev = null;

// A count variable used to create unique filenames.
int fileCount = 0;

private void AcquireImageToFile()
{
    // We are going to acquire from the default device.
    this.dev = this.acquisition.Devices.Default;
    
    // You have to open the device before you can get property values.
    this.dev.Open();
    
    // See if the device supports the TIFF format.
    SourceFileFormats[] formats = this.dev.GetSupportedImageFormats();
    bool canSaveToFile = false;
    
    foreach(SourceFileFormats format in formats) {
        if (format == SourceFileFormats.Tiff)
        {
            // Tell the device which format to use.
            this.dev.FileFormat = format;
            canSaveToFile = true;
            break;
        }
    }
    
    if (canSaveToFile == false)
    {
        // Be sure to close the device connection.
        this.dev.Close();
        MessageBox.Show(this, "This device doesn't allow saving to TIFF.");
        return;
    }
    
    // Acquire the image to file.
    this.dev.Acquire(false, true);
}

private void OnFileTransfer(object sender, FileTransferEventArgs e)
{
    // Set the filename for this image.
    fileCount++;
    e.FileName = imageFolder + "image" + fileCount.ToString() + ".tif";
}

private void OnAcquireFinished(object sender, System.EventArgs e)
{
    // Do not forget to close the device.
    if (this.dev != null)
        this.dev.Close();
}
]]></code>

<code lang="VB" title="ScanToFileVB (Visual Basic)"><![CDATA[
' Create an instance of Acquisition and set the FileTransfer event.
Dim acquisition As Acquisition = New Acquisition(Me) 
acquisition.FileTransfer += New FileTransferEventHandler(OnFileTransfer)
 
' We use the AcquireFinished event to know when to close the device.
acquisition.AcquireFinished += New System.EventHandler(OnAcquireFinished)
 
' The call is asynchronous, so hold onto the device object.
Dim dev As Device = Nothing 
 
' A count variable used to create unique filenames.
Dim fileCount As Integer =  0 
 
Private  Sub AcquireImageToFile()
    ' We are going to acquire from the default device.
    Me.dev = Me.acquisition.Devices.Default
 
    ' You have to open the device before you can get property values.
    Me.dev.Open()
 
    ' See if the device supports the TIFF format.
    Dim formats() As SourceFileFormats = Me.dev.GetSupportedImageFormats() 
    Dim canSaveToFile As Boolean = False 
 
    Dim Format As SourceFileFormats
    For Each Format In formats
        If Format = SourceFileFormats.Tiff Then
            ' Tell the device which format to use.
            Me.dev.FileFormat = Format
            canSaveToFile = True
            Exit For
        End If
    Next
 
    If canSaveToFile = False Then
        ' Be sure to close the device connection.
        Me.dev.Close()
        MessageBox.Show(this, "This device doesn't allow saving to TIFF.")
        Return
    End If
 
    ' Acquire the image to file.
    Me.dev.Acquire(False, True)
End Sub
 
Private  Sub OnFileTransfer(ByVal sender As Object, ByVal e As FileTransferEventArgs)
    ' Set the filename for this image.
    fileCount = fileCount + 1
    e.FileName = imageFolder & "image" & fileCount.ToString() & ".tif"
End Sub
 
Private  Sub OnAcquireFinished(ByVal sender As Object, ByVal e As System.EventArgs)
    ' Do not forget to close the device.
    If Not Me.dev Is Nothing Then
        Me.dev.Close()
    End If
End Sub
]]></code>
</example>
            <example>
<code lang="CS" title="ScanToFileCS (C#)"><![CDATA[
// Create an instance of Acquisition and set the FileTransfer event.
Acquisition acquisition = new Acquisition(this);
acquisition.FileTransfer += new FileTransferEventHandler(OnFileTransfer);

// We use the AcquireFinished event to know when to close the device.
acquisition.AcquireFinished += new System.EventHandler(OnAcquireFinished);

// The call is asynchronous, so hold onto the device object.
Device dev = null;

// A count variable used to create unique filenames.
int fileCount = 0;

private void AcquireImageToFile()
{
    // We are going to acquire from the default device.
    this.dev = this.acquisition.Devices.Default;
    
    // You have to open the device before you can get property values.
    this.dev.Open();
    
    // See if the device supports the TIFF format.
    SourceFileFormats[] formats = this.dev.GetSupportedImageFormats();
    bool canSaveToFile = false;
    
    foreach(SourceFileFormats format in formats) {
        if (format == SourceFileFormats.Tiff)
        {
            // Tell the device which format to use.
            this.dev.FileFormat = format;
            canSaveToFile = true;
            break;
        }
    }
    
    if (canSaveToFile == false)
    {
        // Be sure to close the device connection.
        this.dev.Close();
        MessageBox.Show(this, "This device doesn't allow saving to TIFF.");
        return;
    }
    
    // Acquire the image to file.
    this.dev.Acquire(false, true);
}

private void OnFileTransfer(object sender, FileTransferEventArgs e)
{
    // Set the filename for this image.
    fileCount++;
    e.FileName = imageFolder + "image" + fileCount.ToString() + ".tif";
}

private void OnAcquireFinished(object sender, System.EventArgs e)
{
    // Do not forget to close the device.
    if (this.dev != null)
        this.dev.Close();
}
]]></code>

<code lang="VB" title="ScanToFileVB (Visual Basic)"><![CDATA[
' Create an instance of Acquisition and set the FileTransfer event.
Dim acquisition As Acquisition = New Acquisition(Me) 
acquisition.FileTransfer += New FileTransferEventHandler(OnFileTransfer)
 
' We use the AcquireFinished event to know when to close the device.
acquisition.AcquireFinished += New System.EventHandler(OnAcquireFinished)
 
' The call is asynchronous, so hold onto the device object.
Dim dev As Device = Nothing 
 
' A count variable used to create unique filenames.
Dim fileCount As Integer =  0 
 
Private  Sub AcquireImageToFile()
    ' We are going to acquire from the default device.
    Me.dev = Me.acquisition.Devices.Default
 
    ' You have to open the device before you can get property values.
    Me.dev.Open()
 
    ' See if the device supports the TIFF format.
    Dim formats() As SourceFileFormats = Me.dev.GetSupportedImageFormats() 
    Dim canSaveToFile As Boolean = False 
 
    Dim Format As SourceFileFormats
    For Each Format In formats
        If Format = SourceFileFormats.Tiff Then
            ' Tell the device which format to use.
            Me.dev.FileFormat = Format
            canSaveToFile = True
            Exit For
        End If
    Next
 
    If canSaveToFile = False Then
        ' Be sure to close the device connection.
        Me.dev.Close()
        MessageBox.Show(this, "This device doesn't allow saving to TIFF.")
        Return
    End If
 
    ' Acquire the image to file.
    Me.dev.Acquire(False, True)
End Sub
 
Private  Sub OnFileTransfer(ByVal sender As Object, ByVal e As FileTransferEventArgs)
    ' Set the filename for this image.
    fileCount = fileCount + 1
    e.FileName = imageFolder & "image" & fileCount.ToString() & ".tif"
End Sub
 
Private  Sub OnAcquireFinished(ByVal sender As Object, ByVal e As System.EventArgs)
    ' Do not forget to close the device.
    If Not Me.dev Is Nothing Then
        Me.dev.Close()
    End If
End Sub
]]></code>
</example>
        </member>
        <member name="E:Atalasoft.Twain.TwainController.MemoryDataTransfer">
            <summary> This event is raised during a memory transfer to allow developers to handle processing the data instead of
            DotTwain. </summary>
            <remarks> If the data is being handled, the <STRONG>DataHandled</STRONG> property must be set to
            <STRONG>true</STRONG>. </remarks>
        </member>
        <member name="E:Atalasoft.Twain.TwainController.TwainException">
            <summary> Raised when there is an exception in the <STRONG>TwainController</STRONG>.  If this event is not handled,
            the exception will be thrown instead. </summary>
        </member>
        <member name="E:Atalasoft.Twain.TwainController.MemoryFileTransfer">
            <summary> This event is raised during a memory file transfer before each image is scanned.  Use this event to
            indicate the file format for the image and provide a <STRONG>Stream</STRONG> to store the image into. </summary>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.#cctor">
            <overloads> Create a TwainController object used for low level access to Twain. </overloads>
            <example>
<code lang="CS" title="TwainControllerCS (C#)"><![CDATA[
TwainIdentity id = new TwainIdentity("My Product", "Product Line", "Manufacturer");
TwainController twain = new TwainController(this, id);

TwainReturnCode ret = twain.OpenSourceManager();
if (ret == TwainReturnCode.TWRC_FAILURE)
{
    MessageBox.Show("Failed to open the source manager.");
    twain.Dispose();
    return;
}

twain.ShowSelectSource();
twain.CloseSourceManager();

twain.Dispose();
]]></code>

<code lang="VB" title="TwainControllerVB (Visual Basic)"><![CDATA[
Dim id As TwainIdentity = New TwainIdentity("My Product", "Product Line", "Manufacturer") 
Dim twain As TwainController = New TwainController(this,id) 
 
Dim ret As TwainReturnCode = twain.OpenSourceManager() 
If ret = TwainReturnCode.TWRC_FAILURE Then
    MessageBox.Show("Failed to open the source manager.")
    twain.Dispose()
    Return
End If
 
twain.ShowSelectSource()
twain.CloseSourceManager()
 
twain.Dispose()
]]></code>
</example>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.#ctor(System.Windows.Forms.IWin32Window)">
            <summary> Creates a new instance of TwainController specifying the parent window. </summary>
            <example> _ctor Constructor </example>
            <param name="parent"> The window that will act as the parent for Twain and driver dialogs. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.#ctor(System.Windows.Forms.IWin32Window,Atalasoft.Twain.TwainIdentity)">
            <summary> Creates a new instance of TwainController specifying the parent window and application identity
            information. </summary>
            <example> _ctor Constructor </example>
            <param name="parent"> The window that will act as the parent for Twain and driver dialogs. </param>
            <param name="identity"> A <see cref="T:Atalasoft.Twain.TwainIdentity"/> containing information about the application. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.Finalize">
            <summary> Allow the TwainController to chance to clean up any resources before being collected by the garbage
            collector. </summary>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.Dispose(System.Boolean)">
            <summary> Closes any TWAIN connections and releases resources back to the system. </summary>
            <param name="isDisposing"> Indicates whether this method was called from the Dispose method or the Finalizer.
            </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.SetThreadUIControl(System.Windows.Forms.Control)">
            <summary> Sets the parent control used to invoke events from the <STRONG>TwainController</STRONG>.  This method is
            automatically called by the <see cref="T:Atalasoft.Twain.Device"/> object when acquiring images. </summary>
            <param name="threadUIControl"> The control that will be used to invoke events from the
            <STRONG>TwainController</STRONG>. </param>
        </member>
        <member name="P:Atalasoft.Twain.TwainController.LastAcquireConditionCode">
            <summary> Gets the last condition code returned from TWAIN for an acquire. </summary>
            <value> The last condition code returned from TWAIN for an acquire. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainController.BadImageInfoDetected">
            <summary> Gets a value indicating whether the driver returned an invalid TW_IMAGEINFO structure. </summary>
            <value> A value indicating if the driver returned an invalid TW_IMAGEINFO. </value>
            <remarks> <STRONG>TwainController</STRONG> will correct the information and continue the scan. </remarks>
        </member>
        <member name="P:Atalasoft.Twain.TwainController.ApplicationIdentity">
            <summary> Gets or sets the application identity sent to Twain for the session. </summary>
            <value> The application identity sent to Twain. </value>
            <remarks> This should only be set when there is no connection to Twain. </remarks>
            <exception> Thrown if the source manager is open. </exception>
        </member>
        <member name="P:Atalasoft.Twain.TwainController.SystemHasTwain">
            <summary> Gets a value indicating whether the twain_32.dll has been found on the system. </summary>
            <value> A value indicating whether the TWAIN library has been found. </value>
            <remarks> <para>This does not mean there are TWAIN compatible devices on the system.  It only checks for the
            existence of the twain_32.dll.</para>
            <para>There should only be one copy of TWAIN on the system; normally installed in the Windows folder.</para>
            </remarks>
        </member>
        <member name="P:Atalasoft.Twain.TwainController.CurrentDevice">
            <summary> Gets or sets the device to work with. </summary>
            <value> The current device being used. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainController.State">
            <summary> Gets the current Twain state. </summary>
            <value> The current Twain session state. </value>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.CreateTwainMemory(System.IntPtr)">
            <summary> Returns a new <see cref="T:Atalasoft.Twain.TwainMemory"/> class for the specified pointer. </summary>
            <returns> A <see cref="T:Atalasoft.Twain.TwainMemory"/> object used to manipulate the memory. </returns>
            <param name="pointer"> A pointer retrieved from a TWAIN device.  This can be <STRONG>IntPtr.Zero</STRONG> to create
            an empty <see cref="T:Atalasoft.Twain.TwainMemory"/> object. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.FreeTwainMemory(System.IntPtr)">
            <summary> Release memory allocated for TWAIN. </summary>
            <remarks> If this pointer owned by a <see cref="T:Atalasoft.Twain.TwainMemory"/> object, the <STRONG>TwainMemory</STRONG> object will
            be disposed. </remarks>
            <param name="pointer"> The pointer to free. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.ReadTwainContainerData(Atalasoft.Twain.TwainContainer,Atalasoft.Twain.TwainMemory)">
            <remarks> This method is useful when working with custom <see cref="T:Atalasoft.Twain.ITwainDataStructure"/> objects. </remarks>
            <summary> Returns the value of a memory pointer retrieved from a device. </summary>
            <returns> The value of the data.  This may be an array of objects. </returns>
            <param name="container"> Indicates the type of container contained in the data parameter. </param>
            <param name="memory"> The <see cref="T:Atalasoft.Twain.TwainMemory"/> containing the data. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.ReadTwainContainerData(Atalasoft.Twain.TwainContainer,System.IntPtr)">
            <remarks> This method is useful when working with custom <see cref="T:Atalasoft.Twain.ITwainDataStructure"/> objects. </remarks>
            <summary> Returns the value of a memory pointer retrieved from a device. </summary>
            <returns> The value of the data.  This may be an array of objects. </returns>
            <param name="container"> Indicates the type of container contained in the data parameter. </param>
            <param name="data"> A pointer to the container. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.Dispose">
            <summary> Closes any TWAIN connections and releases resources back to the system. </summary>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.OpenSourceManager">
            <example> ShowSelectSource </example>
            <summary> Opens a connection to the TWAIN Source Manager. </summary>
            <returns> The return code from the TWAIN OPENDSM operation. </returns>
            <remarks> A connection to the source manager must be made before calling <see cref="M:Atalasoft.Twain.TwainController.OpenSource"/> or
            <see cref="M:Atalasoft.Twain.TwainController.OpenSource(Atalasoft.Twain.TwainIdentity)"/>.
            <see cref="M:Atalasoft.Twain.TwainController.CloseSourceManager"/> must be called to close the connection when finished with it.
            </remarks>
            <exception> Thrown if the source manager is already open. </exception>
            <exception> Thrown if the parent window is null. </exception>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.CloseSourceManager">
            <example> ShowSelectSource </example>
            <summary> Use to close the source manager and release Twain. </summary>
            <returns> The result code from Twain. </returns>
            <remarks> You must close the source manager when you are finished with the Twain session. </remarks>
            <exception> Thrown if the current state is not SourceManagerOpen. </exception>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.ShowSelectSource">
            <example> ShowSelectSource </example>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.GetTwainDevices">
            <summary> Returns an array of <see cref="T:Atalasoft.Twain.TwainIdentity" /> classes; one for each Twain compatible device found on the
            system. </summary>
            <returns> An array of devices found on the system. </returns>
            <example>
<code lang="CS" title="GetTwainDevicesCS (C#)"><![CDATA[
TwainController twain = new TwainController(this);
twain.OpenSourceManager();
TwainIdentity[] devs = twain.GetTwainDevices();

foreach (TwainIdentity id in devs)
{
    if (id.ProductName.StartsWith("Fujitsu"))
    {
        // .....
    }
}

// .......

twain.CloseSourceManager();
twain.Dispose();
]]></code>

<code lang="VB" title="GetTwainDevicesVB (Visual Basic)"><![CDATA[
Dim twain As TwainController = New TwainController(Me) 
twain.OpenSourceManager()
Dim devs() As TwainIdentity = twain.GetTwainDevices() 

Dim id As TwainIdentity
For Each (id In devs)
{
    If id.ProductName.StartsWith("Fujitsu") Then
        ' .....
    End If
}
 
' .......
 
twain.CloseSourceManager()
twain.Dispose()
]]></code>
</example>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.GetDefaultDevice">
            <summary> Returns the identity of the default system device. </summary>
            <returns> The default system device identity. </returns>
            <remarks> The default device can be changed by the user with the <see cref="M:Atalasoft.Twain.TwainController.ShowSelectSource"/>
            method.  Use <see cref="M:Atalasoft.Twain.TwainController.GetTwainDevices"/> to get a list of all Twain compatible devices on the
            system. </remarks>
            <exception> Thrown if the source manager is not open. </exception>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.RegisterTwainCallback(Atalasoft.Twain.TwainDeviceCallbackEventHandler)">
            <summary> <para>Sets up a callback for TWAIN device messages instead of using the traditional message loop.  This should only be
            called when using the <STRONG>TwainController</STRONG> directly; the <see cref="T:Atalasoft.Twain.Device"/> object automatically
            handles the callback.</para>
            <para>The callback feature is only supported when using the TWAIN 2.0 Data Source Manager</para> </summary>
            <remarks> When using a callback, this method must be called after <see cref="M:Atalasoft.Twain.TwainController.OpenSource"/>
            or <see cref="M:Atalasoft.Twain.TwainController.OpenSource(Atalasoft.Twain.TwainIdentity)"/>.
            The callback is no longer valid after <see cref="M:Atalasoft.Twain.TwainController.CloseSource"/>. </remarks>
            <param name="callback"> An event handler to use for the callback. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.OpenSource">
            <summary> Opens a connection to the <see cref="P:Atalasoft.Twain.TwainController.CurrentDevice"/>. </summary>
            <exception> Thrown if the current state is not SourceManagerOpen. </exception>
            <remarks> <para>If the <see cref="P:Atalasoft.Twain.TwainController.CurrentDevice"/> property has not been set, the system default
            device will be used.</para>
            <para><see cref="M:Atalasoft.Twain.TwainController.CloseSource"/> must be called when you are finished with the device.</para>
            </remarks>
            <returns> The return code from the source manager. </returns>
            <overloads> Use this method to open a connection to the <see cref="P:Atalasoft.Twain.TwainController.CurrentDevice"/> or a device
            passed in as a parameter. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.OpenSource(Atalasoft.Twain.TwainIdentity)">
            <summary> Opens a connection to the device passed in. </summary>
            <exception> Thrown if the current state is not SourceManagerOpen. </exception>
            <exception> Thrown if the deviceIdentity parameter is null. </exception>
            <remarks> <see cref="M:Atalasoft.Twain.TwainController.CloseSource"/> must be called when you are finished with the device. </remarks>
            <returns> The return code from the source manager. </returns>
            <param name="deviceIdentity"> The device to open. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.CloseSource">
            <summary> Use this method to close the connection to the device. </summary>
            <returns> The result code returned from the driver. </returns>
            <remarks> You must close the connection when you are finished with the device. </remarks>
            <exception> Thrown if the current state is not SourceOpen. </exception>
            <exception> Thrown if the current device has not been set. </exception>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.SetExtendedImageInfoOptions(Atalasoft.Twain.TwainExtendedImageInfoID[])">
            <summary> Sets the extended image information id values that will be retrieved when acquiring data. </summary>
            <seealso cref="T:Atalasoft.Twain.TwainExtendedImageInformation"/>
            <seealso cref="T:Atalasoft.Twain.TwainDataTransferEventArgs"/>
            <seealso cref="E:Atalasoft.Twain.TwainController.BeforeTwainDataTransfer"/>
            <remarks> The device must support the <STRONG>ICAP_EXTIMAGEINFO</STRONG> capability to use this feature. </remarks>
            <param name="info"> An array of <see cref="T:Atalasoft.Twain.TwainExtendedImageInfoID"/> values for the information to retrieve during
            an acquire. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.GetCapabilityTwainType(Atalasoft.Twain.DeviceCapability)">
            <summary> Returns the TWAIN type for the specified capability. </summary>
            <returns> The TWAIN type of the specified capability. </returns>
            <remarks> The value will default to <STRONG>TWTY_UINT16</STRONG> if the capability is unknown and
            <STRONG>DotTwain</STRONG> was unable to get the type from the driver. </remarks>
            <param name="capability"> The capability to get the type for. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.GetCapabilityType(Atalasoft.Twain.DeviceCapability)">
            <summary> Use this method to determine the .NET Type <STRONG>DotTwain</STRONG> expects for a specific capability.
            </summary>
            <remarks> Twain uses a lot of unsigned values.  However, to remain CLS compliant <STRONG>DotTwain</STRONG>
            capabilities only deal with signed value types.  This method will help to work with <STRONG>DotTwain</STRONG> in the
            low level classes so you know what value type to expect. </remarks>
            <param name="capability"> The capability to check. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.GetCapabilityValue(Atalasoft.Twain.DeviceCapability,System.Boolean@)">
            <summary> Reads a <STRONG>Boolean</STRONG> capability value. </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <returns> The code returned from the device.  If this returns <STRONG>TWRC_FAILURE</STRONG> use GetConditionCode to
            determine why the request failed. </returns>
            <example> GetCapabilityValue Method </example>
            <param name="capability"> The capability to retrieve. </param>
            <param name="value"> A Boolean that will be filled when the method returns. </param>
            <overloads> These methods are used to get the current value from a capability. </overloads>
            <example>
<code lang="CS" title="GetCapabilityValueCS (C#)"><![CDATA[
bool online = false;
TwainReturnCode ret = twain.GetCapabilityValue(DeviceCapability.CAP_DEVICEONLINE, out online);

int pixelType = 0;
ret = twain.GetCapabilityValue(DeviceCapability.ICAP_PIXELTYPE, out pixelType);

RectangleF frame = RectangleF.Empty;
ret = twain.GetCapabilityValue(DeviceCapability.ICAP_FRAMES, out frame);

float resX = 0;
ret = twain.GetCapabilityValue(DeviceCapability.ICAP_XRESOLUTION, out resX);

string halftone = "";
ret = twain.GetCapabilityValue(DeviceCapability.ICAP_HALFTONES, out halftone);
]]></code>

<code lang="VB" title="GetCapabilityValueVB (Visual Basic)"><![CDATA[
Dim online As Boolean =  False 
Dim ret As TwainReturnCode = twain.GetCapabilityValue(DeviceCapability.CAP_DEVICEONLINE, ByRef online) 
 
Dim pixelType As Integer = 0 
ret = twain.GetCapabilityValue(DeviceCapability.ICAP_PIXELTYPE, ByRef pixelType)
 
Dim frame As RectangleF = RectangleF.Empty 
ret = twain.GetCapabilityValue(DeviceCapability.ICAP_FRAMES, ByRef frame)
 
Dim resX As Single = 0 
ret = twain.GetCapabilityValue(DeviceCapability.ICAP_XRESOLUTION, ByRef resX)
 
Dim halftone As String = "" 
ret = twain.GetCapabilityValue(DeviceCapability.ICAP_HALFTONES, ByRef halftone)
]]></code>
</example>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.GetCapabilityValue(Atalasoft.Twain.DeviceCapability,System.Int32@)">
            <summary> Reads an <STRONG>Int32</STRONG> capability value. </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <returns> The code returned from the device.  If this returns <STRONG>TWRC_FAILURE</STRONG> use GetConditionCode to
            determine why the request failed. </returns>
            <example> GetCapabilityValue Method </example>
            <param name="capability"> The capability to retrieve. </param>
            <param name="value"> An Int32 that will be filled when the method returns. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.GetCapabilityValue(Atalasoft.Twain.DeviceCapability,System.Single@)">
            <summary> Reads a <STRONG>Single</STRONG> capability value. </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <returns> The code returned from the device.  If this returns <STRONG>TWRC_FAILURE</STRONG> use GetConditionCode to
            determine why the request failed. </returns>
            <example> GetCapabilityValue Method </example>
            <param name="capability"> The capability to retrieve. </param>
            <param name="value"> A Single that will be filled when the method returns. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.GetCapabilityValue(Atalasoft.Twain.DeviceCapability,System.Drawing.RectangleF@)">
            <summary> Reads a <STRONG>RectangleF</STRONG> capability value. </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <returns> The code returned from the device.  If this returns <STRONG>TWRC_FAILURE</STRONG> use GetConditionCode to
            determine why the request failed. </returns>
            <example> GetCapabilityValue Method </example>
            <param name="capability"> The capability to retrieve. </param>
            <param name="value"> A RectangleF that will be filled when the method returns. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.GetCapabilityValue(Atalasoft.Twain.DeviceCapability,System.String@)">
            <summary> Reads a <STRONG>String</STRONG> capability value. </summary>
            <exception> Thrown if a connection to the device is not open. </exception>
            <returns> The code returned from the device.  If this returns <STRONG>TWRC_FAILURE</STRONG> use GetConditionCode to
            determine why the request failed. </returns>
            <example> GetCapabilityValue Method </example>
            <param name="capability"> The capability to retrieve. </param>
            <param name="value"> A String that will be filled when the method returns. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.GetCapabilityArray(Atalasoft.Twain.DeviceCapability,System.Object[]@)">
            <summary> Retrieves an array of values to the specified capability. </summary>
            <returns> The return code sent from the driver. </returns>
            <remarks> Not all capabilities will return an array of values.  Looking at the list of
            <STRONG>GetSupported</STRONG>* methods in the <see cref="T:Atalasoft.Twain.Device" /> object will provide a list of capabilities that
            can be used. </remarks>
            <exception> Thrown if a connection to the device is not open. </exception>
            <example>
<code lang="CS" title="GetCapabilityArrayCS (C#)"><![CDATA[
object[] items;
TwainReturnCode ret = this.twain.GetCapabilityArray(DeviceCapability.ICAP_PIXELTYPE, out items);
if (ret == TwainReturnCode.TWRC_SUCCESS)
{
    ImagePixelType[] methods = new ImagePixelType[items.Length];
    for (int i = 0; i < items.Length; i++)
        methods[i] = (ImagePixelType)Convert.ToInt32(items[i]);

    return methods;
}
]]></code>

<code lang="VB" title="GetCapabilityArrayVB (Visual Basic)"><![CDATA[
Dim items() As Object
Dim ret As TwainReturnCode =  Me.twain.GetCapabilityArray(DeviceCapability.ICAP_PIXELTYPE, ByRef items) 
If (ret = TwainReturnCode.TWRC_SUCCESS Then
    Dim methods() As ImagePixelType =  New ImagePixelType(items.Length) {} 
        Dim i As Integer
        For  i = 0 To  items.Length- 1  Step  i + 1
            methods(i) = CType(Convert.ToInt32(items(i)), ImagePixelType)
        Next
 
    Return methods
End If
]]></code>
</example>
            <param name="capability"> The capability to work with. </param>
            <param name="array"> An object that will be set to the resulting array. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.SetCapabilityArray(Atalasoft.Twain.DeviceCapability,System.Object)">
            <summary> Sets an array of values for a specific capability to the device. </summary>
            <returns> The return code from the device. </returns>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if the array parameter is not a valid object array. </exception>
            <exception> Thrown if the method is unable to allocate memory needed for the operation. </exception>
            <param name="capability"> The capability being set. </param>
            <param name="array"> An array of data to send to the device. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.SetCapabilityValue(Atalasoft.Twain.DeviceCapability,System.Boolean)">
            <summary> Sets a capability to a <STRONG>Boolean</STRONG> value. </summary>
            <returns> The return code from the device. </returns>
            <exception> Thrown if a connection to the device is not open. </exception>
            <remarks> Use <see cref="M:Atalasoft.Twain.TwainController.GetCapabilityType(Atalasoft.Twain.DeviceCapability)"/> to determine the value type that should be used for a
            specific capability. </remarks>
            <param name="capability"> The capability to set. </param>
            <param name="value"> The new value for the capability. </param>
            <overloads> These methods set the value for a specific capability. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.SetCapabilityValue(Atalasoft.Twain.DeviceCapability,System.Int32)">
            <summary> Sets a capability to an <STRONG>Int32</STRONG> value. </summary>
            <returns> The return code from the device. </returns>
            <exception> Thrown if a connection to the device is not open. </exception>
            <remarks> Use <see cref="M:Atalasoft.Twain.TwainController.GetCapabilityType(Atalasoft.Twain.DeviceCapability)"/> to determine the value type that should be used for a
            specific capability. </remarks>
            <param name="capability"> The capability to set. </param>
            <param name="value"> The new value for the capability. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.SetCapabilityValue(Atalasoft.Twain.DeviceCapability,System.Single)">
            <summary> Sets a capability to a <STRONG>Single</STRONG> value. </summary>
            <returns> The return code from the device. </returns>
            <exception> Thrown if a connection to the device is not open. </exception>
            <remarks> Use <see cref="M:Atalasoft.Twain.TwainController.GetCapabilityType(Atalasoft.Twain.DeviceCapability)"/> to determine the value type that should be used for a
            specific capability. </remarks>
            <param name="capability"> The capability to set. </param>
            <param name="value"> The new value for the capability. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.SetCapabilityValue(Atalasoft.Twain.DeviceCapability,System.Drawing.RectangleF)">
            <summary> Set a capability to a <STRONG>RectangleF</STRONG> value. </summary>
            <returns> The return code from the device. </returns>
            <exception> Thrown if a connection to the device is not open. </exception>
            <remarks> Use <see cref="M:Atalasoft.Twain.TwainController.GetCapabilityType(Atalasoft.Twain.DeviceCapability)"/> to determine the value type that should be used for a
            specific capability. </remarks>
            <param name="capability"> The capability to set. </param>
            <param name="value"> The new value for the capability. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.SetCapabilityValue(Atalasoft.Twain.DeviceCapability,System.String)">
            <summary> Sets a capability to a <STRONG>String</STRONG> value. </summary>
            <returns> The return code from the device. </returns>
            <exception> Thrown if a connection to the device is not open. </exception>
            <remarks> Use <see cref="M:Atalasoft.Twain.TwainController.GetCapabilityType(Atalasoft.Twain.DeviceCapability)"/> to determine the value type that should be used for a
            specific capability. </remarks>
            <param name="capability"> The capability to set. </param>
            <param name="value"> The new value for the capability. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.ResetCapability(Atalasoft.Twain.DeviceCapability)">
            <summary> Resets a single capability to its startup value. </summary>
            <returns> The code returned by the driver. </returns>
            <remarks> Not all capabilities can be reset. </remarks>
            <param name="capability"> The capability to reset. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.ResetAllCapabilities">
            <summary> <para>Call this method to reset all capabilities supported by the device.</para> </summary>
            <remarks> <para>If the device does not supports the DG_CONTROL / DAT_CAPABILITY / MSG_RESETALL operation, each
            capability will be reset separately.</para> </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.GetConditionCode">
            <summary> Returns the condition code from the source manager. </summary>
            <returns> A condition code providing more information about the last action performed. </returns>
            <exception> Thrown if the source manager is not open. </exception>
            <overloads> Use this method to determine what caused a <STRONG>TWRC_FAILURE</STRONG> return code. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.GetConditionCode(Atalasoft.Twain.TwainIdentity)">
            <summary> Returns the condition code from the source device. </summary>
            <returns> A condition code providing more information about the last action performed. </returns>
            <exception> Thrown if the source manager is not open. </exception>
            <param name="device"> The device identity that is being accessed. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.ProcessEvent(System.Windows.Forms.Message,Atalasoft.Twain.TwainEventMessage@)">
            <summary> This method will process the <STRONG>Message</STRONG> object retrieved from
            <STRONG>PreFilterMessage</STRONG> to determine if the message should be handled by the device or passed along the
            message loop. </summary>
            <returns> The return code from the device. </returns>
            <param name="message"> The Message object from PreFilterMessage. </param>
            <param name="twainMessage"> Set to the <see cref="T:Atalasoft.Twain.TwainEventMessage"/>, indicating whether or not this is a Twain
            message. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.GetPendingTransferCount(Atalasoft.Twain.TwainTriplet)">
            <summary> Use this method to get the number of pages waiting to be acquired, reset the pending count or to end the
            current page. </summary>
            <returns> The number of pages waiting to be acquired. </returns>
            <exception> Thrown if a connection to the device is not open. </exception>
            <exception> Thrown if an invalid TwainTriplet is passed as the command. </exception>
            <param name="command"> The command to perform.  It must be the <STRONG>PendingXfersEndXfer</STRONG>,
            <STRONG>PendingXfersGet</STRONG>, <STRONG>PendingXfersReset</STRONG> or <STRONG>PendingXfersStopFeeder</STRONG>
            command. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.InitiateDataTransfer">
            <summary> Use this method to have DotTwain handle the data acquisition details. </summary>
            <remarks> This should be called when the <STRONG>MSG_XFERREADY</STRONG> message is received to start acquiring data.
            </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.SendCommand(System.Int32,System.Int32,System.Int32,Atalasoft.Twain.TwainIdentity,Atalasoft.Twain.ITwainDataStructure)">
            <summary> Sends a command triplet that may not be contained in the <see cref="T:Atalasoft.Twain.TwainTriplet"/> enumeration.
            </summary>
            <returns> The return code received from TWAIN. </returns>
            <param name="dataGroup"> A command data group.  Normally this will be TwainDataGroupFlags.DG_CONTROL. </param>
            <param name="dataArgument"> Indicates the type of object being passed as the <EM>data</EM> parameter. </param>
            <param name="message"> The type of message being sent. </param>
            <param name="deviceIdentity"> The device, if any to send the message to.  When sending the message to the source
            manager this value should be null (Nothing in Visual Basic). </param>
            <param name="data"> A class implementing the <see cref="T:Atalasoft.Twain.ITwainDataStructure"/> interface that will retrieve or
            contains data relevant to this command. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainController.SendCommand(Atalasoft.Twain.TwainTriplet,Atalasoft.Twain.TwainIdentity,Atalasoft.Twain.ITwainDataStructure)">
            <summary> Send a command to the TWAIN API </summary>
            <returns> The return code received from TWAIN </returns>
            <param name="command"> The command to send. </param>
            <param name="deviceIdentity"> The device to send the message to, or null (Nothing) to send a command to the Data Source
            Manager. </param>
            <param name="data"> A class implementing the <see cref="T:Atalasoft.Twain.ITwainDataStructure"/> interface that will retrieve or
            contains data relevant to this command. </param>
        </member>
        <member name="T:Atalasoft.Twain.TwainItemType">
            <summary> Specifies the item type used for item data in TWAIN. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainItemType.TWTY_INT8">
            <summary> A signed 8-bit integer. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainItemType.TWTY_INT16">
            <summary> A signed 16-bit integer. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainItemType.TWTY_INT32">
            <summary> A signed 32-bit integer. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainItemType.TWTY_UINT8">
            <summary> An unsigned 8-bit integer. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainItemType.TWTY_UINT16">
            <summary> An unsigned 16-bit integer. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainItemType.TWTY_UINT32">
            <summary> An unsigned 32-bit integer. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainItemType.TWTY_BOOL">
            <summary> A boolean. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainItemType.TWTY_FIX32">
            <summary> A TW_FIX32 structure. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainItemType.TWTY_FRAME">
            <summary> A TW_FRAME structure. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainItemType.TWTY_STR32">
            <summary> A string with a maximum of 34 characters, including a null terminator. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainItemType.TWTY_STR64">
            <summary> A string with a maximum of 66 characters, including a null terminator. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainItemType.TWTY_STR128">
            <summary> A string with a maximum of 130 characters, including a null terminator. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainItemType.TWTY_STR255">
            <summary> A string with a maximum of 256 characters, including a null terminator. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainItemType.TWTY_STR1024">
            <summary> A string with a maximum of 1026 characters, including a null terminator. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainItemType.TWTY_UNI512">
            <summary> A Unicode string with a maximum of 512 characters, including a null terminator. </summary>
        </member>
        <member name="F:Atalasoft.Twain.TwainItemType.TWTY_HANDLE">
            <summary> Handle to a data. </summary>
        </member>
        <member name="T:Atalasoft.Twain.TwainManager">
            <summary> <para>The <STRONG>TwainManager</STRONG> class is used to control which version of TWAIN is used by
            DotTwain.</para>
            <para>TWAIN 2.x (twaindsm.dll) will be used by default if it exists on the system, otherwise TWAIN version 1.x
            (twain_32.dll) is used.  Some drivers will not work with TWAIN 2.x, such as WIA drivers.  To use these drivers you
            can force DotTwain to use version 1.x by setting the <see cref="P:Atalasoft.Twain.TwainManager.ForceTwain1xBehavior"/> property to
            <STRONG>true</STRONG> before creating an instance of <see cref="T:Atalasoft.Twain.Acquisition"/> or <see
            cref="T:Atalasoft.Twain.TwainController"/>.</para> </summary>
            <remarks> In order to use TWAIN 2.0, you must download and distribute the <STRONG>TWAIN 2.0 Data Source
            Manager</STRONG> with your application.  Visit <A href="http://www.twain.org">http://www.twain.org</A> to
            download the DSM and install it with your application in the client's system folder, making sure not to overwrite a
            more recent version. </remarks>
        </member>
        <member name="P:Atalasoft.Twain.TwainManager.TwainExists">
            <summary> Gets a value indicating whether TWAIN has been found on the system. </summary>
            <value> A value indicating if TWAIN exists on the system. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainManager.TwainLibraryVersion">
            <summary> Gets the latest version of TWAIN on the system. </summary>
            <value> The latest version of TWAIN on the system. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainManager.TwainLibraryLocation">
            <summary> Returns the full path to the TWAIN library being used by <STRONG>DotTwain</STRONG>. </summary>
            <value> The full path to the TWAIN library. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainManager.ForceTwain1xBehavior">
            <summary> Gets or sets a value used to indicate whether DotTwain should use TWAIN 1.x, even if TWAIN 2.x is on the
            system. </summary>
            <value> A value indicating whether DotTwain should use TWAIN 1.x. </value>
            <remarks> If TWAIN 2.x is not found on the system, DotTwain will automatically use TWAIN 1.x and setting this
            property will have no effect. </remarks>
        </member>
        <member name="T:Atalasoft.Twain.TwainMemory">
            <summary> This class represents a memory object passed into TWAIN or returned from TWAIN. </summary>
            <example> ITwainDataStructure Interface </example>
            <remarks> This class is provided as a parameter for <see cref="T:Atalasoft.Twain.ITwainDataStructure"/> methods, allowing objects
            passed into the <see cref="M:Atalasoft.Twain.TwainController.SendCommand(Atalasoft.Twain.TwainTriplet,Atalasoft.Twain.TwainIdentity,Atalasoft.Twain.ITwainDataStructure)"/> methods to be written or read. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.Finalize">
            <summary> Called by .NET when the object is being destroyed. </summary>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.Dispose">
            <summary> Releases the memory used by the object. </summary>
            <remarks> 
            The <see cref="M:Atalasoft.Twain.TwainController.SendCommand(Atalasoft.Twain.TwainTriplet,Atalasoft.Twain.TwainIdentity,Atalasoft.Twain.ITwainDataStructure)"/> method will deal
            with disposing the <STRONG>TwainMemory</STRONG> passed to the <see cref="T:Atalasoft.Twain.ITwainDataStructure"/> methods. </remarks>
            <overloads> Releases the memory used by the object. </overloads>
        </member>
        <member name="P:Atalasoft.Twain.TwainMemory.IsLocked">
            <summary> Gets a value indicating whether the memory is currently locked. </summary>
            <value> A value indicating if the memory is currently locked. </value>
            <remarks> Call <see cref="M:Atalasoft.Twain.TwainMemory.Lock"/> to lock the memory and <see cref="M:Atalasoft.Twain.TwainMemory.Unlock"/> when finished
            reading or writing to the memory. </remarks>
        </member>
        <member name="P:Atalasoft.Twain.TwainMemory.MemorySize">
            <summary> Gets the size of the memory in bytes. </summary>
            <value> The size of the memory in bytes. </value>
        </member>
        <member name="P:Atalasoft.Twain.TwainMemory.Pointer">
            <summary> Gets the pointer of the memory.  If the <STRONG>TwainMemory</STRONG> is locked, this will return the
            locked pointer. </summary>
            <value> The pointer to the memory. </value>
            <remarks> Do not read or write to this pointer unless the <see cref="P:Atalasoft.Twain.TwainMemory.IsLocked"/> property is true.
            </remarks>
        </member>
        <member name="P:Atalasoft.Twain.TwainMemory.Position">
            <summary> Gets or sets the current position within the memory. </summary>
            <value> The current position within the memory. </value>
            <remarks> Some read and write methods will modify the position automatically, allowing for ease of use. </remarks>
            <exception> Thrown if the value is invalid for the current memory allocation. </exception>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.Create">
            <summary> Returns a new <STRONG>TwainMemory</STRONG> object with no memory allocated. </summary>
            <returns> A new empty <STRONG>TwainMemory</STRONG> object. </returns>
            <overloads> These methods can be used to create a new TwainMemory object that is tied to the current object.
            </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.Create(System.IntPtr)">
            <summary> Creates a new <STRONG>TwainMemory</STRONG> object for a pointer returned from TWAIN. </summary>
            <returns> A new <STRONG>TwainMemory</STRONG> object. </returns>
            <param name="pointer"> A pointer returned from TWAIN. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.Allocate(System.Int32)">
            <summary> Call this method to allocate memory for this object.  If memory has already been allocated, it will be
            released before allocation new memory. </summary>
            <example> ITwainDataStructure Interface </example>
            <exception> Thrown if the memorySize argument is less than or equal to zero. </exception>
            <exception> Thrown if the allocation failed. </exception>
            <param name="memorySize"> The number of bytes to allocate. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.Lock">
            <summary> Locks the moveable memory for read / write operations. </summary>
            <remarks> If a Read* or Write* method is called, these methods will automatically lock, perform the operation and
            unlock the memory.  However, if reading or writing multiple values it's better to call <STRONG>Lock</STRONG> and
            <see cref="M:Atalasoft.Twain.TwainMemory.Unlock"/> manually. </remarks>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.Unlock">
            <remarks> If a Read* or Write* method is called, these methods will automatically lock, perform the operation and
            unlock the memory.  However, if reading or writing multiple values it's better to call <see
            cref="M:Atalasoft.Twain.TwainMemory.Lock"/> and <STRONG>Unlock</STRONG> manually. </remarks>
            <summary> Unlocks the moveable memory when finished reading or writing. </summary>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.Copy(System.IntPtr,System.IntPtr,System.Int32)">
            <summary> Copies memory from one pointer to another. </summary>
            <param name="destination"> The pointer when data will be copied to. </param>
            <param name="source"> The pointer containing data to be copied from. </param>
            <param name="length"> The number of bytes to copy. </param>
            <overloads> These methods copy memory from one pointer to another. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.Copy(System.IntPtr,System.Byte[])">
            <summary> Copies a byte array into a pointer. </summary>
            <param name="destination"> The pointer to copy the data into. </param>
            <param name="source"> The byte array to copy. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.Copy(System.Byte[],System.IntPtr)">
            <summary> Copies data from a pointer into a byte array. </summary>
            <param name="destination"> The byte array to fill. </param>
            <param name="source"> The pointer to copy from. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.Write(System.Byte[])">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the Position is invalid for writing this data. </exception>
            <remarks> This method will increase the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> by the number of bytes in <EM>array</EM>.
            </remarks>
            <summary> Writes a byte array into the memory at the current <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> and advances the
            position. </summary>
            <exception> Thrown if the array is null (Nothing in VB). </exception>
            <param name="array"> The byte array to write. </param>
            <overloads> These methods write a byte array into the memory. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.Write(System.Byte[],System.Int64)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the offset is invalid for this TwainMemory object. </exception>
            <remarks> This method does not change the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> of the <STRONG>TwainMemory</STRONG>
            object. </remarks>
            <summary> Writes a byte array into the memory at the specified memory offset. </summary>
            <exception> Thrown if the array is null (Nothing in VB). </exception>
            <param name="array"> The byte array to write. </param>
            <param name="offset"> The number of bytes from the beginning of the memory to the start of the data. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.WriteInt8(System.SByte)">
            <summary> Writes a <STRONG>TW_INT8</STRONG> to the memory at the current <see cref="P:Atalasoft.Twain.TwainMemory.Position"/>.
            </summary>
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if there is not enough space to write the data. </exception>
            <param name="value"> The value to write. </param>
            <overloads> These methods write a <STRONG>TW_INT8</STRONG> to the memory. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.WriteInt8(System.SByte,System.Int64)">
            <summary> Writes a <STRONG>TW_INT8</STRONG> to the specified offset. </summary>
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the offset is invalid for the TwainMemory. </exception>
            <param name="value"> The value to write. </param>
            <param name="offset"> The number of bytes from the beginning of the memory to the start of the data. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.WriteUInt8(System.Byte)">
            <summary> Writes a <STRONG>TW_UINT8</STRONG> to the current <see cref="P:Atalasoft.Twain.TwainMemory.Position"/>. </summary>
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if there is not enough space to write the data. </exception>
            <param name="value"> The value to write. </param>
            <overloads> These methods write a <STRONG>TW_UINT8</STRONG> to the memory. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.WriteUInt8(System.Byte,System.Int64)">
            <summary> Writes a <STRONG>TW_UINT8</STRONG> to the specified offset. </summary>
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the offset is invalid for the TwainMemory. </exception>
            <param name="value"> The value to write. </param>
            <param name="offset"> The number of bytes from the beginning of the memory to the start of the data. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.WriteInt32(System.Int32)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the Position is invalid for writing this data. </exception>
            <remarks> This method will increase the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> by 4 bytes. </remarks>
            <summary> Writes a <STRONG>TW_INT32</STRONG> into the memory at the current <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> and
            advances the position. </summary>
            <param name="value"> The value to write. </param>
            <overloads> These methods write a <STRONG>TW_INT32</STRONG> into memory. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.WriteInt32(System.Int32,System.Int64)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the offset is invalid for this TwainMemory object. </exception>
            <remarks> This method does not change the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> of the <STRONG>TwainMemory</STRONG>
            object. </remarks>
            <summary> Writes a <STRONG>TW_INT32</STRONG> to memory at the specified memory offset. </summary>
            <param name="value"> The value to write. </param>
            <param name="offset"> The number of bytes from the beginning of the memory to the start of the data. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.WriteUInt32(System.UInt32)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the Position is invalid for writing this data. </exception>
            <remarks> This method will increase the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> by 4 bytes. </remarks>
            <summary> Writes a <STRONG>TW_UINT32</STRONG> into the memory at the current <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> and
            advances the position. </summary>
            <param name="value"> The value to write. </param>
            <overloads> These methods write a <STRONG>TW_UINT32</STRONG> into the memory. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.WriteUInt32(System.UInt32,System.Int64)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the offset is invalid for this TwainMemory object. </exception>
            <remarks> This method does not change the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> of the <STRONG>TwainMemory</STRONG>
            object. </remarks>
            <summary> Writes a <STRONG>TW_UINT32</STRONG> to memory at the specified memory offset. </summary>
            <param name="value"> The value to write. </param>
            <param name="offset"> The number of bytes from the beginning of the memory to the start of the data. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.WriteInt16(System.Int16)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the Position is invalid for writing this data. </exception>
            <remarks> This method will increase the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> by 2 bytes. </remarks>
            <summary> Writes a <STRONG>TW_INT16</STRONG> into the memory at the current <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> and
            advances the position. </summary>
            <param name="value"> The value to write. </param>
            <overloads> These methods write a <STRONG>TW_INT16</STRONG> into memory. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.WriteInt16(System.Int16,System.Int64)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the offset is invalid for this TwainMemory object. </exception>
            <remarks> This method does not change the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> of the <STRONG>TwainMemory</STRONG>
            object. </remarks>
            <summary> Writes a <STRONG>TW_INT16</STRONG> to memory at the specified memory offset. </summary>
            <param name="value"> The value to write. </param>
            <param name="offset"> The number of bytes from the beginning of the memory to the start of the data. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.WriteUInt16(System.UInt16)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the Position is invalid for writing this data. </exception>
            <remarks> This method will increase the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> by 2 bytes. </remarks>
            <summary> Writes a <STRONG>TW_UINT16</STRONG> into the memory at the current <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> and
            advances the position. </summary>
            <param name="value"> The value to write. </param>
            <overloads> These methods write a <STRONG>TW_UINT16</STRONG> into the memory. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.WriteUInt16(System.UInt16,System.Int64)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the offset is invalid for this TwainMemory object. </exception>
            <remarks> This method does not change the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> of the <STRONG>TwainMemory</STRONG>
            object. </remarks>
            <summary> Writes a <STRONG>TW_UINT16</STRONG> to memory at the specified memory offset. </summary>
            <param name="value"> The value to write. </param>
            <param name="offset"> The number of bytes from the beginning of the memory to the start of the data. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.WriteBoolean(System.Boolean)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the Position is invalid for writing this data. </exception>
            <remarks> This method will increase the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> by 2 bytes. </remarks>
            <summary> Writes a <STRONG>TW_BOOL</STRONG> into the memory at the current <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> and
            advances the position. </summary>
            <param name="value"> The value to write. </param>
            <overloads> These methods write a <STRONG>TW_BOOL</STRONG> into memory. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.WriteBoolean(System.Boolean,System.Int64)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the offset is invalid for this TwainMemory object. </exception>
            <remarks> This method does not change the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> of the <STRONG>TwainMemory</STRONG>
            object. </remarks>
            <summary> Writes a <STRONG>TW_BOOL</STRONG> to memory at the specified memory offset. </summary>
            <param name="value"> The value to write. </param>
            <param name="offset"> The number of bytes from the beginning of the memory to the start of the data. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.WriteString(System.String,Atalasoft.Twain.TwainItemType)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the Position is invalid for writing this data. </exception>
            <remarks> This method will increase the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> by the number of bytes
            <EM>stringType</EM> requires. </remarks>
            <summary> Writes a <STRONG>TW_STR32</STRONG>, <STRONG>TW_STR64</STRONG>, <STRONG>TW_STR128</STRONG>,
            <STRONG>TW_STR255</STRONG>, <STRONG>TW_STR1024 </STRONG>or<STRONG> TW_UNI512</STRONG> into memory at the current
            position and advances the position. </summary>
            <param name="value"> The value to write.  If this value is null (Nothing in VB), an empty string is written.
            </param>
            <param name="stringType"> <para>The TWAIN string item type to write.  </para>
            <para>If an string type other than <STRONG>TWTY_STR32</STRONG>, <STRONG>TWTY_STR64</STRONG>,
            <STRONG>TWTY_STR128</STRONG>, <STRONG>TWTY_STR255</STRONG>, <STRONG>TWTY_STR1024 </STRONG>or<STRONG>
            TWTY_UNI512</STRONG> is provided, nothing will be written.</para> </param>
            <overloads> These methods write a <STRONG>TW_STR32</STRONG>, <STRONG>TW_STR64</STRONG>, <STRONG>TW_STR128</STRONG>,
            <STRONG>TW_STR255</STRONG>, <STRONG>TW_STR1024 </STRONG>or<STRONG> TW_UNI512</STRONG> into memory. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.WriteString(System.String,Atalasoft.Twain.TwainItemType,System.Int64)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the offset is invalid for this TwainMemory object. </exception>
            <remarks> This method does not change the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> of the <STRONG>TwainMemory</STRONG>
            object. </remarks>
            <summary> Writes a <STRONG>TW_STR32</STRONG>, <STRONG>TW_STR64</STRONG>, <STRONG>TW_STR128</STRONG>,
            <STRONG>TW_STR255</STRONG>, <STRONG>TW_STR1024 </STRONG>or<STRONG> TW_UNI512</STRONG> into memory at the specified
            offset. </summary>
            <param name="value"> The value to write.  If this value is null (Nothing in VB), an empty string is written.
            </param>
            <param name="stringType"> <para>The TWAIN string item type to write.  </para>
            <para>If an item type other than <STRONG>TWTY_STR32</STRONG>, <STRONG>TWTY_STR64</STRONG>,
            <STRONG>TWTY_STR128</STRONG>, <STRONG>TWTY_STR255</STRONG>, <STRONG>TWTY_STR1024 </STRONG>or<STRONG>
            TWTY_UNI512</STRONG> is provided, nothing will be written.</para> </param>
            <param name="offset"> The number of bytes from the beginning of the memory to the start of the data. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.WriteIntPtr(System.IntPtr)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the Position is invalid for writing this data. </exception>
            <remarks> This method will increase the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> by <STRONG>IntPtr.Size</STRONG> bytes.
            </remarks>
            <summary> Writes a <STRONG>TW_HANDLE</STRONG> into the memory at the current <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> and
            advances the position. </summary>
            <param name="value"> The value to write. </param>
            <overloads> These methods write a <STRONG>TW_HANDLE</STRONG> into the memory. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.WriteIntPtr(System.IntPtr,System.Int64)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the offset is invalid for this TwainMemory object. </exception>
            <remarks> This method does not change the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> of the <STRONG>TwainMemory</STRONG>
            object. </remarks>
            <summary> Writes a <STRONG>TW_HANDLE</STRONG> to memory at the specified memory offset. </summary>
            <param name="value"> The value to write. </param>
            <param name="offset"> The number of bytes from the beginning of the memory to the start of the data. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.WriteStructure(System.Object)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the Position is invalid for writing this data. </exception>
            <remarks> This method will increase the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> by the number of bytes <EM>structure</EM>
            requires. </remarks>
            <summary> Writes a structure into the memory at the current <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> and advances the
            position. </summary>
            <exception> Thrown if the structure is null (Nothing in VB). </exception>
            <returns> The number of bytes written. </returns>
            <param name="structure"> The structure to write. </param>
            <overloads> These methods write a structure into the memory. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.WriteStructure(System.Object,System.Int64)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the offset is invalid for this TwainMemory object. </exception>
            <remarks> This method does not change the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> of the <STRONG>TwainMemory</STRONG>
            object. </remarks>
            <summary> Writes a structure to memory at the specified memory offset. </summary>
            <exception> Thrown if the structure is null (Nothing in VB). </exception>
            <param name="structure"> The structure to write. </param>
            <param name="offset"> The number of bytes from the beginning of the memory to the start of the data. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.ReadTwainMemory">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the Position is invalid for reading this data. </exception>
            <remarks> This method will increase the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> by <STRONG>IntPtr.Size</STRONG> bytes.
            </remarks>
            <summary> Reads a <STRONG>TW_HANDLE</STRONG> from the current <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> and advances the
            position. </summary>
            <returns> A <STRONG>TwainMemory</STRONG> object representing a pointer to the TWAIN data. </returns>
            <overloads> These methods read a <STRONG>TW_HANDLE</STRONG> from the memory. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.ReadTwainMemory(System.Int64)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the offset is invalid for this TwainMemory object. </exception>
            <remarks> This method does not change the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> of the <STRONG>TwainMemory</STRONG>
            object. </remarks>
            <summary> Reads a <STRONG>TW_HANDLE</STRONG> from the specified memory offset. </summary>
            <returns> The <STRONG>IntPtr</STRONG> value at the specified offset. </returns>
            <param name="offset"> The number of bytes from the beginning of the memory to the start of the data. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.ReadInt32">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the Position is invalid for reading this data. </exception>
            <remarks> This method will increase the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> by 4 bytes. </remarks>
            <summary> Reads a <STRONG>TW_INT32</STRONG> from the current <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> and advances the
            position. </summary>
            <returns> The <STRONG>int </STRONG>value<STRONG> </STRONG>at the current position. </returns>
            <overloads> These methods read a <STRONG>TW_INT32</STRONG> from the memory. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.ReadInt32(System.Int64)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the offset is invalid for this TwainMemory object. </exception>
            <remarks> This method does not change the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> of the <STRONG>TwainMemory</STRONG>
            object. </remarks>
            <summary> Reads a <STRONG>TW_INT32</STRONG> from the specified memory offset. </summary>
            <returns> The <STRONG>int</STRONG> value at the specified offset. </returns>
            <param name="offset"> The number of bytes from the beginning of the memory to the start of the data. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.ReadInt8">
            <summary> Reads a <STRONG>TW_INT8</STRONG> from the current <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> and advances the
            position. </summary>
            <returns> The signed byte value at the current position. </returns>
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the Position is invalid to read this data. </exception>
            <overloads> These methods read a TW_INT8 from the memory. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.ReadInt8(System.Int64)">
            <summary> Reads a <STRONG>TW_INT8</STRONG> from the specified offset. </summary>
            <returns> The signed byte at the specified offset. </returns>
            <exception> Thrown if the TwainMemory object has been disposed. </exception>
            <exception> Thrown if the offset is invalid for the TwainMemory object. </exception>
            <param name="offset"> The number of bytes from the beginning of the memory to the start of the data. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.ReadUInt8">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the Position is invalid for this TwainMemory object. </exception>
            <summary> Reads a <STRONG>TW_UINT8</STRONG> from the current <see cref="P:Atalasoft.Twain.TwainMemory.Position"/>. </summary>
            <returns> The byte at the current Position. </returns>
            <overloads> These methods read a <STRONG>TW_UINT8</STRONG> from the memory. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.ReadUInt8(System.Int64)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the offset is invalid for the TwainMemory object. </exception>
            <returns> The byte at the specified offset. </returns>
            <summary> Reads a <STRONG>TW_UINT8</STRONG> from the specified offset. </summary>
            <param name="offset"> The number of bytes from the beginning of the memory to the start of the data. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.ReadUInt32">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the Position is invalid for reading this data. </exception>
            <remarks> This method will increase the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> by 4 bytes. </remarks>
            <summary> Reads a <STRONG>TW_UINT32</STRONG> from the current <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> and advances the
            position. </summary>
            <returns> The <STRONG>uint</STRONG> value at the current position. </returns>
            <overloads> These methods read a <STRONG>TW_UINT32</STRONG> from the memory. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.ReadUInt32(System.Int64)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the offset is invalid for this TwainMemory object. </exception>
            <remarks> This method does not change the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> of the <STRONG>TwainMemory</STRONG>
            object. </remarks>
            <summary> Reads a <STRONG>TW_UINT32</STRONG> from the specified memory offset. </summary>
            <returns> The <STRONG>uint</STRONG> value at the specified offset. </returns>
            <param name="offset"> The number of bytes from the beginning of the memory to the start of the data. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.ReadInt16">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the Position is invalid for reading this data. </exception>
            <remarks> This method will increase the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> by 2 bytes. </remarks>
            <summary> Reads a <STRONG>TW_INT16</STRONG> from the current <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> and advances the
            position. </summary>
            <returns> The <STRONG>short</STRONG> value at the current position. </returns>
            <overloads> These methods read a <STRONG>TW_INT16</STRONG> from the memory. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.ReadInt16(System.Int64)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the offset is invalid for this TwainMemory object. </exception>
            <remarks> This method does not change the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> of the <STRONG>TwainMemory</STRONG>
            object. </remarks>
            <summary> Reads a <STRONG>TW_INT16</STRONG> from the specified memory offset. </summary>
            <returns> The <STRONG>short</STRONG> value at the specified offset. </returns>
            <param name="offset"> The number of bytes from the beginning of the memory to the start of the data. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.ReadUInt16">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the Position is invalid for reading this data. </exception>
            <remarks> This method will increase the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> by 2 bytes. </remarks>
            <summary> Reads a <STRONG>TW_UINT16</STRONG> from the current <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> and advances the
            position. </summary>
            <returns> The <STRONG>ushort</STRONG> value at the current position. </returns>
            <overloads> These methods read a <STRONG>TW_UINT16</STRONG> from the memory. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.ReadUInt16(System.Int64)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the offset is invalid for this TwainMemory object. </exception>
            <remarks> This method does not change the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> of the <STRONG>TwainMemory</STRONG>
            object. </remarks>
            <summary> Reads a <STRONG>TW_UINT16</STRONG> from the specified memory offset. </summary>
            <returns> The <STRONG>ushort</STRONG> value at the specified offset. </returns>
            <param name="offset"> The number of bytes from the beginning of the memory to the start of the data. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.ReadBoolean">
            <summary> Reads a <STRONG>TW_BOOL</STRONG> from the current <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> and advances the
            position. </summary>
            <returns> The <STRONG>boolean</STRONG> value at the current position. </returns>
            <remarks> This method will increase the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> by 2 bytes. </remarks>
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the Position is invalid for reading this data. </exception>
            <overloads> These methods read a <STRONG>TW_BOOL</STRONG> from the memory. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.ReadBoolean(System.Int64)">
            <summary> Reads a <STRONG>TW_BOOL</STRONG> from the specified memory offset. </summary>
            <returns> A boolean value at the specified offset. </returns>
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the offset is invalid for this TwainMemory object. </exception>
            <remarks> This method does not change the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> of the <STRONG>TwainMemory</STRONG>
            object. </remarks>
            <param name="offset"> The number of bytes from the beginning of the memory to the start of the data. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.ReadIntPtr">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the Position is invalid for reading this data. </exception>
            <remarks> This method will increase the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> by <STRONG>IntPtr.Size</STRONG> bytes.
            </remarks>
            <summary> Reads a <STRONG>TW_HANDLE</STRONG> from the current <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> and advances the
            position. </summary>
            <returns> The <STRONG>IntPtr</STRONG> value at the current position. </returns>
            <overloads> These methods read a <STRONG>TW_HANDLE</STRONG> from the memory. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.ReadIntPtr(System.Int64)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the offset is invalid for this TwainMemory object. </exception>
            <remarks> This method does not change the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> of the <STRONG>TwainMemory</STRONG>
            object. </remarks>
            <summary> Reads a <STRONG>TW_HANDLE</STRONG> from the specified memory offset. </summary>
            <returns> The <STRONG>IntPtr</STRONG> value at the specified offset. </returns>
            <param name="offset"> The number of bytes from the beginning of the memory to the start of the data. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.ReadString(Atalasoft.Twain.TwainItemType)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the Position is invalid for reading this data. </exception>
            <remarks> This method will increase the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> by the number of bytes required for the
            <EM>itemType</EM>. </remarks>
            <summary> Reads a <STRONG>TW_STR32</STRONG>, <STRONG>TW_STR64</STRONG>, <STRONG>TW_STR128</STRONG>,
            <STRONG>TW_STR255</STRONG>, <STRONG>TW_STR1024 </STRONG>or<STRONG> TW_UNI512</STRONG> from the current <see
            cref="P:Atalasoft.Twain.TwainMemory.Position"/> and advances the position. </summary>
            <returns> The <STRONG>string</STRONG> value at the current position. </returns>
            <param name="itemType"> <para>The TWAIN string item type to read.  </para>
            <para>If an item type other than <STRONG>TWTY_STR32</STRONG>, <STRONG>TWTY_STR64</STRONG>,
            <STRONG>TWTY_STR128</STRONG>, <STRONG>TWTY_STR255</STRONG>, <STRONG>TWTY_STR1024 </STRONG>or<STRONG>
            TWTY_UNI512</STRONG> is provided, nothing will be read.</para> </param>
            <overloads> These methods read a <STRONG>TW_STR32</STRONG>, <STRONG>TW_STR64</STRONG>, <STRONG>TW_STR128</STRONG>,
            <STRONG>TW_STR255</STRONG>, <STRONG>TW_STR1024 </STRONG>or<STRONG> TW_UNI512</STRONG> from the memory. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.ReadString(Atalasoft.Twain.TwainItemType,System.Int64)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the offset is invalid for this TwainMemory object. </exception>
            <remarks> This method does not change the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> of the <STRONG>TwainMemory</STRONG>
            object. </remarks>
            <summary> Reads a <STRONG>TW_STR32</STRONG>, <STRONG>TW_STR64</STRONG>, <STRONG>TW_STR128</STRONG>,
            <STRONG>TW_STR255</STRONG>, <STRONG>TW_STR1024 </STRONG>or<STRONG> TW_UNI512</STRONG> from the specified memory
            offset. </summary>
            <returns> The <STRONG>string</STRONG> value at the specified offset. </returns>
            <param name="itemType"> <para>The TWAIN string item type to read.  </para>
            <para>If an item type other than <STRONG>TWTY_STR32</STRONG>, <STRONG>TWTY_STR64</STRONG>,
            <STRONG>TWTY_STR128</STRONG>, <STRONG>TWTY_STR255</STRONG>, <STRONG>TWTY_STR1024 </STRONG>or<STRONG>
            TWTY_UNI512</STRONG> is provided, nothing will be read.</para> </param>
            <param name="offset"> The number of bytes from the beginning of the memory to the start of the data. </param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.ReadStructure(System.Type)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the Position is invalid for reading this data. </exception>
            <remarks> This method will increase the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> by the number of bytes <EM>type</EM>
            requires. </remarks>
            <summary> Reads a structure from the current <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> and advances the position by the
            structure memory size. </summary>
            <returns> The structure read from memory. </returns>
            <exception> Thrown if the type is null (Nothing in VB). </exception>
            <param name="type"> A <STRONG>Type</STRONG> for the structure being read. </param>
            <overloads> These methods read a structure from the memory. </overloads>
        </member>
        <member name="M:Atalasoft.Twain.TwainMemory.ReadStructure(System.Type,System.Int64)">
            <exception> Thrown if the TwainMemory has been disposed. </exception>
            <exception> Thrown if the offset is invalid for this TwainMemory object. </exception>
            <remarks> This method does not change the <see cref="P:Atalasoft.Twain.TwainMemory.Position"/> of the <STRONG>TwainMemory</STRONG>
            object. </remarks>
            <summary> Reads a structure from the specified memory offset. </summary>
            <returns> The structure read from memory. </returns>
            <exception> Thrown if the type is null (Nothing in VB). </exception>
            <param name="type"> A <STRONG>Type</STRONG> for the structure being read. </param>
            <param name="offset"> The number of bytes from the beginning of the memory to the start of the data. </param>
        </member>
        <member name="T:Atalasoft.Twain.TwainMethods">
            <summary>
            Summary description for TwainMethods.
            </summary>
        </member>
        <member name="M:Atalasoft.Twain.TwainMethods.FloatToFix32(System.Single)">
            <summary>
            Convert a floating point value into a FIX32.
            </summary>
            <param name="floater">The floating point value to convert.</param>
        </member>
        <member name="M:Atalasoft.Twain.TwainMethods.Fix32ToFloat(Atalasoft.Twain.TW_FIX32)">
            <summary>
            Convert a FIX32 value into a floating point value.
            </summary>
            <param name="fix32">The TW_FIX32 to convert.</param>
            <returns></returns>
        </member>
        <member name="T:Atalasoft.Twain.Utilities">
            <summary>
            Summary description for Utilities.
            </summary>
        </member>
        <member name="M:Atalasoft.Twain.Utilities.ArrayToString(System.Byte[])">
            <summary>
            Converts a byte array into a string.
            </summary>
            <param name="array">The byte array to convert.</param>
            <returns>A string value for this array.</returns>
        </member>
    </members>
</doc>
